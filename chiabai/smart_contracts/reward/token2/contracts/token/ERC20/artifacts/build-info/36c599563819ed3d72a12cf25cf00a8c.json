{
	"id": "36c599563819ed3d72a12cf25cf00a8c",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.18",
	"solcLongVersion": "0.8.18+commit.87f61d96",
	"input": {
		"language": "Solidity",
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		},
		"sources": {
			"token2/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC20.sol\";\nimport \"./extensions/IERC20Metadata.sol\";\nimport \"../../utils/Context.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n * For a generic mechanism see {ERC20PresetMinterPauser}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n *\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n * functions have been added to mitigate the well-known issues around setting\n * allowances. See {IERC20-approve}.\n */\ncontract ERC20 is Context, IERC20, IERC20Metadata {\n    mapping(address => uint256) private _balances;\n\n    mapping(address => mapping(address => uint256)) private _allowances;\n    address private _reward;\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * The default value of {decimals} is 18. To select a different value for\n     * {decimals} you should overload it.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_, address reward_ ) {\n        _name = name_;\n        _symbol = symbol_;\n        _reward = reward_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the value {ERC20} uses, unless this function is\n     * overridden;\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual override returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual override returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual override returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `amount`.\n     */\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `amount`.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) public virtual override returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, amount);\n        _transfer(from, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\n        return true;\n    }\n\n    /**\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `spender` must have allowance for the caller of at least\n     * `subtractedValue`.\n     */\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        uint256 currentAllowance = allowance(owner, spender);\n        require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\");\n        unchecked {\n            _approve(owner, spender, currentAllowance - subtractedValue);\n        }\n\n        return true;\n    }\n\n    /**\n     * @dev Moves `amount` of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     */\n    function _transfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {\n        require(from != address(0), \"ERC20: transfer from the zero address\");\n        require(to != address(0), \"ERC20: transfer to the zero address\");\n\n        _beforeTokenTransfer(from, to, amount);\n\n        uint256 fromBalance = _balances[from];\n        require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\");\n        unchecked {\n            _balances[from] = fromBalance - amount;\n            // Overflow not possible: the sum of all balances is capped by totalSupply, and the sum is preserved by\n            // decrementing then incrementing.\n            _balances[to] += amount;\n        }\n\n        emit Transfer(from, to, amount);\n\n        _afterTokenTransfer(from, to, amount);\n    }\n\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function _mint(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: mint to the zero address\");\n\n        _beforeTokenTransfer(address(0), account, amount);\n\n        _totalSupply += amount;\n        unchecked {\n            // Overflow not possible: balance + amount is at most totalSupply + amount, which is checked above.\n            _balances[account] += amount;\n        }\n        emit Transfer(address(0), account, amount);\n\n        _afterTokenTransfer(address(0), account, amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, reducing the\n     * total supply.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens.\n     */\n    function _burn(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: burn from the zero address\");\n\n        _beforeTokenTransfer(account, address(0), amount);\n\n        uint256 accountBalance = _balances[account];\n        require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\");\n        unchecked {\n            _balances[account] = accountBalance - amount;\n            // Overflow not possible: amount <= accountBalance <= totalSupply.\n            _totalSupply -= amount;\n        }\n\n        emit Transfer(account, address(0), amount);\n\n        _afterTokenTransfer(account, address(0), amount);\n    }\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     */\n    function _approve(\n        address owner,\n        address spender,\n        uint256 amount\n    ) internal virtual {\n        require(owner != address(0), \"ERC20: approve from the zero address\");\n        require(spender != address(0), \"ERC20: approve to the zero address\");\n\n        _allowances[owner][spender] = amount;\n        emit Approval(owner, spender, amount);\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n     *\n     * Does not update the allowance amount in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Might emit an {Approval} event.\n     */\n    function _spendAllowance(\n        address owner,\n        address spender,\n        uint256 amount\n    ) internal virtual {\n        if (spender == _reward) {\n            return;\n        }\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            require(currentAllowance >= amount, \"ERC20: insufficient allowance\");\n            unchecked {\n                _approve(owner, spender, currentAllowance - amount);\n            }\n        }\n    }\n\n    /**\n     * @dev Hook that is called before any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * will be transferred to `to`.\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {}\n\n    /**\n     * @dev Hook that is called after any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * has been transferred to `to`.\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _afterTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {}\n}\n"
			},
			"token2/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			},
			"token2/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n *\n * _Available since v4.1._\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"token2/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n}\n"
			}
		}
	},
	"output": {
		"contracts": {
			"token2/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name_",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol_",
									"type": "string"
								},
								{
									"internalType": "address",
									"name": "reward_",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. The default value of {decimals} is 18. To select a different value for {decimals} you should overload it. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"token2/contracts/token/ERC20/ERC20.sol\":1401:13148  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n  mstore(0x40, 0x80)\n    /* \"token2/contracts/token/ERC20/ERC20.sol\":2004:2162  constructor(string memory name_, string memory symbol_, address reward_ ) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"token2/contracts/token/ERC20/ERC20.sol\":2088:2093  _name */\n  0x04\n    /* \"token2/contracts/token/ERC20/ERC20.sol\":2088:2101  _name = name_ */\n  tag_6\n    /* \"token2/contracts/token/ERC20/ERC20.sol\":2096:2101  name_ */\n  dup5\n    /* \"token2/contracts/token/ERC20/ERC20.sol\":2088:2093  _name */\n  dup3\n    /* \"token2/contracts/token/ERC20/ERC20.sol\":2088:2101  _name = name_ */\n  tag_7\n  jump\t// in\ntag_6:\n  pop\n    /* \"token2/contracts/token/ERC20/ERC20.sol\":2111:2118  _symbol */\n  0x05\n    /* \"token2/contracts/token/ERC20/ERC20.sol\":2111:2128  _symbol = symbol_ */\n  tag_8\n    /* \"token2/contracts/token/ERC20/ERC20.sol\":2121:2128  symbol_ */\n  dup4\n    /* \"token2/contracts/token/ERC20/ERC20.sol\":2111:2118  _symbol */\n  dup3\n    /* \"token2/contracts/token/ERC20/ERC20.sol\":2111:2128  _symbol = symbol_ */\n  tag_7\n  jump\t// in\ntag_8:\n  pop\n    /* \"token2/contracts/token/ERC20/ERC20.sol\":2138:2145  _reward */\n  0x02\n    /* \"token2/contracts/token/ERC20/ERC20.sol\":2138:2155  _reward = reward_ */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  swap3\n  swap1\n  swap3\n  and\n  swap2\n  swap1\n  swap2\n  or\n  swap1\n  sstore\n  pop\n    /* \"token2/contracts/token/ERC20/ERC20.sol\":1401:13148  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n  tag_16\n  swap1\n  pop\n  jump\n    /* \"#utility.yul\":14:141   */\ntag_10:\n    /* \"#utility.yul\":75:85   */\n  0x4e487b71\n    /* \"#utility.yul\":70:73   */\n  0xe0\n    /* \"#utility.yul\":66:86   */\n  shl\n    /* \"#utility.yul\":63:64   */\n  0x00\n    /* \"#utility.yul\":56:87   */\n  mstore\n    /* \"#utility.yul\":106:110   */\n  0x41\n    /* \"#utility.yul\":103:104   */\n  0x04\n    /* \"#utility.yul\":96:111   */\n  mstore\n    /* \"#utility.yul\":130:134   */\n  0x24\n    /* \"#utility.yul\":127:128   */\n  0x00\n    /* \"#utility.yul\":120:135   */\n  revert\n    /* \"#utility.yul\":146:986   */\ntag_11:\n    /* \"#utility.yul\":200:205   */\n  0x00\n    /* \"#utility.yul\":253:256   */\n  dup3\n    /* \"#utility.yul\":246:250   */\n  0x1f\n    /* \"#utility.yul\":238:244   */\n  dup4\n    /* \"#utility.yul\":234:251   */\n  add\n    /* \"#utility.yul\":230:257   */\n  slt\n    /* \"#utility.yul\":220:275   */\n  tag_19\n  jumpi\n    /* \"#utility.yul\":271:272   */\n  0x00\n    /* \"#utility.yul\":268:269   */\n  dup1\n    /* \"#utility.yul\":261:273   */\n  revert\n    /* \"#utility.yul\":220:275   */\ntag_19:\n    /* \"#utility.yul\":294:307   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":356:366   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":353:389   */\n  iszero\n  tag_21\n  jumpi\n    /* \"#utility.yul\":369:387   */\n  tag_21\n  tag_10\n  jump\t// in\ntag_21:\n    /* \"#utility.yul\":444:446   */\n  0x40\n    /* \"#utility.yul\":438:447   */\n  mload\n    /* \"#utility.yul\":412:414   */\n  0x1f\n    /* \"#utility.yul\":498:511   */\n  dup4\n  add\n  not(0x1f)\n    /* \"#utility.yul\":494:516   */\n  swap1\n  dup2\n  and\n    /* \"#utility.yul\":518:520   */\n  0x3f\n    /* \"#utility.yul\":490:521   */\n  add\n    /* \"#utility.yul\":486:526   */\n  and\n    /* \"#utility.yul\":474:527   */\n  dup2\n  add\n  swap1\n    /* \"#utility.yul\":542:560   */\n  dup3\n  dup3\n  gt\n    /* \"#utility.yul\":562:584   */\n  dup2\n  dup4\n  lt\n    /* \"#utility.yul\":539:585   */\n  or\n    /* \"#utility.yul\":536:608   */\n  iszero\n  tag_23\n  jumpi\n    /* \"#utility.yul\":588:606   */\n  tag_23\n  tag_10\n  jump\t// in\ntag_23:\n    /* \"#utility.yul\":628:638   */\n  dup2\n    /* \"#utility.yul\":624:626   */\n  0x40\n    /* \"#utility.yul\":617:639   */\n  mstore\n    /* \"#utility.yul\":663:665   */\n  dup4\n    /* \"#utility.yul\":655:661   */\n  dup2\n    /* \"#utility.yul\":648:666   */\n  mstore\n    /* \"#utility.yul\":685:689   */\n  0x20\n    /* \"#utility.yul\":675:689   */\n  swap3\n  pop\n    /* \"#utility.yul\":730:733   */\n  dup7\n    /* \"#utility.yul\":725:727   */\n  dup4\n    /* \"#utility.yul\":720:722   */\n  dup6\n    /* \"#utility.yul\":712:718   */\n  dup9\n    /* \"#utility.yul\":708:723   */\n  add\n    /* \"#utility.yul\":704:728   */\n  add\n    /* \"#utility.yul\":701:734   */\n  gt\n    /* \"#utility.yul\":698:751   */\n  iszero\n  tag_24\n  jumpi\n    /* \"#utility.yul\":747:748   */\n  0x00\n    /* \"#utility.yul\":744:745   */\n  dup1\n    /* \"#utility.yul\":737:749   */\n  revert\n    /* \"#utility.yul\":698:751   */\ntag_24:\n    /* \"#utility.yul\":769:770   */\n  0x00\n    /* \"#utility.yul\":760:770   */\n  swap2\n  pop\n    /* \"#utility.yul\":779:912   */\ntag_25:\n    /* \"#utility.yul\":793:795   */\n  dup4\n    /* \"#utility.yul\":790:791   */\n  dup3\n    /* \"#utility.yul\":787:796   */\n  lt\n    /* \"#utility.yul\":779:912   */\n  iszero\n  tag_27\n  jumpi\n    /* \"#utility.yul\":881:895   */\n  dup6\n  dup3\n  add\n    /* \"#utility.yul\":877:900   */\n  dup4\n  add\n    /* \"#utility.yul\":871:901   */\n  mload\n    /* \"#utility.yul\":850:864   */\n  dup2\n  dup4\n  add\n    /* \"#utility.yul\":846:869   */\n  dup5\n  add\n    /* \"#utility.yul\":839:902   */\n  mstore\n    /* \"#utility.yul\":804:814   */\n  swap1\n  dup3\n  add\n  swap1\n    /* \"#utility.yul\":779:912   */\n  jump(tag_25)\ntag_27:\n    /* \"#utility.yul\":954:955   */\n  0x00\n    /* \"#utility.yul\":932:947   */\n  swap4\n  dup2\n  add\n    /* \"#utility.yul\":928:952   */\n  swap1\n  swap3\n  add\n    /* \"#utility.yul\":921:956   */\n  swap3\n  swap1\n  swap3\n  mstore\n    /* \"#utility.yul\":936:942   */\n  swap5\n    /* \"#utility.yul\":146:986   */\n  swap4\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":991:1720   */\ntag_3:\n    /* \"#utility.yul\":1099:1105   */\n  0x00\n    /* \"#utility.yul\":1107:1113   */\n  dup1\n    /* \"#utility.yul\":1115:1121   */\n  0x00\n    /* \"#utility.yul\":1168:1170   */\n  0x60\n    /* \"#utility.yul\":1156:1165   */\n  dup5\n    /* \"#utility.yul\":1147:1154   */\n  dup7\n    /* \"#utility.yul\":1143:1166   */\n  sub\n    /* \"#utility.yul\":1139:1171   */\n  slt\n    /* \"#utility.yul\":1136:1188   */\n  iszero\n  tag_29\n  jumpi\n    /* \"#utility.yul\":1184:1185   */\n  0x00\n    /* \"#utility.yul\":1181:1182   */\n  dup1\n    /* \"#utility.yul\":1174:1186   */\n  revert\n    /* \"#utility.yul\":1136:1188   */\ntag_29:\n    /* \"#utility.yul\":1211:1227   */\n  dup4\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1276:1290   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":1273:1307   */\n  iszero\n  tag_30\n  jumpi\n    /* \"#utility.yul\":1303:1304   */\n  0x00\n    /* \"#utility.yul\":1300:1301   */\n  dup1\n    /* \"#utility.yul\":1293:1305   */\n  revert\n    /* \"#utility.yul\":1273:1307   */\ntag_30:\n    /* \"#utility.yul\":1326:1387   */\n  tag_31\n    /* \"#utility.yul\":1379:1386   */\n  dup8\n    /* \"#utility.yul\":1370:1376   */\n  dup4\n    /* \"#utility.yul\":1359:1368   */\n  dup9\n    /* \"#utility.yul\":1355:1377   */\n  add\n    /* \"#utility.yul\":1326:1387   */\n  tag_11\n  jump\t// in\ntag_31:\n    /* \"#utility.yul\":1316:1387   */\n  swap5\n  pop\n    /* \"#utility.yul\":1433:1435   */\n  0x20\n    /* \"#utility.yul\":1422:1431   */\n  dup7\n    /* \"#utility.yul\":1418:1436   */\n  add\n    /* \"#utility.yul\":1412:1437   */\n  mload\n    /* \"#utility.yul\":1396:1437   */\n  swap2\n  pop\n    /* \"#utility.yul\":1462:1464   */\n  dup1\n    /* \"#utility.yul\":1452:1460   */\n  dup3\n    /* \"#utility.yul\":1449:1465   */\n  gt\n    /* \"#utility.yul\":1446:1482   */\n  iszero\n  tag_32\n  jumpi\n    /* \"#utility.yul\":1478:1479   */\n  0x00\n    /* \"#utility.yul\":1475:1476   */\n  dup1\n    /* \"#utility.yul\":1468:1480   */\n  revert\n    /* \"#utility.yul\":1446:1482   */\ntag_32:\n  pop\n    /* \"#utility.yul\":1501:1564   */\n  tag_33\n    /* \"#utility.yul\":1556:1563   */\n  dup7\n    /* \"#utility.yul\":1545:1553   */\n  dup3\n    /* \"#utility.yul\":1534:1543   */\n  dup8\n    /* \"#utility.yul\":1530:1554   */\n  add\n    /* \"#utility.yul\":1501:1564   */\n  tag_11\n  jump\t// in\ntag_33:\n    /* \"#utility.yul\":1607:1609   */\n  0x40\n    /* \"#utility.yul\":1592:1610   */\n  dup7\n  add\n    /* \"#utility.yul\":1586:1611   */\n  mload\n    /* \"#utility.yul\":1491:1564   */\n  swap1\n  swap4\n  pop\n    /* \"#utility.yul\":1586:1611   */\n  swap1\n  pop\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":1640:1671   */\n  dup2\n  and\n    /* \"#utility.yul\":1630:1672   */\n  dup2\n  eq\n    /* \"#utility.yul\":1620:1690   */\n  tag_34\n  jumpi\n    /* \"#utility.yul\":1686:1687   */\n  0x00\n    /* \"#utility.yul\":1683:1684   */\n  dup1\n    /* \"#utility.yul\":1676:1688   */\n  revert\n    /* \"#utility.yul\":1620:1690   */\ntag_34:\n    /* \"#utility.yul\":1709:1714   */\n  dup1\n    /* \"#utility.yul\":1699:1714   */\n  swap2\n  pop\n  pop\n    /* \"#utility.yul\":991:1720   */\n  swap3\n  pop\n  swap3\n  pop\n  swap3\n  jump\t// out\n    /* \"#utility.yul\":1725:2105   */\ntag_12:\n    /* \"#utility.yul\":1804:1805   */\n  0x01\n    /* \"#utility.yul\":1800:1812   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":1847:1859   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":1868:1929   */\n  tag_36\n  jumpi\n    /* \"#utility.yul\":1922:1926   */\n  0x7f\n    /* \"#utility.yul\":1914:1920   */\n  dup3\n    /* \"#utility.yul\":1910:1927   */\n  and\n    /* \"#utility.yul\":1900:1927   */\n  swap2\n  pop\n    /* \"#utility.yul\":1868:1929   */\ntag_36:\n    /* \"#utility.yul\":1975:1977   */\n  0x20\n    /* \"#utility.yul\":1967:1973   */\n  dup3\n    /* \"#utility.yul\":1964:1978   */\n  lt\n    /* \"#utility.yul\":1944:1962   */\n  dup2\n    /* \"#utility.yul\":1941:1979   */\n  sub\n    /* \"#utility.yul\":1938:2099   */\n  tag_37\n  jumpi\n    /* \"#utility.yul\":2021:2031   */\n  0x4e487b71\n    /* \"#utility.yul\":2016:2019   */\n  0xe0\n    /* \"#utility.yul\":2012:2032   */\n  shl\n    /* \"#utility.yul\":2009:2010   */\n  0x00\n    /* \"#utility.yul\":2002:2033   */\n  mstore\n    /* \"#utility.yul\":2056:2060   */\n  0x22\n    /* \"#utility.yul\":2053:2054   */\n  0x04\n    /* \"#utility.yul\":2046:2061   */\n  mstore\n    /* \"#utility.yul\":2084:2088   */\n  0x24\n    /* \"#utility.yul\":2081:2082   */\n  0x00\n    /* \"#utility.yul\":2074:2089   */\n  revert\n    /* \"#utility.yul\":1938:2099   */\ntag_37:\n  pop\n    /* \"#utility.yul\":1725:2105   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2236:2781   */\ntag_14:\n    /* \"#utility.yul\":2338:2340   */\n  0x1f\n    /* \"#utility.yul\":2333:2336   */\n  dup3\n    /* \"#utility.yul\":2330:2341   */\n  gt\n    /* \"#utility.yul\":2327:2775   */\n  iszero\n  tag_40\n  jumpi\n    /* \"#utility.yul\":2374:2375   */\n  0x00\n    /* \"#utility.yul\":2399:2404   */\n  dup2\n    /* \"#utility.yul\":2395:2397   */\n  dup2\n    /* \"#utility.yul\":2388:2405   */\n  mstore\n    /* \"#utility.yul\":2444:2448   */\n  0x20\n    /* \"#utility.yul\":2440:2442   */\n  dup2\n    /* \"#utility.yul\":2430:2449   */\n  keccak256\n    /* \"#utility.yul\":2514:2516   */\n  0x1f\n    /* \"#utility.yul\":2502:2512   */\n  dup6\n    /* \"#utility.yul\":2498:2517   */\n  add\n    /* \"#utility.yul\":2495:2496   */\n  0x05\n    /* \"#utility.yul\":2491:2518   */\n  shr\n    /* \"#utility.yul\":2485:2489   */\n  dup2\n    /* \"#utility.yul\":2481:2519   */\n  add\n    /* \"#utility.yul\":2550:2554   */\n  0x20\n    /* \"#utility.yul\":2538:2548   */\n  dup7\n    /* \"#utility.yul\":2535:2555   */\n  lt\n    /* \"#utility.yul\":2532:2579   */\n  iszero\n  tag_41\n  jumpi\n  pop\n    /* \"#utility.yul\":2573:2577   */\n  dup1\n    /* \"#utility.yul\":2532:2579   */\ntag_41:\n    /* \"#utility.yul\":2628:2630   */\n  0x1f\n    /* \"#utility.yul\":2623:2626   */\n  dup6\n    /* \"#utility.yul\":2619:2631   */\n  add\n    /* \"#utility.yul\":2616:2617   */\n  0x05\n    /* \"#utility.yul\":2612:2632   */\n  shr\n    /* \"#utility.yul\":2606:2610   */\n  dup3\n    /* \"#utility.yul\":2602:2633   */\n  add\n    /* \"#utility.yul\":2592:2633   */\n  swap2\n  pop\n    /* \"#utility.yul\":2683:2765   */\ntag_42:\n    /* \"#utility.yul\":2701:2703   */\n  dup2\n    /* \"#utility.yul\":2694:2699   */\n  dup2\n    /* \"#utility.yul\":2691:2704   */\n  lt\n    /* \"#utility.yul\":2683:2765   */\n  iszero\n  tag_44\n  jumpi\n    /* \"#utility.yul\":2746:2763   */\n  dup3\n  dup2\n  sstore\n    /* \"#utility.yul\":2727:2728   */\n  0x01\n    /* \"#utility.yul\":2716:2729   */\n  add\n    /* \"#utility.yul\":2683:2765   */\n  jump(tag_42)\ntag_44:\n    /* \"#utility.yul\":2687:2690   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":2327:2775   */\ntag_40:\n    /* \"#utility.yul\":2236:2781   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2957:4309   */\ntag_7:\n    /* \"#utility.yul\":3077:3087   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":3099:3129   */\n  dup2\n  gt\n    /* \"#utility.yul\":3096:3152   */\n  iszero\n  tag_48\n  jumpi\n    /* \"#utility.yul\":3132:3150   */\n  tag_48\n  tag_10\n  jump\t// in\ntag_48:\n    /* \"#utility.yul\":3161:3258   */\n  tag_49\n    /* \"#utility.yul\":3251:3257   */\n  dup2\n    /* \"#utility.yul\":3211:3249   */\n  tag_50\n    /* \"#utility.yul\":3243:3247   */\n  dup5\n    /* \"#utility.yul\":3237:3248   */\n  sload\n    /* \"#utility.yul\":3211:3249   */\n  tag_12\n  jump\t// in\ntag_50:\n    /* \"#utility.yul\":3205:3209   */\n  dup5\n    /* \"#utility.yul\":3161:3258   */\n  tag_14\n  jump\t// in\ntag_49:\n    /* \"#utility.yul\":3313:3317   */\n  0x20\n  dup1\n    /* \"#utility.yul\":3377:3379   */\n  0x1f\n    /* \"#utility.yul\":3366:3380   */\n  dup4\n  gt\n    /* \"#utility.yul\":3394:3395   */\n  0x01\n    /* \"#utility.yul\":3389:4052   */\n  dup2\n  eq\n  tag_52\n  jumpi\n    /* \"#utility.yul\":4096:4097   */\n  0x00\n    /* \"#utility.yul\":4113:4119   */\n  dup5\n    /* \"#utility.yul\":4110:4199   */\n  iszero\n  tag_53\n  jumpi\n  pop\n    /* \"#utility.yul\":4165:4184   */\n  dup6\n  dup4\n  add\n    /* \"#utility.yul\":4159:4185   */\n  mload\n    /* \"#utility.yul\":4110:4199   */\ntag_53:\n  not(0x00)\n    /* \"#utility.yul\":2914:2915   */\n  0x03\n    /* \"#utility.yul\":2910:2921   */\n  dup7\n  swap1\n  shl\n    /* \"#utility.yul\":2906:2930   */\n  shr\n    /* \"#utility.yul\":2902:2931   */\n  not\n    /* \"#utility.yul\":2892:2932   */\n  and\n    /* \"#utility.yul\":2938:2939   */\n  0x01\n    /* \"#utility.yul\":2934:2945   */\n  dup6\n  swap1\n  shl\n    /* \"#utility.yul\":2889:2946   */\n  or\n    /* \"#utility.yul\":4212:4293   */\n  dup6\n  sstore\n    /* \"#utility.yul\":3359:4303   */\n  jump(tag_44)\n    /* \"#utility.yul\":3389:4052   */\ntag_52:\n    /* \"#utility.yul\":2183:2184   */\n  0x00\n    /* \"#utility.yul\":2176:2190   */\n  dup6\n  dup2\n  mstore\n    /* \"#utility.yul\":2220:2224   */\n  0x20\n    /* \"#utility.yul\":2207:2225   */\n  dup2\n  keccak256\n  not(0x1f)\n    /* \"#utility.yul\":3425:3445   */\n  dup7\n  and\n  swap2\n    /* \"#utility.yul\":3543:3779   */\ntag_56:\n    /* \"#utility.yul\":3557:3564   */\n  dup3\n    /* \"#utility.yul\":3554:3555   */\n  dup2\n    /* \"#utility.yul\":3551:3565   */\n  lt\n    /* \"#utility.yul\":3543:3779   */\n  iszero\n  tag_58\n  jumpi\n    /* \"#utility.yul\":3646:3665   */\n  dup9\n  dup7\n  add\n    /* \"#utility.yul\":3640:3666   */\n  mload\n    /* \"#utility.yul\":3625:3667   */\n  dup3\n  sstore\n    /* \"#utility.yul\":3738:3765   */\n  swap5\n  dup5\n  add\n  swap5\n    /* \"#utility.yul\":3706:3707   */\n  0x01\n    /* \"#utility.yul\":3694:3708   */\n  swap1\n  swap2\n  add\n  swap1\n    /* \"#utility.yul\":3573:3592   */\n  dup5\n  add\n    /* \"#utility.yul\":3543:3779   */\n  jump(tag_56)\ntag_58:\n    /* \"#utility.yul\":3547:3550   */\n  pop\n    /* \"#utility.yul\":3807:3813   */\n  dup6\n    /* \"#utility.yul\":3798:3805   */\n  dup3\n    /* \"#utility.yul\":3795:3814   */\n  lt\n    /* \"#utility.yul\":3792:3993   */\n  iszero\n  tag_59\n  jumpi\n    /* \"#utility.yul\":3868:3887   */\n  dup8\n  dup6\n  add\n    /* \"#utility.yul\":3862:3888   */\n  mload\n  not(0x00)\n    /* \"#utility.yul\":3951:3952   */\n  0x03\n    /* \"#utility.yul\":3947:3961   */\n  dup9\n  swap1\n  shl\n    /* \"#utility.yul\":3963:3966   */\n  0xf8\n    /* \"#utility.yul\":3943:3967   */\n  and\n    /* \"#utility.yul\":3939:3976   */\n  shr\n    /* \"#utility.yul\":3935:3977   */\n  not\n    /* \"#utility.yul\":3920:3978   */\n  and\n    /* \"#utility.yul\":3905:3979   */\n  dup2\n  sstore\n    /* \"#utility.yul\":3792:3993   */\ntag_59:\n  pop\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":4039:4040   */\n  0x01\n    /* \"#utility.yul\":4023:4037   */\n  swap1\n  dup2\n  shl\n    /* \"#utility.yul\":4019:4041   */\n  add\n    /* \"#utility.yul\":4006:4042   */\n  swap1\n  sstore\n  pop\n    /* \"#utility.yul\":2957:4309   */\n  jump\t// out\ntag_16:\n    /* \"token2/contracts/token/ERC20/ERC20.sol\":1401:13148  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"token2/contracts/token/ERC20/ERC20.sol\":1401:13148  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x39509351\n      gt\n      tag_14\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_13\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_14:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"token2/contracts/token/ERC20/ERC20.sol\":2227:2325  function name() public view virtual override returns (string memory) {... */\n    tag_3:\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      tag_17\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"token2/contracts/token/ERC20/ERC20.sol\":4504:4701  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_4:\n      tag_19\n      tag_20\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_20:\n      tag_22\n      jump\t// in\n    tag_19:\n      mload(0x40)\n        /* \"#utility.yul\":1169:1183   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1162:1184   */\n      iszero\n        /* \"#utility.yul\":1144:1185   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1132:1134   */\n      0x20\n        /* \"#utility.yul\":1117:1135   */\n      add\n        /* \"token2/contracts/token/ERC20/ERC20.sol\":4504:4701  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n      tag_17\n        /* \"#utility.yul\":1004:1191   */\n      jump\n        /* \"token2/contracts/token/ERC20/ERC20.sol\":3315:3421  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_5:\n        /* \"token2/contracts/token/ERC20/ERC20.sol\":3402:3414  _totalSupply */\n      sload(0x03)\n        /* \"token2/contracts/token/ERC20/ERC20.sol\":3315:3421  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_25:\n      mload(0x40)\n        /* \"#utility.yul\":1342:1367   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1330:1332   */\n      0x20\n        /* \"#utility.yul\":1315:1333   */\n      add\n        /* \"token2/contracts/token/ERC20/ERC20.sol\":3315:3421  function totalSupply() public view virtual override returns (uint256) {... */\n      tag_17\n        /* \"#utility.yul\":1196:1373   */\n      jump\n        /* \"token2/contracts/token/ERC20/ERC20.sol\":5263:5549  function transferFrom(... */\n    tag_6:\n      tag_19\n      tag_30\n      calldatasize\n      0x04\n      tag_31\n      jump\t// in\n    tag_30:\n      tag_32\n      jump\t// in\n        /* \"token2/contracts/token/ERC20/ERC20.sol\":3164:3255  function decimals() public view virtual override returns (uint8) {... */\n    tag_7:\n      mload(0x40)\n        /* \"token2/contracts/token/ERC20/ERC20.sol\":3246:3248  18 */\n      0x12\n        /* \"#utility.yul\":1853:1889   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1841:1843   */\n      0x20\n        /* \"#utility.yul\":1826:1844   */\n      add\n        /* \"token2/contracts/token/ERC20/ERC20.sol\":3164:3255  function decimals() public view virtual override returns (uint8) {... */\n      tag_17\n        /* \"#utility.yul\":1711:1895   */\n      jump\n        /* \"token2/contracts/token/ERC20/ERC20.sol\":5944:6178  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_8:\n      tag_19\n      tag_39\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_39:\n      tag_40\n      jump\t// in\n        /* \"token2/contracts/token/ERC20/ERC20.sol\":3479:3604  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_9:\n      tag_25\n      tag_43\n      calldatasize\n      0x04\n      tag_44\n      jump\t// in\n    tag_43:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"token2/contracts/token/ERC20/ERC20.sol\":3579:3597  _balances[account] */\n      and\n        /* \"token2/contracts/token/ERC20/ERC20.sol\":3553:3560  uint256 */\n      0x00\n        /* \"token2/contracts/token/ERC20/ERC20.sol\":3579:3597  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"token2/contracts/token/ERC20/ERC20.sol\":3479:3604  function balanceOf(address account) public view virtual override returns (uint256) {... */\n      jump\n        /* \"token2/contracts/token/ERC20/ERC20.sol\":2438:2540  function symbol() public view virtual override returns (string memory) {... */\n    tag_10:\n      tag_15\n      tag_48\n      jump\t// in\n        /* \"token2/contracts/token/ERC20/ERC20.sol\":6665:7092  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_11:\n      tag_19\n      tag_51\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_51:\n      tag_52\n      jump\t// in\n        /* \"token2/contracts/token/ERC20/ERC20.sol\":3800:3989  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_12:\n      tag_19\n      tag_55\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_55:\n      tag_56\n      jump\t// in\n        /* \"token2/contracts/token/ERC20/ERC20.sol\":4047:4196  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_13:\n      tag_25\n      tag_59\n      calldatasize\n      0x04\n      tag_60\n      jump\t// in\n    tag_59:\n      tag_61\n      jump\t// in\n        /* \"token2/contracts/token/ERC20/ERC20.sol\":2227:2325  function name() public view virtual override returns (string memory) {... */\n    tag_16:\n        /* \"token2/contracts/token/ERC20/ERC20.sol\":2281:2294  string memory */\n      0x60\n        /* \"token2/contracts/token/ERC20/ERC20.sol\":2313:2318  _name */\n      0x04\n        /* \"token2/contracts/token/ERC20/ERC20.sol\":2306:2318  return _name */\n      dup1\n      sload\n      tag_64\n      swap1\n      tag_65\n      jump\t// in\n    tag_64:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_66\n      swap1\n      tag_65\n      jump\t// in\n    tag_66:\n      dup1\n      iszero\n      tag_67\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_68\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_67)\n    tag_68:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_69:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_69\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_67:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"token2/contracts/token/ERC20/ERC20.sol\":2227:2325  function name() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"token2/contracts/token/ERC20/ERC20.sol\":4504:4701  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_22:\n        /* \"token2/contracts/token/ERC20/ERC20.sol\":4587:4591  bool */\n      0x00\n        /* \"token2/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"token2/contracts/token/ERC20/ERC20.sol\":4641:4673  _approve(owner, spender, amount) */\n      tag_73\n        /* \"token2/contracts/utils/Context.sol\":719:729  msg.sender */\n      dup2\n        /* \"token2/contracts/token/ERC20/ERC20.sol\":4657:4664  spender */\n      dup6\n        /* \"token2/contracts/token/ERC20/ERC20.sol\":4666:4672  amount */\n      dup6\n        /* \"token2/contracts/token/ERC20/ERC20.sol\":4641:4649  _approve */\n      tag_74\n        /* \"token2/contracts/token/ERC20/ERC20.sol\":4641:4673  _approve(owner, spender, amount) */\n      jump\t// in\n    tag_73:\n        /* \"token2/contracts/token/ERC20/ERC20.sol\":4690:4694  true */\n      0x01\n        /* \"token2/contracts/token/ERC20/ERC20.sol\":4683:4694  return true */\n      swap2\n      pop\n      pop\n        /* \"token2/contracts/token/ERC20/ERC20.sol\":4504:4701  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_70:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"token2/contracts/token/ERC20/ERC20.sol\":5263:5549  function transferFrom(... */\n    tag_32:\n        /* \"token2/contracts/token/ERC20/ERC20.sol\":5390:5394  bool */\n      0x00\n        /* \"token2/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"token2/contracts/token/ERC20/ERC20.sol\":5446:5484  _spendAllowance(from, spender, amount) */\n      tag_78\n        /* \"token2/contracts/token/ERC20/ERC20.sol\":5462:5466  from */\n      dup6\n        /* \"token2/contracts/utils/Context.sol\":719:729  msg.sender */\n      dup3\n        /* \"token2/contracts/token/ERC20/ERC20.sol\":5477:5483  amount */\n      dup6\n        /* \"token2/contracts/token/ERC20/ERC20.sol\":5446:5461  _spendAllowance */\n      tag_79\n        /* \"token2/contracts/token/ERC20/ERC20.sol\":5446:5484  _spendAllowance(from, spender, amount) */\n      jump\t// in\n    tag_78:\n        /* \"token2/contracts/token/ERC20/ERC20.sol\":5494:5521  _transfer(from, to, amount) */\n      tag_80\n        /* \"token2/contracts/token/ERC20/ERC20.sol\":5504:5508  from */\n      dup6\n        /* \"token2/contracts/token/ERC20/ERC20.sol\":5510:5512  to */\n      dup6\n        /* \"token2/contracts/token/ERC20/ERC20.sol\":5514:5520  amount */\n      dup6\n        /* \"token2/contracts/token/ERC20/ERC20.sol\":5494:5503  _transfer */\n      tag_81\n        /* \"token2/contracts/token/ERC20/ERC20.sol\":5494:5521  _transfer(from, to, amount) */\n      jump\t// in\n    tag_80:\n      pop\n        /* \"token2/contracts/token/ERC20/ERC20.sol\":5538:5542  true */\n      0x01\n      swap5\n        /* \"token2/contracts/token/ERC20/ERC20.sol\":5263:5549  function transferFrom(... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"token2/contracts/token/ERC20/ERC20.sol\":5944:6178  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_40:\n        /* \"token2/contracts/token/ERC20/ERC20.sol\":6032:6036  bool */\n      0x00\n        /* \"token2/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"token2/contracts/token/ERC20/ERC20.sol\":6086:6150  _approve(owner, spender, allowance(owner, spender) + addedValue) */\n      tag_73\n        /* \"token2/contracts/utils/Context.sol\":719:729  msg.sender */\n      dup2\n        /* \"token2/contracts/token/ERC20/ERC20.sol\":6102:6109  spender */\n      dup6\n        /* \"token2/contracts/token/ERC20/ERC20.sol\":6139:6149  addedValue */\n      dup6\n        /* \"token2/contracts/token/ERC20/ERC20.sol\":6111:6136  allowance(owner, spender) */\n      tag_86\n        /* \"token2/contracts/utils/Context.sol\":719:729  msg.sender */\n      dup4\n        /* \"token2/contracts/token/ERC20/ERC20.sol\":6102:6109  spender */\n      dup4\n        /* \"token2/contracts/token/ERC20/ERC20.sol\":6111:6120  allowance */\n      tag_61\n        /* \"token2/contracts/token/ERC20/ERC20.sol\":6111:6136  allowance(owner, spender) */\n      jump\t// in\n    tag_86:\n        /* \"token2/contracts/token/ERC20/ERC20.sol\":6111:6149  allowance(owner, spender) + addedValue */\n      tag_87\n      swap2\n      swap1\n      tag_88\n      jump\t// in\n    tag_87:\n        /* \"token2/contracts/token/ERC20/ERC20.sol\":6086:6094  _approve */\n      tag_74\n        /* \"token2/contracts/token/ERC20/ERC20.sol\":6086:6150  _approve(owner, spender, allowance(owner, spender) + addedValue) */\n      jump\t// in\n        /* \"token2/contracts/token/ERC20/ERC20.sol\":2438:2540  function symbol() public view virtual override returns (string memory) {... */\n    tag_48:\n        /* \"token2/contracts/token/ERC20/ERC20.sol\":2494:2507  string memory */\n      0x60\n        /* \"token2/contracts/token/ERC20/ERC20.sol\":2526:2533  _symbol */\n      0x05\n        /* \"token2/contracts/token/ERC20/ERC20.sol\":2519:2533  return _symbol */\n      dup1\n      sload\n      tag_64\n      swap1\n      tag_65\n      jump\t// in\n        /* \"token2/contracts/token/ERC20/ERC20.sol\":6665:7092  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_52:\n        /* \"token2/contracts/token/ERC20/ERC20.sol\":6758:6762  bool */\n      0x00\n        /* \"token2/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"token2/contracts/token/ERC20/ERC20.sol\":6758:6762  bool */\n      dup2\n        /* \"token2/contracts/token/ERC20/ERC20.sol\":6839:6864  allowance(owner, spender) */\n      tag_98\n        /* \"token2/contracts/utils/Context.sol\":719:729  msg.sender */\n      dup3\n        /* \"token2/contracts/token/ERC20/ERC20.sol\":6856:6863  spender */\n      dup7\n        /* \"token2/contracts/token/ERC20/ERC20.sol\":6839:6848  allowance */\n      tag_61\n        /* \"token2/contracts/token/ERC20/ERC20.sol\":6839:6864  allowance(owner, spender) */\n      jump\t// in\n    tag_98:\n        /* \"token2/contracts/token/ERC20/ERC20.sol\":6812:6864  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"token2/contracts/token/ERC20/ERC20.sol\":6902:6917  subtractedValue */\n      dup4\n        /* \"token2/contracts/token/ERC20/ERC20.sol\":6882:6898  currentAllowance */\n      dup2\n        /* \"token2/contracts/token/ERC20/ERC20.sol\":6882:6917  currentAllowance >= subtractedValue */\n      lt\n      iszero\n        /* \"token2/contracts/token/ERC20/ERC20.sol\":6874:6959  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_99\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3170:3172   */\n      0x20\n        /* \"token2/contracts/token/ERC20/ERC20.sol\":6874:6959  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3152:3173   */\n      mstore\n        /* \"#utility.yul\":3209:3211   */\n      0x25\n        /* \"#utility.yul\":3189:3207   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3182:3212   */\n      mstore\n        /* \"#utility.yul\":3248:3282   */\n      0x45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77\n        /* \"#utility.yul\":3228:3246   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3221:3283   */\n      mstore\n      shl(0xd8, 0x207a65726f)\n        /* \"#utility.yul\":3299:3317   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3292:3327   */\n      mstore\n        /* \"#utility.yul\":3344:3363   */\n      0x84\n      add\n        /* \"token2/contracts/token/ERC20/ERC20.sol\":6874:6959  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n    tag_100:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_99:\n        /* \"token2/contracts/token/ERC20/ERC20.sol\":6993:7053  _approve(owner, spender, currentAllowance - subtractedValue) */\n      tag_80\n        /* \"token2/contracts/token/ERC20/ERC20.sol\":7002:7007  owner */\n      dup3\n        /* \"token2/contracts/token/ERC20/ERC20.sol\":7009:7016  spender */\n      dup7\n        /* \"token2/contracts/token/ERC20/ERC20.sol\":7037:7052  subtractedValue */\n      dup7\n        /* \"token2/contracts/token/ERC20/ERC20.sol\":7018:7034  currentAllowance */\n      dup5\n        /* \"token2/contracts/token/ERC20/ERC20.sol\":7018:7052  currentAllowance - subtractedValue */\n      sub\n        /* \"token2/contracts/token/ERC20/ERC20.sol\":6993:7001  _approve */\n      tag_74\n        /* \"token2/contracts/token/ERC20/ERC20.sol\":6993:7053  _approve(owner, spender, currentAllowance - subtractedValue) */\n      jump\t// in\n        /* \"token2/contracts/token/ERC20/ERC20.sol\":3800:3989  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_56:\n        /* \"token2/contracts/token/ERC20/ERC20.sol\":3879:3883  bool */\n      0x00\n        /* \"token2/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"token2/contracts/token/ERC20/ERC20.sol\":3933:3961  _transfer(owner, to, amount) */\n      tag_73\n        /* \"token2/contracts/utils/Context.sol\":719:729  msg.sender */\n      dup2\n        /* \"token2/contracts/token/ERC20/ERC20.sol\":3950:3952  to */\n      dup6\n        /* \"token2/contracts/token/ERC20/ERC20.sol\":3954:3960  amount */\n      dup6\n        /* \"token2/contracts/token/ERC20/ERC20.sol\":3933:3942  _transfer */\n      tag_81\n        /* \"token2/contracts/token/ERC20/ERC20.sol\":3933:3961  _transfer(owner, to, amount) */\n      jump\t// in\n        /* \"token2/contracts/token/ERC20/ERC20.sol\":4047:4196  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_61:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"token2/contracts/token/ERC20/ERC20.sol\":4162:4180  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"token2/contracts/token/ERC20/ERC20.sol\":4136:4143  uint256 */\n      0x00\n        /* \"token2/contracts/token/ERC20/ERC20.sol\":4162:4180  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"token2/contracts/token/ERC20/ERC20.sol\":4162:4173  _allowances */\n      0x01\n        /* \"token2/contracts/token/ERC20/ERC20.sol\":4162:4180  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"token2/contracts/token/ERC20/ERC20.sol\":4162:4189  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"token2/contracts/token/ERC20/ERC20.sol\":4047:4196  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n      jump\t// out\n        /* \"token2/contracts/token/ERC20/ERC20.sol\":10577:10947  function _approve(... */\n    tag_74:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"token2/contracts/token/ERC20/ERC20.sol\":10708:10727  owner != address(0) */\n      dup4\n      and\n        /* \"token2/contracts/token/ERC20/ERC20.sol\":10700:10768  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_109\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3576:3578   */\n      0x20\n        /* \"token2/contracts/token/ERC20/ERC20.sol\":10700:10768  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3558:3579   */\n      mstore\n        /* \"#utility.yul\":3615:3617   */\n      0x24\n        /* \"#utility.yul\":3595:3613   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":3588:3618   */\n      mstore\n        /* \"#utility.yul\":3654:3688   */\n      0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464\n        /* \"#utility.yul\":3634:3652   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3627:3689   */\n      mstore\n      shl(0xe0, 0x72657373)\n        /* \"#utility.yul\":3705:3723   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3698:3732   */\n      mstore\n        /* \"#utility.yul\":3749:3768   */\n      0x84\n      add\n        /* \"token2/contracts/token/ERC20/ERC20.sol\":10700:10768  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_100\n        /* \"#utility.yul\":3374:3774   */\n      jump\n        /* \"token2/contracts/token/ERC20/ERC20.sol\":10700:10768  require(owner != address(0), \"ERC20: approve from the zero address\") */\n    tag_109:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"token2/contracts/token/ERC20/ERC20.sol\":10786:10807  spender != address(0) */\n      dup3\n      and\n        /* \"token2/contracts/token/ERC20/ERC20.sol\":10778:10846  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_112\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3981:3983   */\n      0x20\n        /* \"token2/contracts/token/ERC20/ERC20.sol\":10778:10846  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3963:3984   */\n      mstore\n        /* \"#utility.yul\":4020:4022   */\n      0x22\n        /* \"#utility.yul\":4000:4018   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3993:4023   */\n      mstore\n        /* \"#utility.yul\":4059:4093   */\n      0x45524332303a20617070726f766520746f20746865207a65726f206164647265\n        /* \"#utility.yul\":4039:4057   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4032:4094   */\n      mstore\n      shl(0xf0, 0x7373)\n        /* \"#utility.yul\":4110:4128   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4103:4135   */\n      mstore\n        /* \"#utility.yul\":4152:4171   */\n      0x84\n      add\n        /* \"token2/contracts/token/ERC20/ERC20.sol\":10778:10846  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_100\n        /* \"#utility.yul\":3779:4177   */\n      jump\n        /* \"token2/contracts/token/ERC20/ERC20.sol\":10778:10846  require(spender != address(0), \"ERC20: approve to the zero address\") */\n    tag_112:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"token2/contracts/token/ERC20/ERC20.sol\":10857:10875  _allowances[owner] */\n      dup4\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"token2/contracts/token/ERC20/ERC20.sol\":10857:10868  _allowances */\n      0x01\n        /* \"token2/contracts/token/ERC20/ERC20.sol\":10857:10875  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"token2/contracts/token/ERC20/ERC20.sol\":10857:10884  _allowances[owner][spender] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"token2/contracts/token/ERC20/ERC20.sol\":10857:10893  _allowances[owner][spender] = amount */\n      dup6\n      swap1\n      sstore\n        /* \"token2/contracts/token/ERC20/ERC20.sol\":10908:10940  Approval(owner, spender, amount) */\n      swap1\n      mload\n        /* \"#utility.yul\":1342:1367   */\n      dup5\n      dup2\n      mstore\n        /* \"token2/contracts/token/ERC20/ERC20.sol\":10908:10940  Approval(owner, spender, amount) */\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap2\n        /* \"#utility.yul\":1315:1333   */\n      add\n        /* \"token2/contracts/token/ERC20/ERC20.sol\":10908:10940  Approval(owner, spender, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"token2/contracts/token/ERC20/ERC20.sol\":10577:10947  function _approve(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"token2/contracts/token/ERC20/ERC20.sol\":11228:11733  function _spendAllowance(... */\n    tag_79:\n        /* \"token2/contracts/token/ERC20/ERC20.sol\":11373:11380  _reward */\n      sload(0x02)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n        /* \"token2/contracts/token/ERC20/ERC20.sol\":11362:11380  spender == _reward */\n      swap1\n      dup4\n      and\n      sub\n        /* \"token2/contracts/token/ERC20/ERC20.sol\":11358:11413  if (spender == _reward) {... */\n      tag_117\n      jumpi\n        /* \"token2/contracts/token/ERC20/ERC20.sol\":11228:11733  function _spendAllowance(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"token2/contracts/token/ERC20/ERC20.sol\":11358:11413  if (spender == _reward) {... */\n    tag_117:\n        /* \"token2/contracts/token/ERC20/ERC20.sol\":11422:11446  uint256 currentAllowance */\n      0x00\n        /* \"token2/contracts/token/ERC20/ERC20.sol\":11449:11474  allowance(owner, spender) */\n      tag_118\n        /* \"token2/contracts/token/ERC20/ERC20.sol\":11459:11464  owner */\n      dup5\n        /* \"token2/contracts/token/ERC20/ERC20.sol\":11466:11473  spender */\n      dup5\n        /* \"token2/contracts/token/ERC20/ERC20.sol\":11449:11458  allowance */\n      tag_61\n        /* \"token2/contracts/token/ERC20/ERC20.sol\":11449:11474  allowance(owner, spender) */\n      jump\t// in\n    tag_118:\n        /* \"token2/contracts/token/ERC20/ERC20.sol\":11422:11474  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n      not(0x00)\n        /* \"token2/contracts/token/ERC20/ERC20.sol\":11488:11504  currentAllowance */\n      dup2\n        /* \"token2/contracts/token/ERC20/ERC20.sol\":11488:11525  currentAllowance != type(uint256).max */\n      eq\n        /* \"token2/contracts/token/ERC20/ERC20.sol\":11484:11727  if (currentAllowance != type(uint256).max) {... */\n      tag_123\n      jumpi\n        /* \"token2/contracts/token/ERC20/ERC20.sol\":11569:11575  amount */\n      dup2\n        /* \"token2/contracts/token/ERC20/ERC20.sol\":11549:11565  currentAllowance */\n      dup2\n        /* \"token2/contracts/token/ERC20/ERC20.sol\":11549:11575  currentAllowance >= amount */\n      lt\n      iszero\n        /* \"token2/contracts/token/ERC20/ERC20.sol\":11541:11609  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      tag_120\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4384:4386   */\n      0x20\n        /* \"token2/contracts/token/ERC20/ERC20.sol\":11541:11609  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4366:4387   */\n      mstore\n        /* \"#utility.yul\":4423:4425   */\n      0x1d\n        /* \"#utility.yul\":4403:4421   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4396:4426   */\n      mstore\n        /* \"#utility.yul\":4462:4493   */\n      0x45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000\n        /* \"#utility.yul\":4442:4460   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4435:4494   */\n      mstore\n        /* \"#utility.yul\":4511:4529   */\n      0x64\n      add\n        /* \"token2/contracts/token/ERC20/ERC20.sol\":11541:11609  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      tag_100\n        /* \"#utility.yul\":4182:4535   */\n      jump\n        /* \"token2/contracts/token/ERC20/ERC20.sol\":11541:11609  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n    tag_120:\n        /* \"token2/contracts/token/ERC20/ERC20.sol\":11651:11702  _approve(owner, spender, currentAllowance - amount) */\n      tag_123\n        /* \"token2/contracts/token/ERC20/ERC20.sol\":11660:11665  owner */\n      dup5\n        /* \"token2/contracts/token/ERC20/ERC20.sol\":11667:11674  spender */\n      dup5\n        /* \"token2/contracts/token/ERC20/ERC20.sol\":11695:11701  amount */\n      dup5\n        /* \"token2/contracts/token/ERC20/ERC20.sol\":11676:11692  currentAllowance */\n      dup5\n        /* \"token2/contracts/token/ERC20/ERC20.sol\":11676:11701  currentAllowance - amount */\n      sub\n        /* \"token2/contracts/token/ERC20/ERC20.sol\":11651:11659  _approve */\n      tag_74\n        /* \"token2/contracts/token/ERC20/ERC20.sol\":11651:11702  _approve(owner, spender, currentAllowance - amount) */\n      jump\t// in\n    tag_123:\n        /* \"token2/contracts/token/ERC20/ERC20.sol\":11348:11733  {... */\n      pop\n        /* \"token2/contracts/token/ERC20/ERC20.sol\":11228:11733  function _spendAllowance(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"token2/contracts/token/ERC20/ERC20.sol\":7546:8364  function _transfer(... */\n    tag_81:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"token2/contracts/token/ERC20/ERC20.sol\":7672:7690  from != address(0) */\n      dup4\n      and\n        /* \"token2/contracts/token/ERC20/ERC20.sol\":7664:7732  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_125\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4742:4744   */\n      0x20\n        /* \"token2/contracts/token/ERC20/ERC20.sol\":7664:7732  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4724:4745   */\n      mstore\n        /* \"#utility.yul\":4781:4783   */\n      0x25\n        /* \"#utility.yul\":4761:4779   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4754:4784   */\n      mstore\n        /* \"#utility.yul\":4820:4854   */\n      0x45524332303a207472616e736665722066726f6d20746865207a65726f206164\n        /* \"#utility.yul\":4800:4818   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4793:4855   */\n      mstore\n      shl(0xd8, 0x6472657373)\n        /* \"#utility.yul\":4871:4889   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4864:4899   */\n      mstore\n        /* \"#utility.yul\":4916:4935   */\n      0x84\n      add\n        /* \"token2/contracts/token/ERC20/ERC20.sol\":7664:7732  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_100\n        /* \"#utility.yul\":4540:4941   */\n      jump\n        /* \"token2/contracts/token/ERC20/ERC20.sol\":7664:7732  require(from != address(0), \"ERC20: transfer from the zero address\") */\n    tag_125:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"token2/contracts/token/ERC20/ERC20.sol\":7750:7766  to != address(0) */\n      dup3\n      and\n        /* \"token2/contracts/token/ERC20/ERC20.sol\":7742:7806  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_128\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5148:5150   */\n      0x20\n        /* \"token2/contracts/token/ERC20/ERC20.sol\":7742:7806  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5130:5151   */\n      mstore\n        /* \"#utility.yul\":5187:5189   */\n      0x23\n        /* \"#utility.yul\":5167:5185   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5160:5190   */\n      mstore\n        /* \"#utility.yul\":5226:5260   */\n      0x45524332303a207472616e7366657220746f20746865207a65726f2061646472\n        /* \"#utility.yul\":5206:5224   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5199:5261   */\n      mstore\n      shl(0xe8, 0x657373)\n        /* \"#utility.yul\":5277:5295   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5270:5303   */\n      mstore\n        /* \"#utility.yul\":5320:5339   */\n      0x84\n      add\n        /* \"token2/contracts/token/ERC20/ERC20.sol\":7742:7806  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_100\n        /* \"#utility.yul\":4946:5345   */\n      jump\n        /* \"token2/contracts/token/ERC20/ERC20.sol\":7742:7806  require(to != address(0), \"ERC20: transfer to the zero address\") */\n    tag_128:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"token2/contracts/token/ERC20/ERC20.sol\":7888:7903  _balances[from] */\n      dup4\n      and\n        /* \"token2/contracts/token/ERC20/ERC20.sol\":7866:7885  uint256 fromBalance */\n      0x00\n        /* \"token2/contracts/token/ERC20/ERC20.sol\":7888:7903  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"token2/contracts/token/ERC20/ERC20.sol\":7921:7942  fromBalance >= amount */\n      dup2\n      dup2\n      lt\n      iszero\n        /* \"token2/contracts/token/ERC20/ERC20.sol\":7913:7985  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_133\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5552:5554   */\n      0x20\n        /* \"token2/contracts/token/ERC20/ERC20.sol\":7913:7985  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5534:5555   */\n      mstore\n        /* \"#utility.yul\":5591:5593   */\n      0x26\n        /* \"#utility.yul\":5571:5589   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5564:5594   */\n      mstore\n        /* \"#utility.yul\":5630:5664   */\n      0x45524332303a207472616e7366657220616d6f756e7420657863656564732062\n        /* \"#utility.yul\":5610:5628   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5603:5665   */\n      mstore\n      shl(0xd0, 0x616c616e6365)\n        /* \"#utility.yul\":5681:5699   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5674:5710   */\n      mstore\n        /* \"#utility.yul\":5727:5746   */\n      0x84\n      add\n        /* \"token2/contracts/token/ERC20/ERC20.sol\":7913:7985  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_100\n        /* \"#utility.yul\":5350:5752   */\n      jump\n        /* \"token2/contracts/token/ERC20/ERC20.sol\":7913:7985  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n    tag_133:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"token2/contracts/token/ERC20/ERC20.sol\":8019:8034  _balances[from] */\n      dup5\n      dup2\n      and\n        /* \"token2/contracts/token/ERC20/ERC20.sol\":8019:8028  _balances */\n      0x00\n        /* \"token2/contracts/token/ERC20/ERC20.sol\":8019:8034  _balances[from] */\n      dup2\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"token2/contracts/token/ERC20/ERC20.sol\":8037:8057  fromBalance - amount */\n      dup8\n      dup8\n      sub\n        /* \"token2/contracts/token/ERC20/ERC20.sol\":8019:8057  _balances[from] = fromBalance - amount */\n      swap1\n      sstore\n        /* \"token2/contracts/token/ERC20/ERC20.sol\":8234:8247  _balances[to] */\n      swap4\n      dup8\n      and\n      dup1\n      dup4\n      mstore\n      swap2\n      dup5\n      swap1\n      keccak256\n        /* \"token2/contracts/token/ERC20/ERC20.sol\":8234:8257  _balances[to] += amount */\n      dup1\n      sload\n      dup8\n      add\n      swap1\n      sstore\n        /* \"token2/contracts/token/ERC20/ERC20.sol\":8283:8309  Transfer(from, to, amount) */\n      swap3\n      mload\n        /* \"#utility.yul\":1342:1367   */\n      dup6\n      dup2\n      mstore\n        /* \"token2/contracts/token/ERC20/ERC20.sol\":8234:8247  _balances[to] */\n      swap1\n      swap3\n        /* \"token2/contracts/token/ERC20/ERC20.sol\":8283:8309  Transfer(from, to, amount) */\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap2\n        /* \"#utility.yul\":1315:1333   */\n      add\n        /* \"token2/contracts/token/ERC20/ERC20.sol\":8283:8309  Transfer(from, to, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"token2/contracts/token/ERC20/ERC20.sol\":8320:8357  _afterTokenTransfer(from, to, amount) */\n      tag_123\n        /* \"token2/contracts/token/ERC20/ERC20.sol\":12317:12438  function _beforeTokenTransfer(... */\n      jump\n        /* \"#utility.yul\":14:562   */\n    tag_18:\n        /* \"#utility.yul\":126:130   */\n      0x00\n        /* \"#utility.yul\":155:157   */\n      0x20\n        /* \"#utility.yul\":184:186   */\n      dup1\n        /* \"#utility.yul\":173:182   */\n      dup4\n        /* \"#utility.yul\":166:187   */\n      mstore\n        /* \"#utility.yul\":216:222   */\n      dup4\n        /* \"#utility.yul\":210:223   */\n      mload\n        /* \"#utility.yul\":259:265   */\n      dup1\n        /* \"#utility.yul\":254:256   */\n      dup3\n        /* \"#utility.yul\":243:252   */\n      dup6\n        /* \"#utility.yul\":239:257   */\n      add\n        /* \"#utility.yul\":232:266   */\n      mstore\n        /* \"#utility.yul\":284:285   */\n      0x00\n        /* \"#utility.yul\":294:434   */\n    tag_144:\n        /* \"#utility.yul\":308:314   */\n      dup2\n        /* \"#utility.yul\":305:306   */\n      dup2\n        /* \"#utility.yul\":302:315   */\n      lt\n        /* \"#utility.yul\":294:434   */\n      iszero\n      tag_146\n      jumpi\n        /* \"#utility.yul\":403:417   */\n      dup6\n      dup2\n      add\n        /* \"#utility.yul\":399:422   */\n      dup4\n      add\n        /* \"#utility.yul\":393:423   */\n      mload\n        /* \"#utility.yul\":369:386   */\n      dup6\n      dup3\n      add\n        /* \"#utility.yul\":388:390   */\n      0x40\n        /* \"#utility.yul\":365:391   */\n      add\n        /* \"#utility.yul\":358:424   */\n      mstore\n        /* \"#utility.yul\":323:333   */\n      dup3\n      add\n        /* \"#utility.yul\":294:434   */\n      jump(tag_144)\n    tag_146:\n        /* \"#utility.yul\":298:301   */\n      pop\n        /* \"#utility.yul\":483:484   */\n      0x00\n        /* \"#utility.yul\":478:480   */\n      0x40\n        /* \"#utility.yul\":469:475   */\n      dup3\n        /* \"#utility.yul\":458:467   */\n      dup7\n        /* \"#utility.yul\":454:476   */\n      add\n        /* \"#utility.yul\":450:481   */\n      add\n        /* \"#utility.yul\":443:485   */\n      mstore\n        /* \"#utility.yul\":553:555   */\n      0x40\n        /* \"#utility.yul\":546:548   */\n      0x1f\n        /* \"#utility.yul\":542:549   */\n      not\n        /* \"#utility.yul\":537:539   */\n      0x1f\n        /* \"#utility.yul\":529:535   */\n      dup4\n        /* \"#utility.yul\":525:540   */\n      add\n        /* \"#utility.yul\":521:550   */\n      and\n        /* \"#utility.yul\":510:519   */\n      dup6\n        /* \"#utility.yul\":506:551   */\n      add\n        /* \"#utility.yul\":502:556   */\n      add\n        /* \"#utility.yul\":494:556   */\n      swap3\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":14:562   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":567:740   */\n    tag_141:\n        /* \"#utility.yul\":635:655   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":684:715   */\n      dup2\n      and\n        /* \"#utility.yul\":674:716   */\n      dup2\n      eq\n        /* \"#utility.yul\":664:734   */\n      tag_148\n      jumpi\n        /* \"#utility.yul\":730:731   */\n      0x00\n        /* \"#utility.yul\":727:728   */\n      dup1\n        /* \"#utility.yul\":720:732   */\n      revert\n        /* \"#utility.yul\":664:734   */\n    tag_148:\n        /* \"#utility.yul\":567:740   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":745:999   */\n    tag_21:\n        /* \"#utility.yul\":813:819   */\n      0x00\n        /* \"#utility.yul\":821:827   */\n      dup1\n        /* \"#utility.yul\":874:876   */\n      0x40\n        /* \"#utility.yul\":862:871   */\n      dup4\n        /* \"#utility.yul\":853:860   */\n      dup6\n        /* \"#utility.yul\":849:872   */\n      sub\n        /* \"#utility.yul\":845:877   */\n      slt\n        /* \"#utility.yul\":842:894   */\n      iszero\n      tag_150\n      jumpi\n        /* \"#utility.yul\":890:891   */\n      0x00\n        /* \"#utility.yul\":887:888   */\n      dup1\n        /* \"#utility.yul\":880:892   */\n      revert\n        /* \"#utility.yul\":842:894   */\n    tag_150:\n        /* \"#utility.yul\":913:942   */\n      tag_151\n        /* \"#utility.yul\":932:941   */\n      dup4\n        /* \"#utility.yul\":913:942   */\n      tag_141\n      jump\t// in\n    tag_151:\n        /* \"#utility.yul\":903:942   */\n      swap5\n        /* \"#utility.yul\":989:991   */\n      0x20\n        /* \"#utility.yul\":974:992   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":961:993   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":745:999   */\n      jump\t// out\n        /* \"#utility.yul\":1378:1706   */\n    tag_31:\n        /* \"#utility.yul\":1455:1461   */\n      0x00\n        /* \"#utility.yul\":1463:1469   */\n      dup1\n        /* \"#utility.yul\":1471:1477   */\n      0x00\n        /* \"#utility.yul\":1524:1526   */\n      0x60\n        /* \"#utility.yul\":1512:1521   */\n      dup5\n        /* \"#utility.yul\":1503:1510   */\n      dup7\n        /* \"#utility.yul\":1499:1522   */\n      sub\n        /* \"#utility.yul\":1495:1527   */\n      slt\n        /* \"#utility.yul\":1492:1544   */\n      iszero\n      tag_155\n      jumpi\n        /* \"#utility.yul\":1540:1541   */\n      0x00\n        /* \"#utility.yul\":1537:1538   */\n      dup1\n        /* \"#utility.yul\":1530:1542   */\n      revert\n        /* \"#utility.yul\":1492:1544   */\n    tag_155:\n        /* \"#utility.yul\":1563:1592   */\n      tag_156\n        /* \"#utility.yul\":1582:1591   */\n      dup5\n        /* \"#utility.yul\":1563:1592   */\n      tag_141\n      jump\t// in\n    tag_156:\n        /* \"#utility.yul\":1553:1592   */\n      swap3\n      pop\n        /* \"#utility.yul\":1611:1649   */\n      tag_157\n        /* \"#utility.yul\":1645:1647   */\n      0x20\n        /* \"#utility.yul\":1634:1643   */\n      dup6\n        /* \"#utility.yul\":1630:1648   */\n      add\n        /* \"#utility.yul\":1611:1649   */\n      tag_141\n      jump\t// in\n    tag_157:\n        /* \"#utility.yul\":1601:1649   */\n      swap2\n      pop\n        /* \"#utility.yul\":1696:1698   */\n      0x40\n        /* \"#utility.yul\":1685:1694   */\n      dup5\n        /* \"#utility.yul\":1681:1699   */\n      add\n        /* \"#utility.yul\":1668:1700   */\n      calldataload\n        /* \"#utility.yul\":1658:1700   */\n      swap1\n      pop\n        /* \"#utility.yul\":1378:1706   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":1900:2086   */\n    tag_44:\n        /* \"#utility.yul\":1959:1965   */\n      0x00\n        /* \"#utility.yul\":2012:2014   */\n      0x20\n        /* \"#utility.yul\":2000:2009   */\n      dup3\n        /* \"#utility.yul\":1991:1998   */\n      dup5\n        /* \"#utility.yul\":1987:2010   */\n      sub\n        /* \"#utility.yul\":1983:2015   */\n      slt\n        /* \"#utility.yul\":1980:2032   */\n      iszero\n      tag_160\n      jumpi\n        /* \"#utility.yul\":2028:2029   */\n      0x00\n        /* \"#utility.yul\":2025:2026   */\n      dup1\n        /* \"#utility.yul\":2018:2030   */\n      revert\n        /* \"#utility.yul\":1980:2032   */\n    tag_160:\n        /* \"#utility.yul\":2051:2080   */\n      tag_161\n        /* \"#utility.yul\":2070:2079   */\n      dup3\n        /* \"#utility.yul\":2051:2080   */\n      tag_141\n      jump\t// in\n    tag_161:\n        /* \"#utility.yul\":2041:2080   */\n      swap4\n        /* \"#utility.yul\":1900:2086   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2091:2351   */\n    tag_60:\n        /* \"#utility.yul\":2159:2165   */\n      0x00\n        /* \"#utility.yul\":2167:2173   */\n      dup1\n        /* \"#utility.yul\":2220:2222   */\n      0x40\n        /* \"#utility.yul\":2208:2217   */\n      dup4\n        /* \"#utility.yul\":2199:2206   */\n      dup6\n        /* \"#utility.yul\":2195:2218   */\n      sub\n        /* \"#utility.yul\":2191:2223   */\n      slt\n        /* \"#utility.yul\":2188:2240   */\n      iszero\n      tag_163\n      jumpi\n        /* \"#utility.yul\":2236:2237   */\n      0x00\n        /* \"#utility.yul\":2233:2234   */\n      dup1\n        /* \"#utility.yul\":2226:2238   */\n      revert\n        /* \"#utility.yul\":2188:2240   */\n    tag_163:\n        /* \"#utility.yul\":2259:2288   */\n      tag_164\n        /* \"#utility.yul\":2278:2287   */\n      dup4\n        /* \"#utility.yul\":2259:2288   */\n      tag_141\n      jump\t// in\n    tag_164:\n        /* \"#utility.yul\":2249:2288   */\n      swap2\n      pop\n        /* \"#utility.yul\":2307:2345   */\n      tag_165\n        /* \"#utility.yul\":2341:2343   */\n      0x20\n        /* \"#utility.yul\":2330:2339   */\n      dup5\n        /* \"#utility.yul\":2326:2344   */\n      add\n        /* \"#utility.yul\":2307:2345   */\n      tag_141\n      jump\t// in\n    tag_165:\n        /* \"#utility.yul\":2297:2345   */\n      swap1\n      pop\n        /* \"#utility.yul\":2091:2351   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2356:2736   */\n    tag_65:\n        /* \"#utility.yul\":2435:2436   */\n      0x01\n        /* \"#utility.yul\":2431:2443   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":2478:2490   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":2499:2560   */\n      tag_167\n      jumpi\n        /* \"#utility.yul\":2553:2557   */\n      0x7f\n        /* \"#utility.yul\":2545:2551   */\n      dup3\n        /* \"#utility.yul\":2541:2558   */\n      and\n        /* \"#utility.yul\":2531:2558   */\n      swap2\n      pop\n        /* \"#utility.yul\":2499:2560   */\n    tag_167:\n        /* \"#utility.yul\":2606:2608   */\n      0x20\n        /* \"#utility.yul\":2598:2604   */\n      dup3\n        /* \"#utility.yul\":2595:2609   */\n      lt\n        /* \"#utility.yul\":2575:2593   */\n      dup2\n        /* \"#utility.yul\":2572:2610   */\n      sub\n        /* \"#utility.yul\":2569:2730   */\n      tag_168\n      jumpi\n        /* \"#utility.yul\":2652:2662   */\n      0x4e487b71\n        /* \"#utility.yul\":2647:2650   */\n      0xe0\n        /* \"#utility.yul\":2643:2663   */\n      shl\n        /* \"#utility.yul\":2640:2641   */\n      0x00\n        /* \"#utility.yul\":2633:2664   */\n      mstore\n        /* \"#utility.yul\":2687:2691   */\n      0x22\n        /* \"#utility.yul\":2684:2685   */\n      0x04\n        /* \"#utility.yul\":2677:2692   */\n      mstore\n        /* \"#utility.yul\":2715:2719   */\n      0x24\n        /* \"#utility.yul\":2712:2713   */\n      0x00\n        /* \"#utility.yul\":2705:2720   */\n      revert\n        /* \"#utility.yul\":2569:2730   */\n    tag_168:\n      pop\n        /* \"#utility.yul\":2356:2736   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2741:2963   */\n    tag_88:\n        /* \"#utility.yul\":2806:2815   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":2827:2837   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":2824:2957   */\n      iszero\n      tag_70\n      jumpi\n        /* \"#utility.yul\":2879:2889   */\n      0x4e487b71\n        /* \"#utility.yul\":2874:2877   */\n      0xe0\n        /* \"#utility.yul\":2870:2890   */\n      shl\n        /* \"#utility.yul\":2867:2868   */\n      0x00\n        /* \"#utility.yul\":2860:2891   */\n      mstore\n        /* \"#utility.yul\":2914:2918   */\n      0x11\n        /* \"#utility.yul\":2911:2912   */\n      0x04\n        /* \"#utility.yul\":2904:2919   */\n      mstore\n        /* \"#utility.yul\":2942:2946   */\n      0x24\n        /* \"#utility.yul\":2939:2940   */\n      0x00\n        /* \"#utility.yul\":2932:2947   */\n      revert\n\n    auxdata: 0xa264697066735822122018a180804024ee98ff7897f2ae140d53f7f3896029cecc095c6692debbae909b64736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_52": {
									"entryPoint": null,
									"id": 52,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"abi_decode_string_fromMemory": {
									"entryPoint": 145,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_address_fromMemory": {
									"entryPoint": 320,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 521,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 604,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 461,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 123,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:4311:4",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:4",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "46:95:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "63:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "70:3:4",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "75:10:4",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "66:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "66:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "56:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "56:31:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "56:31:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "103:1:4",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "106:4:4",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "96:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "96:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "96:15:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "127:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "130:4:4",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "120:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "120:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "120:15:4"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "14:127:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "210:776:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "259:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "268:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "271:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "261:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "261:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "261:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "238:6:4"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "246:4:4",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "234:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "234:17:4"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "253:3:4"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "230:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "230:27:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "223:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "223:35:4"
															},
															"nodeType": "YulIf",
															"src": "220:55:4"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "284:23:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "300:6:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "294:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "294:13:4"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "288:2:4",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "316:28:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "334:2:4",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "338:1:4",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "330:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "330:10:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "342:1:4",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "326:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "326:18:4"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "320:2:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "367:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "369:16:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "369:18:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "369:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "359:2:4"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "363:2:4"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "356:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "356:10:4"
															},
															"nodeType": "YulIf",
															"src": "353:36:4"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "398:17:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "412:2:4",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "408:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "408:7:4"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "402:2:4",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "424:23:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "444:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "438:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "438:9:4"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "428:6:4",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "456:71:4",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "478:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_1",
																										"nodeType": "YulIdentifier",
																										"src": "502:2:4"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "506:4:4",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "498:3:4"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "498:13:4"
																							},
																							{
																								"name": "_3",
																								"nodeType": "YulIdentifier",
																								"src": "513:2:4"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "494:3:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "494:22:4"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "518:2:4",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "490:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "490:31:4"
																			},
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "523:2:4"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "486:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "486:40:4"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "474:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "474:53:4"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "460:10:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "586:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "588:16:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "588:18:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "588:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "545:10:4"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "557:2:4"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "542:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "542:18:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "565:10:4"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "577:6:4"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "562:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "562:22:4"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "539:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "539:46:4"
															},
															"nodeType": "YulIf",
															"src": "536:72:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "624:2:4",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "628:10:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "617:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "617:22:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "617:22:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "655:6:4"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "663:2:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "648:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "648:18:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "648:18:4"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "675:14:4",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "685:4:4",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "679:2:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "735:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "744:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "747:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "737:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "737:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "737:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "712:6:4"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "720:2:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "708:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "708:15:4"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "725:2:4"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "704:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "704:24:4"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "730:3:4"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "701:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "701:33:4"
															},
															"nodeType": "YulIf",
															"src": "698:53:4"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "760:10:4",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "769:1:4",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "764:1:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "825:87:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "memPtr",
																									"nodeType": "YulIdentifier",
																									"src": "854:6:4"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "862:1:4"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "850:3:4"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "850:14:4"
																						},
																						{
																							"name": "_4",
																							"nodeType": "YulIdentifier",
																							"src": "866:2:4"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "846:3:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "846:23:4"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "offset",
																											"nodeType": "YulIdentifier",
																											"src": "885:6:4"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "893:1:4"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "881:3:4"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "881:14:4"
																								},
																								{
																									"name": "_4",
																									"nodeType": "YulIdentifier",
																									"src": "897:2:4"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "877:3:4"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "877:23:4"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "871:5:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "871:30:4"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "839:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "839:63:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "839:63:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "790:1:4"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "793:2:4"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "787:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "787:9:4"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "797:19:4",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "799:15:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "808:1:4"
																				},
																				{
																					"name": "_4",
																					"nodeType": "YulIdentifier",
																					"src": "811:2:4"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "804:3:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "804:10:4"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "799:1:4"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "783:3:4",
																"statements": []
															},
															"src": "779:133:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nodeType": "YulIdentifier",
																						"src": "936:6:4"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "944:2:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "932:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "932:15:4"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "949:2:4"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "928:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "928:24:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "954:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "921:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "921:35:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "921:35:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "965:15:4",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "974:6:4"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "965:5:4"
																}
															]
														}
													]
												},
												"name": "abi_decode_string_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "184:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "192:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "200:5:4",
														"type": ""
													}
												],
												"src": "146:840:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1126:594:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1172:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1181:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1184:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1174:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1174:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1174:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1147:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1156:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1143:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1143:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1168:2:4",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1139:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1139:32:4"
															},
															"nodeType": "YulIf",
															"src": "1136:52:4"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1197:30:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1217:9:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1211:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1211:16:4"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "1201:6:4",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1236:28:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1254:2:4",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1258:1:4",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1250:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1250:10:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1262:1:4",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "1246:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1246:18:4"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1240:2:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1291:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1300:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1303:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1293:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1293:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1293:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1279:6:4"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1287:2:4"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1276:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1276:14:4"
															},
															"nodeType": "YulIf",
															"src": "1273:34:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1316:71:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1359:9:4"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1370:6:4"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1355:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1355:22:4"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1379:7:4"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "1326:28:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1326:61:4"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1316:6:4"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1396:41:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1422:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1433:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1418:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1418:18:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1412:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1412:25:4"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "1400:8:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1466:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1475:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1478:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1468:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1468:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1468:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "1452:8:4"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1462:2:4"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1449:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1449:16:4"
															},
															"nodeType": "YulIf",
															"src": "1446:36:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1491:73:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1534:9:4"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "1545:8:4"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1530:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1530:24:4"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1556:7:4"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "1501:28:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1501:63:4"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1491:6:4"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1573:38:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1596:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1607:2:4",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1592:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1592:18:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1586:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1586:25:4"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "1577:5:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1674:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1683:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1686:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1676:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1676:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1676:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1633:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1644:5:4"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "1659:3:4",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "1664:1:4",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "1655:3:4"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "1655:11:4"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1668:1:4",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "1651:3:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1651:19:4"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "1640:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1640:31:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1630:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1630:42:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1623:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1623:50:4"
															},
															"nodeType": "YulIf",
															"src": "1620:70:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1699:15:4",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1709:5:4"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "1699:6:4"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1076:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1087:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1099:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1107:6:4",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1115:6:4",
														"type": ""
													}
												],
												"src": "991:729:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1780:325:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1790:22:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1804:1:4",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1807:4:4"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "1800:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1800:12:4"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "1790:6:4"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1821:38:4",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1851:4:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1857:1:4",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1847:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1847:12:4"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "1825:18:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1898:31:4",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1900:27:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "1914:6:4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1922:4:4",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "1910:3:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1910:17:4"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1900:6:4"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1878:18:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1871:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1871:26:4"
															},
															"nodeType": "YulIf",
															"src": "1868:61:4"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1988:111:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2009:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2016:3:4",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2021:10:4",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "2012:3:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2012:20:4"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2002:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2002:31:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2002:31:4"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2053:1:4",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2056:4:4",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2046:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2046:15:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2046:15:4"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2081:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2084:4:4",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2074:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2074:15:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2074:15:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1944:18:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1967:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1975:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1964:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1964:14:4"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "1941:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1941:38:4"
															},
															"nodeType": "YulIf",
															"src": "1938:161:4"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "1760:4:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1769:6:4",
														"type": ""
													}
												],
												"src": "1725:380:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2166:65:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2183:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "2186:3:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2176:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2176:14:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2176:14:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2199:26:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2217:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2220:4:4",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "2207:9:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2207:18:4"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "2199:4:4"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "2149:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "2157:4:4",
														"type": ""
													}
												],
												"src": "2110:121:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2317:464:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2350:425:4",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2364:11:4",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "2374:1:4",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nodeType": "YulTypedName",
																				"src": "2368:2:4",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "2395:2:4"
																				},
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "2399:5:4"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2388:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2388:17:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2388:17:4"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2418:31:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "2440:2:4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2444:4:4",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nodeType": "YulIdentifier",
																				"src": "2430:9:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2430:19:4"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nodeType": "YulTypedName",
																				"src": "2422:4:4",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2462:57:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nodeType": "YulIdentifier",
																					"src": "2485:4:4"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2495:1:4",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nodeType": "YulIdentifier",
																									"src": "2502:10:4"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "2514:2:4",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "2498:3:4"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2498:19:4"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nodeType": "YulIdentifier",
																						"src": "2491:3:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2491:27:4"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2481:3:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2481:38:4"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nodeType": "YulTypedName",
																				"src": "2466:11:4",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "2556:23:4",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "2558:19:4",
																					"value": {
																						"name": "data",
																						"nodeType": "YulIdentifier",
																						"src": "2573:4:4"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nodeType": "YulIdentifier",
																							"src": "2558:11:4"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nodeType": "YulIdentifier",
																					"src": "2538:10:4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2550:4:4",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "2535:2:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2535:20:4"
																		},
																		"nodeType": "YulIf",
																		"src": "2532:47:4"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2592:41:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nodeType": "YulIdentifier",
																					"src": "2606:4:4"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2616:1:4",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nodeType": "YulIdentifier",
																									"src": "2623:3:4"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "2628:2:4",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "2619:3:4"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2619:12:4"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nodeType": "YulIdentifier",
																						"src": "2612:3:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2612:20:4"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2602:3:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2602:31:4"
																		},
																		"variables": [
																			{
																				"name": "_2",
																				"nodeType": "YulTypedName",
																				"src": "2596:2:4",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2646:24:4",
																		"value": {
																			"name": "deleteStart",
																			"nodeType": "YulIdentifier",
																			"src": "2659:11:4"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nodeType": "YulTypedName",
																				"src": "2650:5:4",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "2744:21:4",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nodeType": "YulIdentifier",
																								"src": "2753:5:4"
																							},
																							{
																								"name": "_1",
																								"nodeType": "YulIdentifier",
																								"src": "2760:2:4"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nodeType": "YulIdentifier",
																							"src": "2746:6:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2746:17:4"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "2746:17:4"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "2694:5:4"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "2701:2:4"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "2691:2:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2691:13:4"
																		},
																		"nodeType": "YulForLoop",
																		"post": {
																			"nodeType": "YulBlock",
																			"src": "2705:26:4",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "2707:22:4",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nodeType": "YulIdentifier",
																								"src": "2720:5:4"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2727:1:4",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "2716:3:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2716:13:4"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nodeType": "YulIdentifier",
																							"src": "2707:5:4"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nodeType": "YulBlock",
																			"src": "2687:3:4",
																			"statements": []
																		},
																		"src": "2683:82:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "2333:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2338:2:4",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2330:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2330:11:4"
															},
															"nodeType": "YulIf",
															"src": "2327:448:4"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "2289:5:4",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "2296:3:4",
														"type": ""
													},
													{
														"name": "startIndex",
														"nodeType": "YulTypedName",
														"src": "2301:10:4",
														"type": ""
													}
												],
												"src": "2236:545:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2871:81:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2881:65:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nodeType": "YulIdentifier",
																				"src": "2896:4:4"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "2914:1:4",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nodeType": "YulIdentifier",
																										"src": "2917:3:4"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "2910:3:4"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2910:11:4"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "2927:1:4",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nodeType": "YulIdentifier",
																									"src": "2923:3:4"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2923:6:4"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nodeType": "YulIdentifier",
																							"src": "2906:3:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2906:24:4"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "2902:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2902:29:4"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2892:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2892:40:4"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2938:1:4",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nodeType": "YulIdentifier",
																				"src": "2941:3:4"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "2934:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2934:11:4"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "2889:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2889:57:4"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nodeType": "YulIdentifier",
																	"src": "2881:4:4"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "2848:4:4",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "2854:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nodeType": "YulTypedName",
														"src": "2862:4:4",
														"type": ""
													}
												],
												"src": "2786:166:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3053:1256:4",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3063:24:4",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "3083:3:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3077:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3077:10:4"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nodeType": "YulTypedName",
																	"src": "3067:6:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3130:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "3132:16:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3132:18:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3132:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "3102:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3118:2:4",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3122:1:4",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "3114:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3114:10:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3126:1:4",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3110:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3110:18:4"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3099:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3099:30:4"
															},
															"nodeType": "YulIf",
															"src": "3096:56:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "3205:4:4"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nodeType": "YulIdentifier",
																						"src": "3243:4:4"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nodeType": "YulIdentifier",
																					"src": "3237:5:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3237:11:4"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nodeType": "YulIdentifier",
																			"src": "3211:25:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3211:38:4"
																	},
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "3251:6:4"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nodeType": "YulIdentifier",
																	"src": "3161:43:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3161:97:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3161:97:4"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3267:18:4",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3284:1:4",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulTypedName",
																	"src": "3271:9:4",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3294:23:4",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3313:4:4",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "srcOffset_1",
																	"nodeType": "YulTypedName",
																	"src": "3298:11:4",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3326:24:4",
															"value": {
																"name": "srcOffset_1",
																"nodeType": "YulIdentifier",
																"src": "3339:11:4"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulIdentifier",
																	"src": "3326:9:4"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3396:656:4",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "3410:35:4",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "3429:6:4"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "3441:2:4",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nodeType": "YulIdentifier",
																								"src": "3437:3:4"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "3437:7:4"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "3425:3:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3425:20:4"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nodeType": "YulTypedName",
																						"src": "3414:7:4",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "3458:49:4",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "3502:4:4"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nodeType": "YulIdentifier",
																						"src": "3472:29:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3472:35:4"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nodeType": "YulTypedName",
																						"src": "3462:6:4",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "3520:10:4",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3529:1:4",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nodeType": "YulTypedName",
																						"src": "3524:1:4",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "3607:172:4",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "3632:6:4"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nodeType": "YulIdentifier",
																														"src": "3650:3:4"
																													},
																													{
																														"name": "srcOffset",
																														"nodeType": "YulIdentifier",
																														"src": "3655:9:4"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nodeType": "YulIdentifier",
																													"src": "3646:3:4"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "3646:19:4"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nodeType": "YulIdentifier",
																											"src": "3640:5:4"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "3640:26:4"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "3625:6:4"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3625:42:4"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "3625:42:4"
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "3684:24:4",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "3698:6:4"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "3706:1:4",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "3694:3:4"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3694:14:4"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nodeType": "YulIdentifier",
																									"src": "3684:6:4"
																								}
																							]
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "3725:40:4",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nodeType": "YulIdentifier",
																										"src": "3742:9:4"
																									},
																									{
																										"name": "srcOffset_1",
																										"nodeType": "YulIdentifier",
																										"src": "3753:11:4"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "3738:3:4"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3738:27:4"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nodeType": "YulIdentifier",
																									"src": "3725:9:4"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "3554:1:4"
																						},
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "3557:7:4"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "3551:2:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3551:14:4"
																				},
																				"nodeType": "YulForLoop",
																				"post": {
																					"nodeType": "YulBlock",
																					"src": "3566:28:4",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "3568:24:4",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nodeType": "YulIdentifier",
																										"src": "3577:1:4"
																									},
																									{
																										"name": "srcOffset_1",
																										"nodeType": "YulIdentifier",
																										"src": "3580:11:4"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "3573:3:4"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3573:19:4"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "3568:1:4"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nodeType": "YulBlock",
																					"src": "3547:3:4",
																					"statements": []
																				},
																				"src": "3543:236:4"
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "3827:166:4",
																					"statements": [
																						{
																							"nodeType": "YulVariableDeclaration",
																							"src": "3845:43:4",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "3872:3:4"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "3877:9:4"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "3868:3:4"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "3868:19:4"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "3862:5:4"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3862:26:4"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nodeType": "YulTypedName",
																									"src": "3849:9:4",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "3912:6:4"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nodeType": "YulIdentifier",
																												"src": "3924:9:4"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nodeType": "YulLiteral",
																																				"src": "3951:1:4",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "newLen",
																																				"nodeType": "YulIdentifier",
																																				"src": "3954:6:4"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nodeType": "YulIdentifier",
																																			"src": "3947:3:4"
																																		},
																																		"nodeType": "YulFunctionCall",
																																		"src": "3947:14:4"
																																	},
																																	{
																																		"kind": "number",
																																		"nodeType": "YulLiteral",
																																		"src": "3963:3:4",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nodeType": "YulIdentifier",
																																	"src": "3943:3:4"
																																},
																																"nodeType": "YulFunctionCall",
																																"src": "3943:24:4"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nodeType": "YulLiteral",
																																		"src": "3973:1:4",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nodeType": "YulIdentifier",
																																	"src": "3969:3:4"
																																},
																																"nodeType": "YulFunctionCall",
																																"src": "3969:6:4"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nodeType": "YulIdentifier",
																															"src": "3939:3:4"
																														},
																														"nodeType": "YulFunctionCall",
																														"src": "3939:37:4"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nodeType": "YulIdentifier",
																													"src": "3935:3:4"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "3935:42:4"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nodeType": "YulIdentifier",
																											"src": "3920:3:4"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "3920:58:4"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "3905:6:4"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3905:74:4"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "3905:74:4"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "3798:7:4"
																						},
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "3807:6:4"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "3795:2:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3795:19:4"
																				},
																				"nodeType": "YulIf",
																				"src": "3792:201:4"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "4013:4:4"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "4027:1:4",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "newLen",
																											"nodeType": "YulIdentifier",
																											"src": "4030:6:4"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nodeType": "YulIdentifier",
																										"src": "4023:3:4"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "4023:14:4"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "4039:1:4",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "4019:3:4"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "4019:22:4"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "4006:6:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4006:36:4"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "4006:36:4"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "3389:663:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3394:1:4",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "4069:234:4",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "4083:14:4",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4096:1:4",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nodeType": "YulTypedName",
																						"src": "4087:5:4",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "4132:67:4",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "4150:35:4",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "4169:3:4"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "4174:9:4"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "4165:3:4"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "4165:19:4"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "4159:5:4"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "4159:26:4"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "4150:5:4"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nodeType": "YulIdentifier",
																					"src": "4113:6:4"
																				},
																				"nodeType": "YulIf",
																				"src": "4110:89:4"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "4219:4:4"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "4278:5:4"
																								},
																								{
																									"name": "newLen",
																									"nodeType": "YulIdentifier",
																									"src": "4285:6:4"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nodeType": "YulIdentifier",
																								"src": "4225:52:4"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "4225:67:4"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "4212:6:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4212:81:4"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "4212:81:4"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "4061:242:4",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "3369:6:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3377:2:4",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3366:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3366:14:4"
															},
															"nodeType": "YulSwitch",
															"src": "3359:944:4"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "3038:4:4",
														"type": ""
													},
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "3044:3:4",
														"type": ""
													}
												],
												"src": "2957:1352:4"
											}
										]
									},
									"contents": "{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_string_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := mload(offset)\n        let _2 := sub(shl(64, 1), 1)\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        let _4 := 0x20\n        if gt(add(add(offset, _1), _4), end) { revert(0, 0) }\n        let i := 0\n        for { } lt(i, _1) { i := add(i, _4) }\n        {\n            mstore(add(add(memPtr, i), _4), mload(add(add(offset, i), _4)))\n        }\n        mstore(add(add(memPtr, _1), _4), 0)\n        array := memPtr\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_address_fromMemory(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let offset := mload(headStart)\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(0, 0) }\n        value0 := abi_decode_string_fromMemory(add(headStart, offset), dataEnd)\n        let offset_1 := mload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_string_fromMemory(add(headStart, offset_1), dataEnd)\n        let value := mload(add(headStart, 64))\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value2 := value\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(_1, array)\n            let data := keccak256(_1, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := srcOffset_1\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n}",
									"id": 4,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b5060405162000ba538038062000ba5833981016040819052620000349162000140565b60046200004284826200025c565b5060056200005183826200025c565b50600280546001600160a01b0319166001600160a01b039290921691909117905550620003289050565b634e487b7160e01b600052604160045260246000fd5b600082601f830112620000a357600080fd5b81516001600160401b0380821115620000c057620000c06200007b565b604051601f8301601f19908116603f01168101908282118183101715620000eb57620000eb6200007b565b816040528381526020925086838588010111156200010857600080fd5b600091505b838210156200012c57858201830151818301840152908201906200010d565b600093810190920192909252949350505050565b6000806000606084860312156200015657600080fd5b83516001600160401b03808211156200016e57600080fd5b6200017c8783880162000091565b945060208601519150808211156200019357600080fd5b50620001a28682870162000091565b604086015190935090506001600160a01b0381168114620001c257600080fd5b809150509250925092565b600181811c90821680620001e257607f821691505b6020821081036200020357634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200025757600081815260208120601f850160051c81016020861015620002325750805b601f850160051c820191505b8181101562000253578281556001016200023e565b5050505b505050565b81516001600160401b038111156200027857620002786200007b565b6200029081620002898454620001cd565b8462000209565b602080601f831160018114620002c85760008415620002af5750858301515b600019600386901b1c1916600185901b17855562000253565b600085815260208120601f198616915b82811015620002f957888601518255948401946001909101908401620002d8565b5085821015620003185787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b61086d80620003386000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461012357806370a082311461013657806395d89b411461015f578063a457c2d714610167578063a9059cbb1461017a578063dd62ed3e1461018d57600080fd5b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100ef57806323b872dd14610101578063313ce56714610114575b600080fd5b6100b66101a0565b6040516100c391906106b7565b60405180910390f35b6100df6100da366004610721565b610232565b60405190151581526020016100c3565b6003545b6040519081526020016100c3565b6100df61010f36600461074b565b61024c565b604051601281526020016100c3565b6100df610131366004610721565b610270565b6100f3610144366004610787565b6001600160a01b031660009081526020819052604090205490565b6100b6610292565b6100df610175366004610721565b6102a1565b6100df610188366004610721565b610321565b6100f361019b3660046107a9565b61032f565b6060600480546101af906107dc565b80601f01602080910402602001604051908101604052809291908181526020018280546101db906107dc565b80156102285780601f106101fd57610100808354040283529160200191610228565b820191906000526020600020905b81548152906001019060200180831161020b57829003601f168201915b5050505050905090565b60003361024081858561035a565b60019150505b92915050565b60003361025a85828561047e565b610265858585610513565b506001949350505050565b600033610240818585610283838361032f565b61028d9190610816565b61035a565b6060600580546101af906107dc565b600033816102af828661032f565b9050838110156103145760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b610265828686840361035a565b600033610240818585610513565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166103bc5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161030b565b6001600160a01b03821661041d5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161030b565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6002546001600160a01b039081169083160361049957505050565b60006104a5848461032f565b9050600019811461050d57818110156105005760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000604482015260640161030b565b61050d848484840361035a565b50505050565b6001600160a01b0383166105775760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161030b565b6001600160a01b0382166105d95760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161030b565b6001600160a01b038316600090815260208190526040902054818110156106515760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b606482015260840161030b565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a361050d565b600060208083528351808285015260005b818110156106e4578581018301518582016040015282016106c8565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b038116811461071c57600080fd5b919050565b6000806040838503121561073457600080fd5b61073d83610705565b946020939093013593505050565b60008060006060848603121561076057600080fd5b61076984610705565b925061077760208501610705565b9150604084013590509250925092565b60006020828403121561079957600080fd5b6107a282610705565b9392505050565b600080604083850312156107bc57600080fd5b6107c583610705565b91506107d360208401610705565b90509250929050565b600181811c908216806107f057607f821691505b60208210810361081057634e487b7160e01b600052602260045260246000fd5b50919050565b8082018082111561024657634e487b7160e01b600052601160045260246000fdfea264697066735822122018a180804024ee98ff7897f2ae140d53f7f3896029cecc095c6692debbae909b64736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0xBA5 CODESIZE SUB DUP1 PUSH3 0xBA5 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0x140 JUMP JUMPDEST PUSH1 0x4 PUSH3 0x42 DUP5 DUP3 PUSH3 0x25C JUMP JUMPDEST POP PUSH1 0x5 PUSH3 0x51 DUP4 DUP3 PUSH3 0x25C JUMP JUMPDEST POP PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE POP PUSH3 0x328 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0xA3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0xC0 JUMPI PUSH3 0xC0 PUSH3 0x7B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH3 0xEB JUMPI PUSH3 0xEB PUSH3 0x7B JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE PUSH1 0x20 SWAP3 POP DUP7 DUP4 DUP6 DUP9 ADD ADD GT ISZERO PUSH3 0x108 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 POP JUMPDEST DUP4 DUP3 LT ISZERO PUSH3 0x12C JUMPI DUP6 DUP3 ADD DUP4 ADD MLOAD DUP2 DUP4 ADD DUP5 ADD MSTORE SWAP1 DUP3 ADD SWAP1 PUSH3 0x10D JUMP JUMPDEST PUSH1 0x0 SWAP4 DUP2 ADD SWAP1 SWAP3 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH3 0x156 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x16E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x17C DUP8 DUP4 DUP9 ADD PUSH3 0x91 JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH3 0x193 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x1A2 DUP7 DUP3 DUP8 ADD PUSH3 0x91 JUMP JUMPDEST PUSH1 0x40 DUP7 ADD MLOAD SWAP1 SWAP4 POP SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0x1C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x1E2 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x203 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x257 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH3 0x232 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x253 JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x23E JUMP JUMPDEST POP POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH3 0x278 JUMPI PUSH3 0x278 PUSH3 0x7B JUMP JUMPDEST PUSH3 0x290 DUP2 PUSH3 0x289 DUP5 SLOAD PUSH3 0x1CD JUMP JUMPDEST DUP5 PUSH3 0x209 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x2C8 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x2AF JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH3 0x253 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x2F9 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH3 0x2D8 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH3 0x318 JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x86D DUP1 PUSH3 0x338 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x136 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x15F JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x167 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x17A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x18D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x114 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x1A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0x6B7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDF PUSH2 0xDA CALLDATASIZE PUSH1 0x4 PUSH2 0x721 JUMP JUMPDEST PUSH2 0x232 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH1 0x3 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x10F CALLDATASIZE PUSH1 0x4 PUSH2 0x74B JUMP JUMPDEST PUSH2 0x24C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x131 CALLDATASIZE PUSH1 0x4 PUSH2 0x721 JUMP JUMPDEST PUSH2 0x270 JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x144 CALLDATASIZE PUSH1 0x4 PUSH2 0x787 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x292 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x175 CALLDATASIZE PUSH1 0x4 PUSH2 0x721 JUMP JUMPDEST PUSH2 0x2A1 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x188 CALLDATASIZE PUSH1 0x4 PUSH2 0x721 JUMP JUMPDEST PUSH2 0x321 JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x19B CALLDATASIZE PUSH1 0x4 PUSH2 0x7A9 JUMP JUMPDEST PUSH2 0x32F JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x1AF SWAP1 PUSH2 0x7DC JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1DB SWAP1 PUSH2 0x7DC JUMP JUMPDEST DUP1 ISZERO PUSH2 0x228 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1FD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x228 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x20B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x35A JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x25A DUP6 DUP3 DUP6 PUSH2 0x47E JUMP JUMPDEST PUSH2 0x265 DUP6 DUP6 DUP6 PUSH2 0x513 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x283 DUP4 DUP4 PUSH2 0x32F JUMP JUMPDEST PUSH2 0x28D SWAP2 SWAP1 PUSH2 0x816 JUMP JUMPDEST PUSH2 0x35A JUMP JUMPDEST PUSH1 0x60 PUSH1 0x5 DUP1 SLOAD PUSH2 0x1AF SWAP1 PUSH2 0x7DC JUMP JUMPDEST PUSH1 0x0 CALLER DUP2 PUSH2 0x2AF DUP3 DUP7 PUSH2 0x32F JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x314 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x265 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x35A JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x513 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x3BC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x30B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x41D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x30B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP4 AND SUB PUSH2 0x499 JUMPI POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4A5 DUP5 DUP5 PUSH2 0x32F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 NOT DUP2 EQ PUSH2 0x50D JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x500 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x30B JUMP JUMPDEST PUSH2 0x50D DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x35A JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x577 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x30B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5D9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x30B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x651 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x30B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP8 DUP8 SUB SWAP1 SSTORE SWAP4 DUP8 AND DUP1 DUP4 MSTORE SWAP2 DUP5 SWAP1 KECCAK256 DUP1 SLOAD DUP8 ADD SWAP1 SSTORE SWAP3 MLOAD DUP6 DUP2 MSTORE SWAP1 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x50D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x6E4 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x6C8 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x71C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x734 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x73D DUP4 PUSH2 0x705 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x760 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x769 DUP5 PUSH2 0x705 JUMP JUMPDEST SWAP3 POP PUSH2 0x777 PUSH1 0x20 DUP6 ADD PUSH2 0x705 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x799 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7A2 DUP3 PUSH2 0x705 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x7BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7C5 DUP4 PUSH2 0x705 JUMP JUMPDEST SWAP2 POP PUSH2 0x7D3 PUSH1 0x20 DUP5 ADD PUSH2 0x705 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x7F0 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x810 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x246 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 XOR LOG1 DUP1 DUP1 BLOCKHASH 0x24 0xEE SWAP9 SELFDESTRUCT PUSH25 0x97F2AE140D53F7F3896029CECC095C6692DEBBAE909B64736F PUSH13 0x63430008120033000000000000 ",
							"sourceMap": "1401:11747:0:-:0;;;2004:158;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2088:5;:13;2096:5;2088;:13;:::i;:::-;-1:-1:-1;2111:7:0;:17;2121:7;2111;:17;:::i;:::-;-1:-1:-1;2138:7:0;:17;;-1:-1:-1;;;;;;2138:17:0;-1:-1:-1;;;;;2138:17:0;;;;;;;;;;-1:-1:-1;1401:11747:0;;-1:-1:-1;1401:11747:0;14:127:4;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:840;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;294:13;;-1:-1:-1;;;;;356:10:4;;;353:36;;;369:18;;:::i;:::-;444:2;438:9;412:2;498:13;;-1:-1:-1;;494:22:4;;;518:2;490:31;486:40;474:53;;;542:18;;;562:22;;;539:46;536:72;;;588:18;;:::i;:::-;628:10;624:2;617:22;663:2;655:6;648:18;685:4;675:14;;730:3;725:2;720;712:6;708:15;704:24;701:33;698:53;;;747:1;744;737:12;698:53;769:1;760:10;;779:133;793:2;790:1;787:9;779:133;;;881:14;;;877:23;;871:30;850:14;;;846:23;;839:63;804:10;;;;779:133;;;954:1;932:15;;;928:24;;;921:35;;;;936:6;146:840;-1:-1:-1;;;;146:840:4:o;991:729::-;1099:6;1107;1115;1168:2;1156:9;1147:7;1143:23;1139:32;1136:52;;;1184:1;1181;1174:12;1136:52;1211:16;;-1:-1:-1;;;;;1276:14:4;;;1273:34;;;1303:1;1300;1293:12;1273:34;1326:61;1379:7;1370:6;1359:9;1355:22;1326:61;:::i;:::-;1316:71;;1433:2;1422:9;1418:18;1412:25;1396:41;;1462:2;1452:8;1449:16;1446:36;;;1478:1;1475;1468:12;1446:36;;1501:63;1556:7;1545:8;1534:9;1530:24;1501:63;:::i;:::-;1607:2;1592:18;;1586:25;1491:73;;-1:-1:-1;1586:25:4;-1:-1:-1;;;;;;1640:31:4;;1630:42;;1620:70;;1686:1;1683;1676:12;1620:70;1709:5;1699:15;;;991:729;;;;;:::o;1725:380::-;1804:1;1800:12;;;;1847;;;1868:61;;1922:4;1914:6;1910:17;1900:27;;1868:61;1975:2;1967:6;1964:14;1944:18;1941:38;1938:161;;2021:10;2016:3;2012:20;2009:1;2002:31;2056:4;2053:1;2046:15;2084:4;2081:1;2074:15;1938:161;;1725:380;;;:::o;2236:545::-;2338:2;2333:3;2330:11;2327:448;;;2374:1;2399:5;2395:2;2388:17;2444:4;2440:2;2430:19;2514:2;2502:10;2498:19;2495:1;2491:27;2485:4;2481:38;2550:4;2538:10;2535:20;2532:47;;;-1:-1:-1;2573:4:4;2532:47;2628:2;2623:3;2619:12;2616:1;2612:20;2606:4;2602:31;2592:41;;2683:82;2701:2;2694:5;2691:13;2683:82;;;2746:17;;;2727:1;2716:13;2683:82;;;2687:3;;;2327:448;2236:545;;;:::o;2957:1352::-;3077:10;;-1:-1:-1;;;;;3099:30:4;;3096:56;;;3132:18;;:::i;:::-;3161:97;3251:6;3211:38;3243:4;3237:11;3211:38;:::i;:::-;3205:4;3161:97;:::i;:::-;3313:4;;3377:2;3366:14;;3394:1;3389:663;;;;4096:1;4113:6;4110:89;;;-1:-1:-1;4165:19:4;;;4159:26;4110:89;-1:-1:-1;;2914:1:4;2910:11;;;2906:24;2902:29;2892:40;2938:1;2934:11;;;2889:57;4212:81;;3359:944;;3389:663;2183:1;2176:14;;;2220:4;2207:18;;-1:-1:-1;;3425:20:4;;;3543:236;3557:7;3554:1;3551:14;3543:236;;;3646:19;;;3640:26;3625:42;;3738:27;;;;3706:1;3694:14;;;;3573:19;;3543:236;;;3547:3;3807:6;3798:7;3795:19;3792:201;;;3868:19;;;3862:26;-1:-1:-1;;3951:1:4;3947:14;;;3963:3;3943:24;3939:37;3935:42;3920:58;3905:74;;3792:201;-1:-1:-1;;;;;4039:1:4;4023:14;;;4019:22;4006:36;;-1:-1:-1;2957:1352:4:o;:::-;1401:11747:0;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_afterTokenTransfer_599": {
									"entryPoint": null,
									"id": 599,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_528": {
									"entryPoint": 858,
									"id": 528,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_beforeTokenTransfer_588": {
									"entryPoint": null,
									"id": 588,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_msgSender_715": {
									"entryPoint": null,
									"id": 715,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_577": {
									"entryPoint": 1150,
									"id": 577,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transfer_354": {
									"entryPoint": 1299,
									"id": 354,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_149": {
									"entryPoint": 815,
									"id": 149,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_174": {
									"entryPoint": 562,
									"id": 174,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_106": {
									"entryPoint": null,
									"id": 106,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_82": {
									"entryPoint": null,
									"id": 82,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@decreaseAllowance_277": {
									"entryPoint": 673,
									"id": 277,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@increaseAllowance_236": {
									"entryPoint": 624,
									"id": 236,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@name_62": {
									"entryPoint": 416,
									"id": 62,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@symbol_72": {
									"entryPoint": 658,
									"id": 72,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_92": {
									"entryPoint": null,
									"id": 92,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_207": {
									"entryPoint": 588,
									"id": 207,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_131": {
									"entryPoint": 801,
									"id": 131,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_address": {
									"entryPoint": 1797,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 1927,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 1961,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 1867,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 1825,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1719,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2070,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 2012,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:5754:4",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:4",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "135:427:4",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "145:12:4",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "155:2:4",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "149:2:4",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "173:9:4"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "184:2:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "166:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "166:21:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "166:21:4"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "196:27:4",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "216:6:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "210:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "210:13:4"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "200:6:4",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "243:9:4"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "254:2:4"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "239:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "239:18:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "259:6:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "232:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "232:34:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "232:34:4"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "275:10:4",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "284:1:4",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "279:1:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "344:90:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "373:9:4"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "384:1:4"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "369:3:4"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "369:17:4"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "388:2:4",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "365:3:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "365:26:4"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value0",
																											"nodeType": "YulIdentifier",
																											"src": "407:6:4"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "415:1:4"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "403:3:4"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "403:14:4"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "419:2:4"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "399:3:4"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "399:23:4"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "393:5:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "393:30:4"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "358:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "358:66:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "358:66:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "305:1:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "308:6:4"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "302:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "302:13:4"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "316:19:4",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "318:15:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "327:1:4"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "330:2:4"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "323:3:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "323:10:4"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "318:1:4"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "298:3:4",
																"statements": []
															},
															"src": "294:140:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "458:9:4"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "469:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "454:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "454:22:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "478:2:4",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "450:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "450:31:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "483:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "443:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "443:42:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "443:42:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "494:62:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "510:9:4"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "529:6:4"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "537:2:4",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "525:3:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "525:15:4"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "546:2:4",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "542:3:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "542:7:4"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "521:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "521:29:4"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "506:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "506:45:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "553:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "502:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "502:54:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "494:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "104:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "115:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "126:4:4",
														"type": ""
													}
												],
												"src": "14:548:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "616:124:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "626:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "648:6:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "635:12:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "635:20:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "626:5:4"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "718:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "727:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "730:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "720:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "720:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "720:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "677:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "688:5:4"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "703:3:4",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "708:1:4",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "699:3:4"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "699:11:4"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "712:1:4",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "695:3:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "695:19:4"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "684:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "684:31:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "674:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "674:42:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "667:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "667:50:4"
															},
															"nodeType": "YulIf",
															"src": "664:70:4"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "595:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "606:5:4",
														"type": ""
													}
												],
												"src": "567:173:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "832:167:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "878:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "887:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "890:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "880:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "880:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "880:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "853:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "862:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "849:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "849:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "874:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "845:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "845:32:4"
															},
															"nodeType": "YulIf",
															"src": "842:52:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "903:39:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "932:9:4"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "913:18:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "913:29:4"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "903:6:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "951:42:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "978:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "989:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "974:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "974:18:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "961:12:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "961:32:4"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "951:6:4"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "790:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "801:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "813:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "821:6:4",
														"type": ""
													}
												],
												"src": "745:254:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1099:92:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1109:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1121:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1132:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1117:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1117:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1109:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1151:9:4"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "1176:6:4"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1169:6:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1169:14:4"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1162:6:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1162:22:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1144:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1144:41:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1144:41:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1068:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1079:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1090:4:4",
														"type": ""
													}
												],
												"src": "1004:187:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1297:76:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1307:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1319:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1330:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1315:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1315:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1307:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1349:9:4"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1360:6:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1342:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1342:25:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1342:25:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1266:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1277:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1288:4:4",
														"type": ""
													}
												],
												"src": "1196:177:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1482:224:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1528:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1537:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1540:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1530:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1530:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1530:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1503:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1512:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1499:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1499:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1524:2:4",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1495:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1495:32:4"
															},
															"nodeType": "YulIf",
															"src": "1492:52:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1553:39:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1582:9:4"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1563:18:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1563:29:4"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1553:6:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1601:48:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1634:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1645:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1630:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1630:18:4"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1611:18:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1611:38:4"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1601:6:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1658:42:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1685:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1696:2:4",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1681:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1681:18:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1668:12:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1668:32:4"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "1658:6:4"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1432:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1443:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1455:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1463:6:4",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1471:6:4",
														"type": ""
													}
												],
												"src": "1378:328:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1808:87:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1818:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1830:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1841:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1826:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1826:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1818:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1860:9:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1875:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1883:4:4",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1871:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1871:17:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1853:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1853:36:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1853:36:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1777:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1788:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1799:4:4",
														"type": ""
													}
												],
												"src": "1711:184:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1970:116:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2016:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2025:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2028:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2018:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2018:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2018:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1991:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2000:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1987:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1987:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2012:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1983:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1983:32:4"
															},
															"nodeType": "YulIf",
															"src": "1980:52:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2041:39:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2070:9:4"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2051:18:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2051:29:4"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2041:6:4"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1936:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1947:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1959:6:4",
														"type": ""
													}
												],
												"src": "1900:186:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2178:173:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2224:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2233:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2236:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2226:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2226:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2226:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2199:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2208:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2195:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2195:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2220:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2191:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2191:32:4"
															},
															"nodeType": "YulIf",
															"src": "2188:52:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2249:39:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2278:9:4"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2259:18:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2259:29:4"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2249:6:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2297:48:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2330:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2341:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2326:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2326:18:4"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2307:18:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2307:38:4"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2297:6:4"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2136:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2147:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2159:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2167:6:4",
														"type": ""
													}
												],
												"src": "2091:260:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2411:325:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2421:22:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2435:1:4",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "2438:4:4"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "2431:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2431:12:4"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "2421:6:4"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2452:38:4",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "2482:4:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2488:1:4",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2478:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2478:12:4"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "2456:18:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2529:31:4",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "2531:27:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "2545:6:4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2553:4:4",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "2541:3:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2541:17:4"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2531:6:4"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "2509:18:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2502:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2502:26:4"
															},
															"nodeType": "YulIf",
															"src": "2499:61:4"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2619:111:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2640:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2647:3:4",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2652:10:4",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "2643:3:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2643:20:4"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2633:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2633:31:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2633:31:4"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2684:1:4",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2687:4:4",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2677:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2677:15:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2677:15:4"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2712:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2715:4:4",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2705:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2705:15:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2705:15:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "2575:18:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2598:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2606:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "2595:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2595:14:4"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "2572:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2572:38:4"
															},
															"nodeType": "YulIf",
															"src": "2569:161:4"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "2391:4:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2400:6:4",
														"type": ""
													}
												],
												"src": "2356:380:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2789:174:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2799:16:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2810:1:4"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2813:1:4"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2806:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2806:9:4"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "2799:3:4"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2846:111:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2867:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2874:3:4",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2879:10:4",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "2870:3:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2870:20:4"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2860:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2860:31:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2860:31:4"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2911:1:4",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2914:4:4",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2904:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2904:15:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2904:15:4"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2939:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2942:4:4",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2932:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2932:15:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2932:15:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2830:1:4"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "2833:3:4"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2827:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2827:10:4"
															},
															"nodeType": "YulIf",
															"src": "2824:133:4"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "2772:1:4",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "2775:1:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "2781:3:4",
														"type": ""
													}
												],
												"src": "2741:222:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3142:227:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3159:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3170:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3152:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3152:21:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3152:21:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3193:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3204:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3189:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3189:18:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3209:2:4",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3182:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3182:30:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3182:30:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3232:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3243:2:4",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3228:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3228:18:4"
																	},
																	{
																		"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3248:34:4",
																		"type": "",
																		"value": "ERC20: decreased allowance below"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3221:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3221:62:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3221:62:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3303:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3314:2:4",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3299:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3299:18:4"
																	},
																	{
																		"hexValue": "207a65726f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3319:7:4",
																		"type": "",
																		"value": " zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3292:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3292:35:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3292:35:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3336:27:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3348:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3359:3:4",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3344:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3344:19:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3336:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3119:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3133:4:4",
														"type": ""
													}
												],
												"src": "2968:401:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3548:226:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3565:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3576:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3558:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3558:21:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3558:21:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3599:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3610:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3595:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3595:18:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3615:2:4",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3588:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3588:30:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3588:30:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3638:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3649:2:4",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3634:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3634:18:4"
																	},
																	{
																		"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f20616464",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3654:34:4",
																		"type": "",
																		"value": "ERC20: approve from the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3627:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3627:62:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3627:62:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3709:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3720:2:4",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3705:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3705:18:4"
																	},
																	{
																		"hexValue": "72657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3725:6:4",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3698:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3698:34:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3698:34:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3741:27:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3753:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3764:3:4",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3749:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3749:19:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3741:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3525:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3539:4:4",
														"type": ""
													}
												],
												"src": "3374:400:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3953:224:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3970:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3981:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3963:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3963:21:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3963:21:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4004:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4015:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4000:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4000:18:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4020:2:4",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3993:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3993:30:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3993:30:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4043:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4054:2:4",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4039:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4039:18:4"
																	},
																	{
																		"hexValue": "45524332303a20617070726f766520746f20746865207a65726f206164647265",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4059:34:4",
																		"type": "",
																		"value": "ERC20: approve to the zero addre"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4032:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4032:62:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4032:62:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4114:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4125:2:4",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4110:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4110:18:4"
																	},
																	{
																		"hexValue": "7373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4130:4:4",
																		"type": "",
																		"value": "ss"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4103:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4103:32:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4103:32:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4144:27:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4156:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4167:3:4",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4152:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4152:19:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4144:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3930:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3944:4:4",
														"type": ""
													}
												],
												"src": "3779:398:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4356:179:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4373:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4384:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4366:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4366:21:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4366:21:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4407:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4418:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4403:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4403:18:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4423:2:4",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4396:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4396:30:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4396:30:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4446:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4457:2:4",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4442:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4442:18:4"
																	},
																	{
																		"hexValue": "45524332303a20696e73756666696369656e7420616c6c6f77616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4462:31:4",
																		"type": "",
																		"value": "ERC20: insufficient allowance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4435:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4435:59:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4435:59:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4503:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4515:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4526:2:4",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4511:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4511:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4503:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4333:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4347:4:4",
														"type": ""
													}
												],
												"src": "4182:353:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4714:227:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4731:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4742:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4724:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4724:21:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4724:21:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4765:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4776:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4761:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4761:18:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4781:2:4",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4754:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4754:30:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4754:30:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4804:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4815:2:4",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4800:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4800:18:4"
																	},
																	{
																		"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f206164",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4820:34:4",
																		"type": "",
																		"value": "ERC20: transfer from the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4793:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4793:62:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4793:62:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4875:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4886:2:4",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4871:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4871:18:4"
																	},
																	{
																		"hexValue": "6472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4891:7:4",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4864:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4864:35:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4864:35:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4908:27:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4920:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4931:3:4",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4916:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4916:19:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4908:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4691:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4705:4:4",
														"type": ""
													}
												],
												"src": "4540:401:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5120:225:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5137:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5148:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5130:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5130:21:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5130:21:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5171:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5182:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5167:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5167:18:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5187:2:4",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5160:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5160:30:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5160:30:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5210:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5221:2:4",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5206:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5206:18:4"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5226:34:4",
																		"type": "",
																		"value": "ERC20: transfer to the zero addr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5199:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5199:62:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5199:62:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5281:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5292:2:4",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5277:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5277:18:4"
																	},
																	{
																		"hexValue": "657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5297:5:4",
																		"type": "",
																		"value": "ess"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5270:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5270:33:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5270:33:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5312:27:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5324:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5335:3:4",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5320:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5320:19:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5312:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5097:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5111:4:4",
														"type": ""
													}
												],
												"src": "4946:399:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5524:228:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5541:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5552:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5534:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5534:21:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5534:21:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5575:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5586:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5571:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5571:18:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5591:2:4",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5564:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5564:30:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5564:30:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5614:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5625:2:4",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5610:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5610:18:4"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5630:34:4",
																		"type": "",
																		"value": "ERC20: transfer amount exceeds b"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5603:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5603:62:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5603:62:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5685:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5696:2:4",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5681:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5681:18:4"
																	},
																	{
																		"hexValue": "616c616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5701:8:4",
																		"type": "",
																		"value": "alance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5674:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5674:36:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5674:36:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5719:27:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5731:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5742:3:4",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5727:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5727:19:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5719:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5501:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5515:4:4",
														"type": ""
													}
												],
												"src": "5350:402:4"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        mstore(add(add(headStart, length), 64), 0)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: decreased allowance below\")\n        mstore(add(headStart, 96), \" zero\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC20: approve from the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: approve to the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"ERC20: insufficient allowance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds b\")\n        mstore(add(headStart, 96), \"alance\")\n        tail := add(headStart, 128)\n    }\n}",
									"id": 4,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461012357806370a082311461013657806395d89b411461015f578063a457c2d714610167578063a9059cbb1461017a578063dd62ed3e1461018d57600080fd5b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100ef57806323b872dd14610101578063313ce56714610114575b600080fd5b6100b66101a0565b6040516100c391906106b7565b60405180910390f35b6100df6100da366004610721565b610232565b60405190151581526020016100c3565b6003545b6040519081526020016100c3565b6100df61010f36600461074b565b61024c565b604051601281526020016100c3565b6100df610131366004610721565b610270565b6100f3610144366004610787565b6001600160a01b031660009081526020819052604090205490565b6100b6610292565b6100df610175366004610721565b6102a1565b6100df610188366004610721565b610321565b6100f361019b3660046107a9565b61032f565b6060600480546101af906107dc565b80601f01602080910402602001604051908101604052809291908181526020018280546101db906107dc565b80156102285780601f106101fd57610100808354040283529160200191610228565b820191906000526020600020905b81548152906001019060200180831161020b57829003601f168201915b5050505050905090565b60003361024081858561035a565b60019150505b92915050565b60003361025a85828561047e565b610265858585610513565b506001949350505050565b600033610240818585610283838361032f565b61028d9190610816565b61035a565b6060600580546101af906107dc565b600033816102af828661032f565b9050838110156103145760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b610265828686840361035a565b600033610240818585610513565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166103bc5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161030b565b6001600160a01b03821661041d5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161030b565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6002546001600160a01b039081169083160361049957505050565b60006104a5848461032f565b9050600019811461050d57818110156105005760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000604482015260640161030b565b61050d848484840361035a565b50505050565b6001600160a01b0383166105775760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161030b565b6001600160a01b0382166105d95760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161030b565b6001600160a01b038316600090815260208190526040902054818110156106515760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b606482015260840161030b565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a361050d565b600060208083528351808285015260005b818110156106e4578581018301518582016040015282016106c8565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b038116811461071c57600080fd5b919050565b6000806040838503121561073457600080fd5b61073d83610705565b946020939093013593505050565b60008060006060848603121561076057600080fd5b61076984610705565b925061077760208501610705565b9150604084013590509250925092565b60006020828403121561079957600080fd5b6107a282610705565b9392505050565b600080604083850312156107bc57600080fd5b6107c583610705565b91506107d360208401610705565b90509250929050565b600181811c908216806107f057607f821691505b60208210810361081057634e487b7160e01b600052602260045260246000fd5b50919050565b8082018082111561024657634e487b7160e01b600052601160045260246000fdfea264697066735822122018a180804024ee98ff7897f2ae140d53f7f3896029cecc095c6692debbae909b64736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x136 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x15F JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x167 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x17A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x18D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x114 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x1A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0x6B7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDF PUSH2 0xDA CALLDATASIZE PUSH1 0x4 PUSH2 0x721 JUMP JUMPDEST PUSH2 0x232 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH1 0x3 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x10F CALLDATASIZE PUSH1 0x4 PUSH2 0x74B JUMP JUMPDEST PUSH2 0x24C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x131 CALLDATASIZE PUSH1 0x4 PUSH2 0x721 JUMP JUMPDEST PUSH2 0x270 JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x144 CALLDATASIZE PUSH1 0x4 PUSH2 0x787 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x292 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x175 CALLDATASIZE PUSH1 0x4 PUSH2 0x721 JUMP JUMPDEST PUSH2 0x2A1 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x188 CALLDATASIZE PUSH1 0x4 PUSH2 0x721 JUMP JUMPDEST PUSH2 0x321 JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x19B CALLDATASIZE PUSH1 0x4 PUSH2 0x7A9 JUMP JUMPDEST PUSH2 0x32F JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x1AF SWAP1 PUSH2 0x7DC JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1DB SWAP1 PUSH2 0x7DC JUMP JUMPDEST DUP1 ISZERO PUSH2 0x228 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1FD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x228 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x20B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x35A JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x25A DUP6 DUP3 DUP6 PUSH2 0x47E JUMP JUMPDEST PUSH2 0x265 DUP6 DUP6 DUP6 PUSH2 0x513 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x283 DUP4 DUP4 PUSH2 0x32F JUMP JUMPDEST PUSH2 0x28D SWAP2 SWAP1 PUSH2 0x816 JUMP JUMPDEST PUSH2 0x35A JUMP JUMPDEST PUSH1 0x60 PUSH1 0x5 DUP1 SLOAD PUSH2 0x1AF SWAP1 PUSH2 0x7DC JUMP JUMPDEST PUSH1 0x0 CALLER DUP2 PUSH2 0x2AF DUP3 DUP7 PUSH2 0x32F JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x314 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x265 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x35A JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x513 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x3BC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x30B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x41D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x30B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP4 AND SUB PUSH2 0x499 JUMPI POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4A5 DUP5 DUP5 PUSH2 0x32F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 NOT DUP2 EQ PUSH2 0x50D JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x500 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x30B JUMP JUMPDEST PUSH2 0x50D DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x35A JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x577 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x30B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5D9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x30B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x651 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x30B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP8 DUP8 SUB SWAP1 SSTORE SWAP4 DUP8 AND DUP1 DUP4 MSTORE SWAP2 DUP5 SWAP1 KECCAK256 DUP1 SLOAD DUP8 ADD SWAP1 SSTORE SWAP3 MLOAD DUP6 DUP2 MSTORE SWAP1 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x50D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x6E4 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x6C8 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x71C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x734 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x73D DUP4 PUSH2 0x705 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x760 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x769 DUP5 PUSH2 0x705 JUMP JUMPDEST SWAP3 POP PUSH2 0x777 PUSH1 0x20 DUP6 ADD PUSH2 0x705 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x799 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7A2 DUP3 PUSH2 0x705 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x7BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7C5 DUP4 PUSH2 0x705 JUMP JUMPDEST SWAP2 POP PUSH2 0x7D3 PUSH1 0x20 DUP5 ADD PUSH2 0x705 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x7F0 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x810 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x246 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 XOR LOG1 DUP1 DUP1 BLOCKHASH 0x24 0xEE SWAP9 SELFDESTRUCT PUSH25 0x97F2AE140D53F7F3896029CECC095C6692DEBBAE909B64736F PUSH13 0x63430008120033000000000000 ",
							"sourceMap": "1401:11747:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2227:98;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4504:197;;;;;;:::i;:::-;;:::i;:::-;;;1169:14:4;;1162:22;1144:41;;1132:2;1117:18;4504:197:0;1004:187:4;3315:106:0;3402:12;;3315:106;;;1342:25:4;;;1330:2;1315:18;3315:106:0;1196:177:4;5263:286:0;;;;;;:::i;:::-;;:::i;3164:91::-;;;3246:2;1853:36:4;;1841:2;1826:18;3164:91:0;1711:184:4;5944:234:0;;;;;;:::i;:::-;;:::i;3479:125::-;;;;;;:::i;:::-;-1:-1:-1;;;;;3579:18:0;3553:7;3579:18;;;;;;;;;;;;3479:125;2438:102;;;:::i;6665:427::-;;;;;;:::i;:::-;;:::i;3800:189::-;;;;;;:::i;:::-;;:::i;4047:149::-;;;;;;:::i;:::-;;:::i;2227:98::-;2281:13;2313:5;2306:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2227:98;:::o;4504:197::-;4587:4;719:10:3;4641:32:0;719:10:3;4657:7:0;4666:6;4641:8;:32::i;:::-;4690:4;4683:11;;;4504:197;;;;;:::o;5263:286::-;5390:4;719:10:3;5446:38:0;5462:4;719:10:3;5477:6:0;5446:15;:38::i;:::-;5494:27;5504:4;5510:2;5514:6;5494:9;:27::i;:::-;-1:-1:-1;5538:4:0;;5263:286;-1:-1:-1;;;;5263:286:0:o;5944:234::-;6032:4;719:10:3;6086:64:0;719:10:3;6102:7:0;6139:10;6111:25;719:10:3;6102:7:0;6111:9;:25::i;:::-;:38;;;;:::i;:::-;6086:8;:64::i;2438:102::-;2494:13;2526:7;2519:14;;;;;:::i;6665:427::-;6758:4;719:10:3;6758:4:0;6839:25;719:10:3;6856:7:0;6839:9;:25::i;:::-;6812:52;;6902:15;6882:16;:35;;6874:85;;;;-1:-1:-1;;;6874:85:0;;3170:2:4;6874:85:0;;;3152:21:4;3209:2;3189:18;;;3182:30;3248:34;3228:18;;;3221:62;-1:-1:-1;;;3299:18:4;;;3292:35;3344:19;;6874:85:0;;;;;;;;;6993:60;7002:5;7009:7;7037:15;7018:16;:34;6993:8;:60::i;3800:189::-;3879:4;719:10:3;3933:28:0;719:10:3;3950:2:0;3954:6;3933:9;:28::i;4047:149::-;-1:-1:-1;;;;;4162:18:0;;;4136:7;4162:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;4047:149::o;10577:370::-;-1:-1:-1;;;;;10708:19:0;;10700:68;;;;-1:-1:-1;;;10700:68:0;;3576:2:4;10700:68:0;;;3558:21:4;3615:2;3595:18;;;3588:30;3654:34;3634:18;;;3627:62;-1:-1:-1;;;3705:18:4;;;3698:34;3749:19;;10700:68:0;3374:400:4;10700:68:0;-1:-1:-1;;;;;10786:21:0;;10778:68;;;;-1:-1:-1;;;10778:68:0;;3981:2:4;10778:68:0;;;3963:21:4;4020:2;4000:18;;;3993:30;4059:34;4039:18;;;4032:62;-1:-1:-1;;;4110:18:4;;;4103:32;4152:19;;10778:68:0;3779:398:4;10778:68:0;-1:-1:-1;;;;;10857:18:0;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10908:32;;1342:25:4;;;10908:32:0;;1315:18:4;10908:32:0;;;;;;;10577:370;;;:::o;11228:505::-;11373:7;;-1:-1:-1;;;;;11373:7:0;;;11362:18;;;;11358:55;;11228:505;;;:::o;11358:55::-;11422:24;11449:25;11459:5;11466:7;11449:9;:25::i;:::-;11422:52;;-1:-1:-1;;11488:16:0;:37;11484:243;;11569:6;11549:16;:26;;11541:68;;;;-1:-1:-1;;;11541:68:0;;4384:2:4;11541:68:0;;;4366:21:4;4423:2;4403:18;;;4396:30;4462:31;4442:18;;;4435:59;4511:18;;11541:68:0;4182:353:4;11541:68:0;11651:51;11660:5;11667:7;11695:6;11676:16;:25;11651:8;:51::i;:::-;11348:385;11228:505;;;:::o;7546:818::-;-1:-1:-1;;;;;7672:18:0;;7664:68;;;;-1:-1:-1;;;7664:68:0;;4742:2:4;7664:68:0;;;4724:21:4;4781:2;4761:18;;;4754:30;4820:34;4800:18;;;4793:62;-1:-1:-1;;;4871:18:4;;;4864:35;4916:19;;7664:68:0;4540:401:4;7664:68:0;-1:-1:-1;;;;;7750:16:0;;7742:64;;;;-1:-1:-1;;;7742:64:0;;5148:2:4;7742:64:0;;;5130:21:4;5187:2;5167:18;;;5160:30;5226:34;5206:18;;;5199:62;-1:-1:-1;;;5277:18:4;;;5270:33;5320:19;;7742:64:0;4946:399:4;7742:64:0;-1:-1:-1;;;;;7888:15:0;;7866:19;7888:15;;;;;;;;;;;7921:21;;;;7913:72;;;;-1:-1:-1;;;7913:72:0;;5552:2:4;7913:72:0;;;5534:21:4;5591:2;5571:18;;;5564:30;5630:34;5610:18;;;5603:62;-1:-1:-1;;;5681:18:4;;;5674:36;5727:19;;7913:72:0;5350:402:4;7913:72:0;-1:-1:-1;;;;;8019:15:0;;;:9;:15;;;;;;;;;;;8037:20;;;8019:38;;8234:13;;;;;;;;;;:23;;;;;;8283:26;;1342:25:4;;;8234:13:0;;8283:26;;1315:18:4;8283:26:0;;;;;;;8320:37;12317:121;14:548:4;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;298:3;483:1;478:2;469:6;458:9;454:22;450:31;443:42;553:2;546;542:7;537:2;529:6;525:15;521:29;510:9;506:45;502:54;494:62;;;;14:548;;;;:::o;567:173::-;635:20;;-1:-1:-1;;;;;684:31:4;;674:42;;664:70;;730:1;727;720:12;664:70;567:173;;;:::o;745:254::-;813:6;821;874:2;862:9;853:7;849:23;845:32;842:52;;;890:1;887;880:12;842:52;913:29;932:9;913:29;:::i;:::-;903:39;989:2;974:18;;;;961:32;;-1:-1:-1;;;745:254:4:o;1378:328::-;1455:6;1463;1471;1524:2;1512:9;1503:7;1499:23;1495:32;1492:52;;;1540:1;1537;1530:12;1492:52;1563:29;1582:9;1563:29;:::i;:::-;1553:39;;1611:38;1645:2;1634:9;1630:18;1611:38;:::i;:::-;1601:48;;1696:2;1685:9;1681:18;1668:32;1658:42;;1378:328;;;;;:::o;1900:186::-;1959:6;2012:2;2000:9;1991:7;1987:23;1983:32;1980:52;;;2028:1;2025;2018:12;1980:52;2051:29;2070:9;2051:29;:::i;:::-;2041:39;1900:186;-1:-1:-1;;;1900:186:4:o;2091:260::-;2159:6;2167;2220:2;2208:9;2199:7;2195:23;2191:32;2188:52;;;2236:1;2233;2226:12;2188:52;2259:29;2278:9;2259:29;:::i;:::-;2249:39;;2307:38;2341:2;2330:9;2326:18;2307:38;:::i;:::-;2297:48;;2091:260;;;;;:::o;2356:380::-;2435:1;2431:12;;;;2478;;;2499:61;;2553:4;2545:6;2541:17;2531:27;;2499:61;2606:2;2598:6;2595:14;2575:18;2572:38;2569:161;;2652:10;2647:3;2643:20;2640:1;2633:31;2687:4;2684:1;2677:15;2715:4;2712:1;2705:15;2569:161;;2356:380;;;:::o;2741:222::-;2806:9;;;2827:10;;;2824:133;;;2879:10;2874:3;2870:20;2867:1;2860:31;2914:4;2911:1;2904:15;2942:4;2939:1;2932:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "431400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "24628",
								"balanceOf(address)": "2562",
								"decimals()": "266",
								"decreaseAllowance(address,uint256)": "27016",
								"increaseAllowance(address,uint256)": "infinite",
								"name()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2326",
								"transfer(address,uint256)": "51138",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_afterTokenTransfer(address,address,uint256)": "infinite",
								"_approve(address,address,uint256)": "infinite",
								"_beforeTokenTransfer(address,address,uint256)": "infinite",
								"_burn(address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_spendAllowance(address,address,uint256)": "infinite",
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1401,
									"end": 13148,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 1401,
									"end": 13148,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1401,
									"end": 13148,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2004,
									"end": 2162,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 2004,
									"end": 2162,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2004,
									"end": 2162,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 2004,
									"end": 2162,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 2004,
									"end": 2162,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 2004,
									"end": 2162,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2004,
									"end": 2162,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2004,
									"end": 2162,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 2004,
									"end": 2162,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 2004,
									"end": 2162,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2004,
									"end": 2162,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2004,
									"end": 2162,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2004,
									"end": 2162,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2004,
									"end": 2162,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 2004,
									"end": 2162,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 2004,
									"end": 2162,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 2004,
									"end": 2162,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2004,
									"end": 2162,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 2004,
									"end": 2162,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2004,
									"end": 2162,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 2004,
									"end": 2162,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2004,
									"end": 2162,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2004,
									"end": 2162,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2004,
									"end": 2162,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2004,
									"end": 2162,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2004,
									"end": 2162,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2004,
									"end": 2162,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 2004,
									"end": 2162,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2004,
									"end": 2162,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 2004,
									"end": 2162,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 2004,
									"end": 2162,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 2004,
									"end": 2162,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2088,
									"end": 2093,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 2088,
									"end": 2101,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 2096,
									"end": 2101,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 2088,
									"end": 2093,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 2088,
									"end": 2101,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 2088,
									"end": 2101,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 2088,
									"end": 2101,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 2088,
									"end": 2101,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2111,
									"end": 2118,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 2111,
									"end": 2128,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 2121,
									"end": 2128,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2111,
									"end": 2118,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 2111,
									"end": 2128,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 2111,
									"end": 2128,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 2111,
									"end": 2128,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 2111,
									"end": 2128,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2138,
									"end": 2145,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 2138,
									"end": 2155,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2138,
									"end": 2155,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2138,
									"end": 2155,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2138,
									"end": 2155,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 2138,
									"end": 2155,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2138,
									"end": 2155,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 2138,
									"end": 2155,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2138,
									"end": 2155,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2138,
									"end": 2155,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2138,
									"end": 2155,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2138,
									"end": 2155,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 2138,
									"end": 2155,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2138,
									"end": 2155,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1401,
									"end": 13148,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 1401,
									"end": 13148,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1401,
									"end": 13148,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 141,
									"name": "tag",
									"source": 4,
									"value": "10"
								},
								{
									"begin": 14,
									"end": 141,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 75,
									"end": 85,
									"name": "PUSH",
									"source": 4,
									"value": "4E487B71"
								},
								{
									"begin": 70,
									"end": 73,
									"name": "PUSH",
									"source": 4,
									"value": "E0"
								},
								{
									"begin": 66,
									"end": 86,
									"name": "SHL",
									"source": 4
								},
								{
									"begin": 63,
									"end": 64,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 87,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 106,
									"end": 110,
									"name": "PUSH",
									"source": 4,
									"value": "41"
								},
								{
									"begin": 103,
									"end": 104,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 96,
									"end": 111,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 130,
									"end": 134,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 127,
									"end": 128,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 120,
									"end": 135,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 146,
									"end": 986,
									"name": "tag",
									"source": 4,
									"value": "11"
								},
								{
									"begin": 146,
									"end": 986,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 200,
									"end": 205,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 253,
									"end": 256,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 246,
									"end": 250,
									"name": "PUSH",
									"source": 4,
									"value": "1F"
								},
								{
									"begin": 238,
									"end": 244,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 234,
									"end": 251,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 230,
									"end": 257,
									"name": "SLT",
									"source": 4
								},
								{
									"begin": 220,
									"end": 275,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "19"
								},
								{
									"begin": 220,
									"end": 275,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 271,
									"end": 272,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 268,
									"end": 269,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 261,
									"end": 273,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 220,
									"end": 275,
									"name": "tag",
									"source": 4,
									"value": "19"
								},
								{
									"begin": 220,
									"end": 275,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 294,
									"end": 307,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 294,
									"end": 307,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 356,
									"end": 366,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 356,
									"end": 366,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 356,
									"end": 366,
									"name": "GT",
									"source": 4
								},
								{
									"begin": 353,
									"end": 389,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 353,
									"end": 389,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "21"
								},
								{
									"begin": 353,
									"end": 389,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 369,
									"end": 387,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "21"
								},
								{
									"begin": 369,
									"end": 387,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "10"
								},
								{
									"begin": 369,
									"end": 387,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 369,
									"end": 387,
									"name": "tag",
									"source": 4,
									"value": "21"
								},
								{
									"begin": 369,
									"end": 387,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 444,
									"end": 446,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 438,
									"end": 447,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 412,
									"end": 414,
									"name": "PUSH",
									"source": 4,
									"value": "1F"
								},
								{
									"begin": 498,
									"end": 511,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 498,
									"end": 511,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 494,
									"end": 516,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 494,
									"end": 516,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 494,
									"end": 516,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 518,
									"end": 520,
									"name": "PUSH",
									"source": 4,
									"value": "3F"
								},
								{
									"begin": 490,
									"end": 521,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 486,
									"end": 526,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 474,
									"end": 527,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 474,
									"end": 527,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 474,
									"end": 527,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 542,
									"end": 560,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 542,
									"end": 560,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 542,
									"end": 560,
									"name": "GT",
									"source": 4
								},
								{
									"begin": 562,
									"end": 584,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 562,
									"end": 584,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 562,
									"end": 584,
									"name": "LT",
									"source": 4
								},
								{
									"begin": 539,
									"end": 585,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 536,
									"end": 608,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 536,
									"end": 608,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "23"
								},
								{
									"begin": 536,
									"end": 608,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 588,
									"end": 606,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "23"
								},
								{
									"begin": 588,
									"end": 606,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "10"
								},
								{
									"begin": 588,
									"end": 606,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 588,
									"end": 606,
									"name": "tag",
									"source": 4,
									"value": "23"
								},
								{
									"begin": 588,
									"end": 606,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 628,
									"end": 638,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 624,
									"end": 626,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 617,
									"end": 639,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 663,
									"end": 665,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 655,
									"end": 661,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 648,
									"end": 666,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 685,
									"end": 689,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 675,
									"end": 689,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 675,
									"end": 689,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 730,
									"end": 733,
									"name": "DUP7",
									"source": 4
								},
								{
									"begin": 725,
									"end": 727,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 720,
									"end": 722,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 712,
									"end": 718,
									"name": "DUP9",
									"source": 4
								},
								{
									"begin": 708,
									"end": 723,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 704,
									"end": 728,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 701,
									"end": 734,
									"name": "GT",
									"source": 4
								},
								{
									"begin": 698,
									"end": 751,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 698,
									"end": 751,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 698,
									"end": 751,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 747,
									"end": 748,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 744,
									"end": 745,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 737,
									"end": 749,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 698,
									"end": 751,
									"name": "tag",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 698,
									"end": 751,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 769,
									"end": 770,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 760,
									"end": 770,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 760,
									"end": 770,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 779,
									"end": 912,
									"name": "tag",
									"source": 4,
									"value": "25"
								},
								{
									"begin": 779,
									"end": 912,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 793,
									"end": 795,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 790,
									"end": 791,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 787,
									"end": 796,
									"name": "LT",
									"source": 4
								},
								{
									"begin": 779,
									"end": 912,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 779,
									"end": 912,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "27"
								},
								{
									"begin": 779,
									"end": 912,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 881,
									"end": 895,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 881,
									"end": 895,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 881,
									"end": 895,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 877,
									"end": 900,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 877,
									"end": 900,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 871,
									"end": 901,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 850,
									"end": 864,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 850,
									"end": 864,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 850,
									"end": 864,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 846,
									"end": 869,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 846,
									"end": 869,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 839,
									"end": 902,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 804,
									"end": 814,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 804,
									"end": 814,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 804,
									"end": 814,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 804,
									"end": 814,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 779,
									"end": 912,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "25"
								},
								{
									"begin": 779,
									"end": 912,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 779,
									"end": 912,
									"name": "tag",
									"source": 4,
									"value": "27"
								},
								{
									"begin": 779,
									"end": 912,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 954,
									"end": 955,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 932,
									"end": 947,
									"name": "SWAP4",
									"source": 4
								},
								{
									"begin": 932,
									"end": 947,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 932,
									"end": 947,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 928,
									"end": 952,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 928,
									"end": 952,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 928,
									"end": 952,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 921,
									"end": 956,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 921,
									"end": 956,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 921,
									"end": 956,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 921,
									"end": 956,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 936,
									"end": 942,
									"name": "SWAP5",
									"source": 4
								},
								{
									"begin": 146,
									"end": 986,
									"name": "SWAP4",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 146,
									"end": 986,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 991,
									"end": 1720,
									"name": "tag",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 991,
									"end": 1720,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1099,
									"end": 1105,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1107,
									"end": 1113,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1115,
									"end": 1121,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1168,
									"end": 1170,
									"name": "PUSH",
									"source": 4,
									"value": "60"
								},
								{
									"begin": 1156,
									"end": 1165,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 1147,
									"end": 1154,
									"name": "DUP7",
									"source": 4
								},
								{
									"begin": 1143,
									"end": 1166,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 1139,
									"end": 1171,
									"name": "SLT",
									"source": 4
								},
								{
									"begin": 1136,
									"end": 1188,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 1136,
									"end": 1188,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "29"
								},
								{
									"begin": 1136,
									"end": 1188,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 1184,
									"end": 1185,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1181,
									"end": 1182,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1174,
									"end": 1186,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 1136,
									"end": 1188,
									"name": "tag",
									"source": 4,
									"value": "29"
								},
								{
									"begin": 1136,
									"end": 1188,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1211,
									"end": 1227,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 1211,
									"end": 1227,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1276,
									"end": 1290,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1276,
									"end": 1290,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1276,
									"end": 1290,
									"name": "GT",
									"source": 4
								},
								{
									"begin": 1273,
									"end": 1307,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 1273,
									"end": 1307,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "30"
								},
								{
									"begin": 1273,
									"end": 1307,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 1303,
									"end": 1304,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1300,
									"end": 1301,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1293,
									"end": 1305,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 1273,
									"end": 1307,
									"name": "tag",
									"source": 4,
									"value": "30"
								},
								{
									"begin": 1273,
									"end": 1307,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1326,
									"end": 1387,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "31"
								},
								{
									"begin": 1379,
									"end": 1386,
									"name": "DUP8",
									"source": 4
								},
								{
									"begin": 1370,
									"end": 1376,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 1359,
									"end": 1368,
									"name": "DUP9",
									"source": 4
								},
								{
									"begin": 1355,
									"end": 1377,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1326,
									"end": 1387,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "11"
								},
								{
									"begin": 1326,
									"end": 1387,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1326,
									"end": 1387,
									"name": "tag",
									"source": 4,
									"value": "31"
								},
								{
									"begin": 1326,
									"end": 1387,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1316,
									"end": 1387,
									"name": "SWAP5",
									"source": 4
								},
								{
									"begin": 1316,
									"end": 1387,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1433,
									"end": 1435,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1422,
									"end": 1431,
									"name": "DUP7",
									"source": 4
								},
								{
									"begin": 1418,
									"end": 1436,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1412,
									"end": 1437,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1396,
									"end": 1437,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1396,
									"end": 1437,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1462,
									"end": 1464,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1452,
									"end": 1460,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1449,
									"end": 1465,
									"name": "GT",
									"source": 4
								},
								{
									"begin": 1446,
									"end": 1482,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 1446,
									"end": 1482,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "32"
								},
								{
									"begin": 1446,
									"end": 1482,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 1478,
									"end": 1479,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1475,
									"end": 1476,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1468,
									"end": 1480,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 1446,
									"end": 1482,
									"name": "tag",
									"source": 4,
									"value": "32"
								},
								{
									"begin": 1446,
									"end": 1482,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1446,
									"end": 1482,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1501,
									"end": 1564,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "33"
								},
								{
									"begin": 1556,
									"end": 1563,
									"name": "DUP7",
									"source": 4
								},
								{
									"begin": 1545,
									"end": 1553,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1534,
									"end": 1543,
									"name": "DUP8",
									"source": 4
								},
								{
									"begin": 1530,
									"end": 1554,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1501,
									"end": 1564,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "11"
								},
								{
									"begin": 1501,
									"end": 1564,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1501,
									"end": 1564,
									"name": "tag",
									"source": 4,
									"value": "33"
								},
								{
									"begin": 1501,
									"end": 1564,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1607,
									"end": 1609,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1592,
									"end": 1610,
									"name": "DUP7",
									"source": 4
								},
								{
									"begin": 1592,
									"end": 1610,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1586,
									"end": 1611,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1491,
									"end": 1564,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1491,
									"end": 1564,
									"name": "SWAP4",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1586,
									"end": 1611,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1640,
									"end": 1671,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1640,
									"end": 1671,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 1630,
									"end": 1672,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1630,
									"end": 1672,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 1620,
									"end": 1690,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "34"
								},
								{
									"begin": 1620,
									"end": 1690,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 1686,
									"end": 1687,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1683,
									"end": 1684,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1676,
									"end": 1688,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 1620,
									"end": 1690,
									"name": "tag",
									"source": 4,
									"value": "34"
								},
								{
									"begin": 1620,
									"end": 1690,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1709,
									"end": 1714,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1699,
									"end": 1714,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1699,
									"end": 1714,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1699,
									"end": 1714,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 991,
									"end": 1720,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 991,
									"end": 1720,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 991,
									"end": 1720,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 991,
									"end": 1720,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 991,
									"end": 1720,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 991,
									"end": 1720,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1725,
									"end": 2105,
									"name": "tag",
									"source": 4,
									"value": "12"
								},
								{
									"begin": 1725,
									"end": 2105,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1804,
									"end": 1805,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 1800,
									"end": 1812,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1800,
									"end": 1812,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1800,
									"end": 1812,
									"name": "SHR",
									"source": 4
								},
								{
									"begin": 1800,
									"end": 1812,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1847,
									"end": 1859,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1847,
									"end": 1859,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 1847,
									"end": 1859,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1868,
									"end": 1929,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "36"
								},
								{
									"begin": 1868,
									"end": 1929,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 1922,
									"end": 1926,
									"name": "PUSH",
									"source": 4,
									"value": "7F"
								},
								{
									"begin": 1914,
									"end": 1920,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1910,
									"end": 1927,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 1900,
									"end": 1927,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1900,
									"end": 1927,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1868,
									"end": 1929,
									"name": "tag",
									"source": 4,
									"value": "36"
								},
								{
									"begin": 1868,
									"end": 1929,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1975,
									"end": 1977,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1967,
									"end": 1973,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1964,
									"end": 1978,
									"name": "LT",
									"source": 4
								},
								{
									"begin": 1944,
									"end": 1962,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1941,
									"end": 1979,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 1938,
									"end": 2099,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "37"
								},
								{
									"begin": 1938,
									"end": 2099,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 2021,
									"end": 2031,
									"name": "PUSH",
									"source": 4,
									"value": "4E487B71"
								},
								{
									"begin": 2016,
									"end": 2019,
									"name": "PUSH",
									"source": 4,
									"value": "E0"
								},
								{
									"begin": 2012,
									"end": 2032,
									"name": "SHL",
									"source": 4
								},
								{
									"begin": 2009,
									"end": 2010,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 2002,
									"end": 2033,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 2056,
									"end": 2060,
									"name": "PUSH",
									"source": 4,
									"value": "22"
								},
								{
									"begin": 2053,
									"end": 2054,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 2046,
									"end": 2061,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 2084,
									"end": 2088,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 2081,
									"end": 2082,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 2074,
									"end": 2089,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 1938,
									"end": 2099,
									"name": "tag",
									"source": 4,
									"value": "37"
								},
								{
									"begin": 1938,
									"end": 2099,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1938,
									"end": 2099,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1725,
									"end": 2105,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1725,
									"end": 2105,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1725,
									"end": 2105,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1725,
									"end": 2105,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 2236,
									"end": 2781,
									"name": "tag",
									"source": 4,
									"value": "14"
								},
								{
									"begin": 2236,
									"end": 2781,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2338,
									"end": 2340,
									"name": "PUSH",
									"source": 4,
									"value": "1F"
								},
								{
									"begin": 2333,
									"end": 2336,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 2330,
									"end": 2341,
									"name": "GT",
									"source": 4
								},
								{
									"begin": 2327,
									"end": 2775,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 2327,
									"end": 2775,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 2327,
									"end": 2775,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 2374,
									"end": 2375,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 2399,
									"end": 2404,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2395,
									"end": 2397,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2388,
									"end": 2405,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 2444,
									"end": 2448,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 2440,
									"end": 2442,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2430,
									"end": 2449,
									"name": "KECCAK256",
									"source": 4
								},
								{
									"begin": 2514,
									"end": 2516,
									"name": "PUSH",
									"source": 4,
									"value": "1F"
								},
								{
									"begin": 2502,
									"end": 2512,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 2498,
									"end": 2517,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 2495,
									"end": 2496,
									"name": "PUSH",
									"source": 4,
									"value": "5"
								},
								{
									"begin": 2491,
									"end": 2518,
									"name": "SHR",
									"source": 4
								},
								{
									"begin": 2485,
									"end": 2489,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2481,
									"end": 2519,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 2550,
									"end": 2554,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 2538,
									"end": 2548,
									"name": "DUP7",
									"source": 4
								},
								{
									"begin": 2535,
									"end": 2555,
									"name": "LT",
									"source": 4
								},
								{
									"begin": 2532,
									"end": 2579,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 2532,
									"end": 2579,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "41"
								},
								{
									"begin": 2532,
									"end": 2579,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2573,
									"end": 2577,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 2532,
									"end": 2579,
									"name": "tag",
									"source": 4,
									"value": "41"
								},
								{
									"begin": 2532,
									"end": 2579,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2628,
									"end": 2630,
									"name": "PUSH",
									"source": 4,
									"value": "1F"
								},
								{
									"begin": 2623,
									"end": 2626,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 2619,
									"end": 2631,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 2616,
									"end": 2617,
									"name": "PUSH",
									"source": 4,
									"value": "5"
								},
								{
									"begin": 2612,
									"end": 2632,
									"name": "SHR",
									"source": 4
								},
								{
									"begin": 2606,
									"end": 2610,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 2602,
									"end": 2633,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 2592,
									"end": 2633,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 2592,
									"end": 2633,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2683,
									"end": 2765,
									"name": "tag",
									"source": 4,
									"value": "42"
								},
								{
									"begin": 2683,
									"end": 2765,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2701,
									"end": 2703,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2694,
									"end": 2699,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2691,
									"end": 2704,
									"name": "LT",
									"source": 4
								},
								{
									"begin": 2683,
									"end": 2765,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 2683,
									"end": 2765,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "44"
								},
								{
									"begin": 2683,
									"end": 2765,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 2746,
									"end": 2763,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 2746,
									"end": 2763,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2746,
									"end": 2763,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 2727,
									"end": 2728,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 2716,
									"end": 2729,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 2683,
									"end": 2765,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "42"
								},
								{
									"begin": 2683,
									"end": 2765,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 2683,
									"end": 2765,
									"name": "tag",
									"source": 4,
									"value": "44"
								},
								{
									"begin": 2683,
									"end": 2765,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2687,
									"end": 2690,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2687,
									"end": 2690,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2687,
									"end": 2690,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2327,
									"end": 2775,
									"name": "tag",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 2327,
									"end": 2775,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2236,
									"end": 2781,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2236,
									"end": 2781,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2236,
									"end": 2781,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2236,
									"end": 2781,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 2957,
									"end": 4309,
									"name": "tag",
									"source": 4,
									"value": "7"
								},
								{
									"begin": 2957,
									"end": 4309,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 3077,
									"end": 3087,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 3077,
									"end": 3087,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3099,
									"end": 3129,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 3099,
									"end": 3129,
									"name": "GT",
									"source": 4
								},
								{
									"begin": 3096,
									"end": 3152,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 3096,
									"end": 3152,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "48"
								},
								{
									"begin": 3096,
									"end": 3152,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 3132,
									"end": 3150,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "48"
								},
								{
									"begin": 3132,
									"end": 3150,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "10"
								},
								{
									"begin": 3132,
									"end": 3150,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 3132,
									"end": 3150,
									"name": "tag",
									"source": 4,
									"value": "48"
								},
								{
									"begin": 3132,
									"end": 3150,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 3161,
									"end": 3258,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "49"
								},
								{
									"begin": 3251,
									"end": 3257,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 3211,
									"end": 3249,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "50"
								},
								{
									"begin": 3243,
									"end": 3247,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 3237,
									"end": 3248,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 3211,
									"end": 3249,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "12"
								},
								{
									"begin": 3211,
									"end": 3249,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 3211,
									"end": 3249,
									"name": "tag",
									"source": 4,
									"value": "50"
								},
								{
									"begin": 3211,
									"end": 3249,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 3205,
									"end": 3209,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 3161,
									"end": 3258,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "14"
								},
								{
									"begin": 3161,
									"end": 3258,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 3161,
									"end": 3258,
									"name": "tag",
									"source": 4,
									"value": "49"
								},
								{
									"begin": 3161,
									"end": 3258,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 3313,
									"end": 3317,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 3313,
									"end": 3317,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 3377,
									"end": 3379,
									"name": "PUSH",
									"source": 4,
									"value": "1F"
								},
								{
									"begin": 3366,
									"end": 3380,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 3366,
									"end": 3380,
									"name": "GT",
									"source": 4
								},
								{
									"begin": 3394,
									"end": 3395,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 3389,
									"end": 4052,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 3389,
									"end": 4052,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 3389,
									"end": 4052,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "52"
								},
								{
									"begin": 3389,
									"end": 4052,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 4096,
									"end": 4097,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 4113,
									"end": 4119,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 4110,
									"end": 4199,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 4110,
									"end": 4199,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "53"
								},
								{
									"begin": 4110,
									"end": 4199,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 4165,
									"end": 4184,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 4165,
									"end": 4184,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 4165,
									"end": 4184,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 4159,
									"end": 4185,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 4110,
									"end": 4199,
									"name": "tag",
									"source": 4,
									"value": "53"
								},
								{
									"begin": 4110,
									"end": 4199,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2914,
									"end": 2915,
									"name": "PUSH",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 2910,
									"end": 2921,
									"name": "DUP7",
									"source": 4
								},
								{
									"begin": 2910,
									"end": 2921,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2910,
									"end": 2921,
									"name": "SHL",
									"source": 4
								},
								{
									"begin": 2906,
									"end": 2930,
									"name": "SHR",
									"source": 4
								},
								{
									"begin": 2902,
									"end": 2931,
									"name": "NOT",
									"source": 4
								},
								{
									"begin": 2892,
									"end": 2932,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 2938,
									"end": 2939,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 2934,
									"end": 2945,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 2934,
									"end": 2945,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2934,
									"end": 2945,
									"name": "SHL",
									"source": 4
								},
								{
									"begin": 2889,
									"end": 2946,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 4212,
									"end": 4293,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 4212,
									"end": 4293,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 3359,
									"end": 4303,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "44"
								},
								{
									"begin": 3359,
									"end": 4303,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 3389,
									"end": 4052,
									"name": "tag",
									"source": 4,
									"value": "52"
								},
								{
									"begin": 3389,
									"end": 4052,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2183,
									"end": 2184,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 2176,
									"end": 2190,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 2176,
									"end": 2190,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2176,
									"end": 2190,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 2220,
									"end": 2224,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 2207,
									"end": 2225,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2207,
									"end": 2225,
									"name": "KECCAK256",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3425,
									"end": 3445,
									"name": "DUP7",
									"source": 4
								},
								{
									"begin": 3425,
									"end": 3445,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 3425,
									"end": 3445,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 3543,
									"end": 3779,
									"name": "tag",
									"source": 4,
									"value": "56"
								},
								{
									"begin": 3543,
									"end": 3779,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 3557,
									"end": 3564,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 3554,
									"end": 3555,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 3551,
									"end": 3565,
									"name": "LT",
									"source": 4
								},
								{
									"begin": 3543,
									"end": 3779,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 3543,
									"end": 3779,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "58"
								},
								{
									"begin": 3543,
									"end": 3779,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 3646,
									"end": 3665,
									"name": "DUP9",
									"source": 4
								},
								{
									"begin": 3646,
									"end": 3665,
									"name": "DUP7",
									"source": 4
								},
								{
									"begin": 3646,
									"end": 3665,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 3640,
									"end": 3666,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 3625,
									"end": 3667,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 3625,
									"end": 3667,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 3738,
									"end": 3765,
									"name": "SWAP5",
									"source": 4
								},
								{
									"begin": 3738,
									"end": 3765,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 3738,
									"end": 3765,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 3738,
									"end": 3765,
									"name": "SWAP5",
									"source": 4
								},
								{
									"begin": 3706,
									"end": 3707,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 3694,
									"end": 3708,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 3694,
									"end": 3708,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 3694,
									"end": 3708,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 3694,
									"end": 3708,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 3573,
									"end": 3592,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 3573,
									"end": 3592,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 3543,
									"end": 3779,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "56"
								},
								{
									"begin": 3543,
									"end": 3779,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 3543,
									"end": 3779,
									"name": "tag",
									"source": 4,
									"value": "58"
								},
								{
									"begin": 3543,
									"end": 3779,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 3547,
									"end": 3550,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 3807,
									"end": 3813,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 3798,
									"end": 3805,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 3795,
									"end": 3814,
									"name": "LT",
									"source": 4
								},
								{
									"begin": 3792,
									"end": 3993,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 3792,
									"end": 3993,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "59"
								},
								{
									"begin": 3792,
									"end": 3993,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 3868,
									"end": 3887,
									"name": "DUP8",
									"source": 4
								},
								{
									"begin": 3868,
									"end": 3887,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 3868,
									"end": 3887,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 3862,
									"end": 3888,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3951,
									"end": 3952,
									"name": "PUSH",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 3947,
									"end": 3961,
									"name": "DUP9",
									"source": 4
								},
								{
									"begin": 3947,
									"end": 3961,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 3947,
									"end": 3961,
									"name": "SHL",
									"source": 4
								},
								{
									"begin": 3963,
									"end": 3966,
									"name": "PUSH",
									"source": 4,
									"value": "F8"
								},
								{
									"begin": 3943,
									"end": 3967,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 3939,
									"end": 3976,
									"name": "SHR",
									"source": 4
								},
								{
									"begin": 3935,
									"end": 3977,
									"name": "NOT",
									"source": 4
								},
								{
									"begin": 3920,
									"end": 3978,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 3905,
									"end": 3979,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 3905,
									"end": 3979,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 3792,
									"end": 3993,
									"name": "tag",
									"source": 4,
									"value": "59"
								},
								{
									"begin": 3792,
									"end": 3993,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 4039,
									"end": 4040,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 4023,
									"end": 4037,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 4023,
									"end": 4037,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 4023,
									"end": 4037,
									"name": "SHL",
									"source": 4
								},
								{
									"begin": 4019,
									"end": 4041,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 4006,
									"end": 4042,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 4006,
									"end": 4042,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2957,
									"end": 4309,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 2957,
									"end": 4309,
									"name": "tag",
									"source": 4,
									"value": "16"
								},
								{
									"begin": 2957,
									"end": 4309,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1401,
									"end": 13148,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1401,
									"end": 13148,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1401,
									"end": 13148,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1401,
									"end": 13148,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1401,
									"end": 13148,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 1401,
									"end": 13148,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1401,
									"end": 13148,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122018a180804024ee98ff7897f2ae140d53f7f3896029cecc095c6692debbae909b64736f6c63430008120033",
									".code": [
										{
											"begin": 1401,
											"end": 13148,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 1401,
											"end": 13148,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1401,
											"end": 13148,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1401,
											"end": 13148,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1401,
											"end": 13148,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1401,
											"end": 13148,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1401,
											"end": 13148,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1401,
											"end": 13148,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1401,
											"end": 13148,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1401,
											"end": 13148,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1401,
											"end": 13148,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1401,
											"end": 13148,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1401,
											"end": 13148,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1401,
											"end": 13148,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1401,
											"end": 13148,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1401,
											"end": 13148,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1401,
											"end": 13148,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1401,
											"end": 13148,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1401,
											"end": 13148,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1401,
											"end": 13148,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1401,
											"end": 13148,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 1401,
											"end": 13148,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 1401,
											"end": 13148,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 1401,
											"end": 13148,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1401,
											"end": 13148,
											"name": "PUSH",
											"source": 0,
											"value": "39509351"
										},
										{
											"begin": 1401,
											"end": 13148,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1401,
											"end": 13148,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1401,
											"end": 13148,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1401,
											"end": 13148,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1401,
											"end": 13148,
											"name": "PUSH",
											"source": 0,
											"value": "39509351"
										},
										{
											"begin": 1401,
											"end": 13148,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1401,
											"end": 13148,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1401,
											"end": 13148,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1401,
											"end": 13148,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1401,
											"end": 13148,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 1401,
											"end": 13148,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1401,
											"end": 13148,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1401,
											"end": 13148,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1401,
											"end": 13148,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1401,
											"end": 13148,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 1401,
											"end": 13148,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1401,
											"end": 13148,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 1401,
											"end": 13148,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1401,
											"end": 13148,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1401,
											"end": 13148,
											"name": "PUSH",
											"source": 0,
											"value": "A457C2D7"
										},
										{
											"begin": 1401,
											"end": 13148,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1401,
											"end": 13148,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1401,
											"end": 13148,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1401,
											"end": 13148,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1401,
											"end": 13148,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 1401,
											"end": 13148,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1401,
											"end": 13148,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1401,
											"end": 13148,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1401,
											"end": 13148,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1401,
											"end": 13148,
											"name": "PUSH",
											"source": 0,
											"value": "DD62ED3E"
										},
										{
											"begin": 1401,
											"end": 13148,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1401,
											"end": 13148,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1401,
											"end": 13148,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1401,
											"end": 13148,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1401,
											"end": 13148,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1401,
											"end": 13148,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1401,
											"end": 13148,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1401,
											"end": 13148,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1401,
											"end": 13148,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1401,
											"end": 13148,
											"name": "PUSH",
											"source": 0,
											"value": "6FDDE03"
										},
										{
											"begin": 1401,
											"end": 13148,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1401,
											"end": 13148,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1401,
											"end": 13148,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1401,
											"end": 13148,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1401,
											"end": 13148,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 1401,
											"end": 13148,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1401,
											"end": 13148,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1401,
											"end": 13148,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1401,
											"end": 13148,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1401,
											"end": 13148,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 1401,
											"end": 13148,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1401,
											"end": 13148,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1401,
											"end": 13148,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1401,
											"end": 13148,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1401,
											"end": 13148,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 1401,
											"end": 13148,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1401,
											"end": 13148,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1401,
											"end": 13148,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1401,
											"end": 13148,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1401,
											"end": 13148,
											"name": "PUSH",
											"source": 0,
											"value": "313CE567"
										},
										{
											"begin": 1401,
											"end": 13148,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1401,
											"end": 13148,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1401,
											"end": 13148,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1401,
											"end": 13148,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1401,
											"end": 13148,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1401,
											"end": 13148,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1401,
											"end": 13148,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1401,
											"end": 13148,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2227,
											"end": 2325,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2227,
											"end": 2325,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2227,
											"end": 2325,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 2227,
											"end": 2325,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 2227,
											"end": 2325,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2227,
											"end": 2325,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 2227,
											"end": 2325,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2227,
											"end": 2325,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2227,
											"end": 2325,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2227,
											"end": 2325,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 2227,
											"end": 2325,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2227,
											"end": 2325,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2227,
											"end": 2325,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 2227,
											"end": 2325,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2227,
											"end": 2325,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 2227,
											"end": 2325,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2227,
											"end": 2325,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2227,
											"end": 2325,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2227,
											"end": 2325,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2227,
											"end": 2325,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2227,
											"end": 2325,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2227,
											"end": 2325,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2227,
											"end": 2325,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 4504,
											"end": 4701,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4504,
											"end": 4701,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4504,
											"end": 4701,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 4504,
											"end": 4701,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4504,
											"end": 4701,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4504,
											"end": 4701,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4504,
											"end": 4701,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 4504,
											"end": 4701,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4504,
											"end": 4701,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4504,
											"end": 4701,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4504,
											"end": 4701,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 4504,
											"end": 4701,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4504,
											"end": 4701,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 4504,
											"end": 4701,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4504,
											"end": 4701,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4504,
											"end": 4701,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1169,
											"end": 1183,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1169,
											"end": 1183,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1162,
											"end": 1184,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1144,
											"end": 1185,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1144,
											"end": 1185,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1132,
											"end": 1134,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1117,
											"end": 1135,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4504,
											"end": 4701,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1004,
											"end": 1191,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3315,
											"end": 3421,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3315,
											"end": 3421,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3402,
											"end": 3414,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 3402,
											"end": 3414,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3315,
											"end": 3421,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 3315,
											"end": 3421,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3315,
											"end": 3421,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3315,
											"end": 3421,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1330,
											"end": 1332,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1315,
											"end": 1333,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3315,
											"end": 3421,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1196,
											"end": 1373,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5263,
											"end": 5549,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 5263,
											"end": 5549,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5263,
											"end": 5549,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 5263,
											"end": 5549,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 5263,
											"end": 5549,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5263,
											"end": 5549,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5263,
											"end": 5549,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 5263,
											"end": 5549,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5263,
											"end": 5549,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 5263,
											"end": 5549,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5263,
											"end": 5549,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 5263,
											"end": 5549,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3164,
											"end": 3255,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 3164,
											"end": 3255,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3164,
											"end": 3255,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3164,
											"end": 3255,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3246,
											"end": 3248,
											"name": "PUSH",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1853,
											"end": 1889,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1853,
											"end": 1889,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1841,
											"end": 1843,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1826,
											"end": 1844,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3164,
											"end": 3255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1711,
											"end": 1895,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5944,
											"end": 6178,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 5944,
											"end": 6178,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5944,
											"end": 6178,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 5944,
											"end": 6178,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 5944,
											"end": 6178,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5944,
											"end": 6178,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5944,
											"end": 6178,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 5944,
											"end": 6178,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5944,
											"end": 6178,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 5944,
											"end": 6178,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5944,
											"end": 6178,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5944,
											"end": 6178,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3479,
											"end": 3604,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 3479,
											"end": 3604,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3479,
											"end": 3604,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 3479,
											"end": 3604,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 3479,
											"end": 3604,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3479,
											"end": 3604,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3479,
											"end": 3604,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 3479,
											"end": 3604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3479,
											"end": 3604,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 3479,
											"end": 3604,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3579,
											"end": 3597,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3553,
											"end": 3560,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3579,
											"end": 3597,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3579,
											"end": 3597,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3579,
											"end": 3597,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3579,
											"end": 3597,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3579,
											"end": 3597,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3579,
											"end": 3597,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3579,
											"end": 3597,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3579,
											"end": 3597,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3579,
											"end": 3597,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3579,
											"end": 3597,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3579,
											"end": 3597,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3579,
											"end": 3597,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3479,
											"end": 3604,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2438,
											"end": 2540,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 2438,
											"end": 2540,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2438,
											"end": 2540,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 2438,
											"end": 2540,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 2438,
											"end": 2540,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6665,
											"end": 7092,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 6665,
											"end": 7092,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6665,
											"end": 7092,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 6665,
											"end": 7092,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 6665,
											"end": 7092,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 6665,
											"end": 7092,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6665,
											"end": 7092,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 6665,
											"end": 7092,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6665,
											"end": 7092,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 6665,
											"end": 7092,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6665,
											"end": 7092,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 6665,
											"end": 7092,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3800,
											"end": 3989,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 3800,
											"end": 3989,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3800,
											"end": 3989,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 3800,
											"end": 3989,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 3800,
											"end": 3989,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3800,
											"end": 3989,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3800,
											"end": 3989,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 3800,
											"end": 3989,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3800,
											"end": 3989,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 3800,
											"end": 3989,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3800,
											"end": 3989,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 3800,
											"end": 3989,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4047,
											"end": 4196,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 4047,
											"end": 4196,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4047,
											"end": 4196,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 4047,
											"end": 4196,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 4047,
											"end": 4196,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4047,
											"end": 4196,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4047,
											"end": 4196,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 4047,
											"end": 4196,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4047,
											"end": 4196,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 4047,
											"end": 4196,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4047,
											"end": 4196,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 4047,
											"end": 4196,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2227,
											"end": 2325,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 2227,
											"end": 2325,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2281,
											"end": 2294,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2313,
											"end": 2318,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2306,
											"end": 2318,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2306,
											"end": 2318,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2306,
											"end": 2318,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2306,
											"end": 2318,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2306,
											"end": 2318,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 2306,
											"end": 2318,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2306,
											"end": 2318,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2306,
											"end": 2318,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2306,
											"end": 2318,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2306,
											"end": 2318,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2306,
											"end": 2318,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2306,
											"end": 2318,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2306,
											"end": 2318,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2306,
											"end": 2318,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2306,
											"end": 2318,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2306,
											"end": 2318,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2306,
											"end": 2318,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2306,
											"end": 2318,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2306,
											"end": 2318,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2306,
											"end": 2318,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2306,
											"end": 2318,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2306,
											"end": 2318,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2306,
											"end": 2318,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2306,
											"end": 2318,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2306,
											"end": 2318,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2306,
											"end": 2318,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2306,
											"end": 2318,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2306,
											"end": 2318,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2306,
											"end": 2318,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2306,
											"end": 2318,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2306,
											"end": 2318,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2306,
											"end": 2318,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2306,
											"end": 2318,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2306,
											"end": 2318,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2306,
											"end": 2318,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2306,
											"end": 2318,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2306,
											"end": 2318,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2306,
											"end": 2318,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 2306,
											"end": 2318,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2306,
											"end": 2318,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 2306,
											"end": 2318,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2306,
											"end": 2318,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 2306,
											"end": 2318,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2306,
											"end": 2318,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2306,
											"end": 2318,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2306,
											"end": 2318,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 2306,
											"end": 2318,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2306,
											"end": 2318,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2306,
											"end": 2318,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2306,
											"end": 2318,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2306,
											"end": 2318,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 2306,
											"end": 2318,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2306,
											"end": 2318,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2306,
											"end": 2318,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2306,
											"end": 2318,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2306,
											"end": 2318,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2306,
											"end": 2318,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2306,
											"end": 2318,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2306,
											"end": 2318,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2306,
											"end": 2318,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2306,
											"end": 2318,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2306,
											"end": 2318,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2306,
											"end": 2318,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2306,
											"end": 2318,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2306,
											"end": 2318,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 2306,
											"end": 2318,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2306,
											"end": 2318,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 2306,
											"end": 2318,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2306,
											"end": 2318,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2306,
											"end": 2318,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2306,
											"end": 2318,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2306,
											"end": 2318,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2306,
											"end": 2318,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2306,
											"end": 2318,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2306,
											"end": 2318,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2306,
											"end": 2318,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2306,
											"end": 2318,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2306,
											"end": 2318,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2306,
											"end": 2318,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 2306,
											"end": 2318,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2306,
											"end": 2318,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2306,
											"end": 2318,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2306,
											"end": 2318,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2306,
											"end": 2318,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2306,
											"end": 2318,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2306,
											"end": 2318,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2306,
											"end": 2318,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2306,
											"end": 2318,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2306,
											"end": 2318,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2306,
											"end": 2318,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2306,
											"end": 2318,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2306,
											"end": 2318,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2306,
											"end": 2318,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 2306,
											"end": 2318,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 2306,
											"end": 2318,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2306,
											"end": 2318,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2306,
											"end": 2318,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2306,
											"end": 2318,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2306,
											"end": 2318,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2306,
											"end": 2318,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2306,
											"end": 2318,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2306,
											"end": 2318,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2306,
											"end": 2318,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2306,
											"end": 2318,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 2306,
											"end": 2318,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2306,
											"end": 2318,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2306,
											"end": 2318,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2306,
											"end": 2318,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2306,
											"end": 2318,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2306,
											"end": 2318,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2306,
											"end": 2318,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2306,
											"end": 2318,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2227,
											"end": 2325,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2227,
											"end": 2325,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4504,
											"end": 4701,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 4504,
											"end": 4701,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4587,
											"end": 4591,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 4641,
											"end": 4673,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4657,
											"end": 4664,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4666,
											"end": 4672,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4641,
											"end": 4649,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 4641,
											"end": 4673,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4641,
											"end": 4673,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 4641,
											"end": 4673,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4690,
											"end": 4694,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4683,
											"end": 4694,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4683,
											"end": 4694,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4683,
											"end": 4694,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4504,
											"end": 4701,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 4504,
											"end": 4701,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4504,
											"end": 4701,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4504,
											"end": 4701,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4504,
											"end": 4701,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4504,
											"end": 4701,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4504,
											"end": 4701,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5263,
											"end": 5549,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 5263,
											"end": 5549,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5390,
											"end": 5394,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 5446,
											"end": 5484,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 5462,
											"end": 5466,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5477,
											"end": 5483,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5446,
											"end": 5461,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 5446,
											"end": 5484,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5446,
											"end": 5484,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 5446,
											"end": 5484,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5494,
											"end": 5521,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 5504,
											"end": 5508,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5510,
											"end": 5512,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5514,
											"end": 5520,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5494,
											"end": 5503,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 5494,
											"end": 5521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5494,
											"end": 5521,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 5494,
											"end": 5521,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5538,
											"end": 5542,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 5538,
											"end": 5542,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 5263,
											"end": 5549,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5263,
											"end": 5549,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5944,
											"end": 6178,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5944,
											"end": 6178,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6032,
											"end": 6036,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 6086,
											"end": 6150,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6102,
											"end": 6109,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6139,
											"end": 6149,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6111,
											"end": 6136,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6102,
											"end": 6109,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6111,
											"end": 6120,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 6111,
											"end": 6136,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6111,
											"end": 6136,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 6111,
											"end": 6136,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6111,
											"end": 6149,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 6111,
											"end": 6149,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6111,
											"end": 6149,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6111,
											"end": 6149,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 6111,
											"end": 6149,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6111,
											"end": 6149,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 6111,
											"end": 6149,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6086,
											"end": 6094,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 6086,
											"end": 6150,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2438,
											"end": 2540,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 2438,
											"end": 2540,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2494,
											"end": 2507,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2526,
											"end": 2533,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 2519,
											"end": 2533,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2519,
											"end": 2533,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2519,
											"end": 2533,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2519,
											"end": 2533,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2519,
											"end": 2533,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 2519,
											"end": 2533,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6665,
											"end": 7092,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 6665,
											"end": 7092,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6758,
											"end": 6762,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 6758,
											"end": 6762,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6839,
											"end": 6864,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6856,
											"end": 6863,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 6839,
											"end": 6848,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 6839,
											"end": 6864,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6839,
											"end": 6864,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 6839,
											"end": 6864,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6812,
											"end": 6864,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6812,
											"end": 6864,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6902,
											"end": 6917,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6882,
											"end": 6898,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6882,
											"end": 6917,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 6882,
											"end": 6917,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6874,
											"end": 6959,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 6874,
											"end": 6959,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6874,
											"end": 6959,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6874,
											"end": 6959,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6874,
											"end": 6959,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6874,
											"end": 6959,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3170,
											"end": 3172,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6874,
											"end": 6959,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6874,
											"end": 6959,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6874,
											"end": 6959,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3152,
											"end": 3173,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3209,
											"end": 3211,
											"name": "PUSH",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 3189,
											"end": 3207,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 3189,
											"end": 3207,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3189,
											"end": 3207,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3182,
											"end": 3212,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3248,
											"end": 3282,
											"name": "PUSH",
											"source": 4,
											"value": "45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77"
										},
										{
											"begin": 3228,
											"end": 3246,
											"name": "PUSH",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 3228,
											"end": 3246,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3228,
											"end": 3246,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3221,
											"end": 3283,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "207A65726F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3299,
											"end": 3317,
											"name": "PUSH",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 3299,
											"end": 3317,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3317,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3292,
											"end": 3327,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3344,
											"end": 3363,
											"name": "PUSH",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 3344,
											"end": 3363,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6874,
											"end": 6959,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 6874,
											"end": 6959,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6874,
											"end": 6959,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6874,
											"end": 6959,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6874,
											"end": 6959,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6874,
											"end": 6959,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6874,
											"end": 6959,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6874,
											"end": 6959,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6874,
											"end": 6959,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6874,
											"end": 6959,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 6874,
											"end": 6959,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6993,
											"end": 7053,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 7002,
											"end": 7007,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7009,
											"end": 7016,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 7037,
											"end": 7052,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 7018,
											"end": 7034,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7018,
											"end": 7052,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6993,
											"end": 7001,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 6993,
											"end": 7053,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3800,
											"end": 3989,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 3800,
											"end": 3989,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3879,
											"end": 3883,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 3933,
											"end": 3961,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3950,
											"end": 3952,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3954,
											"end": 3960,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3933,
											"end": 3942,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 3933,
											"end": 3961,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4047,
											"end": 4196,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 4047,
											"end": 4196,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4162,
											"end": 4180,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4162,
											"end": 4180,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4162,
											"end": 4180,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4136,
											"end": 4143,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4162,
											"end": 4180,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4162,
											"end": 4180,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4162,
											"end": 4180,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4162,
											"end": 4173,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4162,
											"end": 4180,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4162,
											"end": 4180,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4162,
											"end": 4180,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4162,
											"end": 4180,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4162,
											"end": 4180,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4162,
											"end": 4180,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4162,
											"end": 4180,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4162,
											"end": 4180,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4162,
											"end": 4189,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 4162,
											"end": 4189,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4162,
											"end": 4189,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 4162,
											"end": 4189,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4162,
											"end": 4189,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4162,
											"end": 4189,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4162,
											"end": 4189,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4162,
											"end": 4189,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4162,
											"end": 4189,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4162,
											"end": 4189,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4162,
											"end": 4189,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4162,
											"end": 4189,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4162,
											"end": 4189,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4047,
											"end": 4196,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10577,
											"end": 10947,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 10577,
											"end": 10947,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10708,
											"end": 10727,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10708,
											"end": 10727,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10700,
											"end": 10768,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 10700,
											"end": 10768,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10700,
											"end": 10768,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10700,
											"end": 10768,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10700,
											"end": 10768,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10700,
											"end": 10768,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3576,
											"end": 3578,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 10700,
											"end": 10768,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10700,
											"end": 10768,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10700,
											"end": 10768,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3558,
											"end": 3579,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3615,
											"end": 3617,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 3595,
											"end": 3613,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3595,
											"end": 3613,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3595,
											"end": 3613,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3588,
											"end": 3618,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3654,
											"end": 3688,
											"name": "PUSH",
											"source": 4,
											"value": "45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
										},
										{
											"begin": 3634,
											"end": 3652,
											"name": "PUSH",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 3634,
											"end": 3652,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3634,
											"end": 3652,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3627,
											"end": 3689,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3705,
											"end": 3723,
											"name": "PUSH",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 3705,
											"end": 3723,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3705,
											"end": 3723,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3698,
											"end": 3732,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3749,
											"end": 3768,
											"name": "PUSH",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 3749,
											"end": 3768,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10700,
											"end": 10768,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3374,
											"end": 3774,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10700,
											"end": 10768,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 10700,
											"end": 10768,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10786,
											"end": 10807,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10786,
											"end": 10807,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10778,
											"end": 10846,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 10778,
											"end": 10846,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10778,
											"end": 10846,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10778,
											"end": 10846,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10778,
											"end": 10846,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10778,
											"end": 10846,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3981,
											"end": 3983,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 10778,
											"end": 10846,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10778,
											"end": 10846,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10778,
											"end": 10846,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3963,
											"end": 3984,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4020,
											"end": 4022,
											"name": "PUSH",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 4000,
											"end": 4018,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 4000,
											"end": 4018,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4000,
											"end": 4018,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3993,
											"end": 4023,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4059,
											"end": 4093,
											"name": "PUSH",
											"source": 4,
											"value": "45524332303A20617070726F766520746F20746865207A65726F206164647265"
										},
										{
											"begin": 4039,
											"end": 4057,
											"name": "PUSH",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 4039,
											"end": 4057,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4039,
											"end": 4057,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4032,
											"end": 4094,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4110,
											"end": 4128,
											"name": "PUSH",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 4110,
											"end": 4128,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4110,
											"end": 4128,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4103,
											"end": 4135,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4152,
											"end": 4171,
											"name": "PUSH",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 4152,
											"end": 4171,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10778,
											"end": 10846,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3779,
											"end": 4177,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10778,
											"end": 10846,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 10778,
											"end": 10846,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10857,
											"end": 10875,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10857,
											"end": 10875,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10857,
											"end": 10875,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10857,
											"end": 10875,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10857,
											"end": 10875,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10857,
											"end": 10875,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10857,
											"end": 10875,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10857,
											"end": 10868,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 10857,
											"end": 10875,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10857,
											"end": 10875,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10857,
											"end": 10875,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10857,
											"end": 10875,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10857,
											"end": 10875,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10857,
											"end": 10875,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10857,
											"end": 10875,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10857,
											"end": 10875,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10857,
											"end": 10884,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 10857,
											"end": 10884,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 10857,
											"end": 10884,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10857,
											"end": 10884,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10857,
											"end": 10884,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 10857,
											"end": 10884,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10857,
											"end": 10884,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 10857,
											"end": 10884,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10857,
											"end": 10884,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10857,
											"end": 10884,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10857,
											"end": 10884,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10857,
											"end": 10884,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10857,
											"end": 10884,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10857,
											"end": 10893,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 10857,
											"end": 10893,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10857,
											"end": 10893,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 10908,
											"end": 10940,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10908,
											"end": 10940,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10908,
											"end": 10940,
											"name": "PUSH",
											"source": 0,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10908,
											"end": 10940,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1333,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10908,
											"end": 10940,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10908,
											"end": 10940,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10908,
											"end": 10940,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10908,
											"end": 10940,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10908,
											"end": 10940,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 10908,
											"end": 10940,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10908,
											"end": 10940,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 10577,
											"end": 10947,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10577,
											"end": 10947,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10577,
											"end": 10947,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10577,
											"end": 10947,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11228,
											"end": 11733,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 11228,
											"end": 11733,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11373,
											"end": 11380,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 11373,
											"end": 11380,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11373,
											"end": 11380,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11373,
											"end": 11380,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11373,
											"end": 11380,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11362,
											"end": 11380,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11362,
											"end": 11380,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11362,
											"end": 11380,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11362,
											"end": 11380,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 11358,
											"end": 11413,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 11358,
											"end": 11413,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11228,
											"end": 11733,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11228,
											"end": 11733,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11228,
											"end": 11733,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11228,
											"end": 11733,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11358,
											"end": 11413,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 11358,
											"end": 11413,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11422,
											"end": 11446,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11449,
											"end": 11474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 11459,
											"end": 11464,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11466,
											"end": 11473,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11449,
											"end": 11458,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 11449,
											"end": 11474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11449,
											"end": 11474,
											"name": "tag",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 11449,
											"end": 11474,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11422,
											"end": 11474,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11422,
											"end": 11474,
											"name": "POP",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 11488,
											"end": 11504,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11488,
											"end": 11525,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 11484,
											"end": 11727,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 11484,
											"end": 11727,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11569,
											"end": 11575,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11549,
											"end": 11565,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11549,
											"end": 11575,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 11549,
											"end": 11575,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11541,
											"end": 11609,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 11541,
											"end": 11609,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11541,
											"end": 11609,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11541,
											"end": 11609,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11541,
											"end": 11609,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11541,
											"end": 11609,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4384,
											"end": 4386,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 11541,
											"end": 11609,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11541,
											"end": 11609,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11541,
											"end": 11609,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4366,
											"end": 4387,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4423,
											"end": 4425,
											"name": "PUSH",
											"source": 4,
											"value": "1D"
										},
										{
											"begin": 4403,
											"end": 4421,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 4403,
											"end": 4421,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4403,
											"end": 4421,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4396,
											"end": 4426,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4462,
											"end": 4493,
											"name": "PUSH",
											"source": 4,
											"value": "45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000"
										},
										{
											"begin": 4442,
											"end": 4460,
											"name": "PUSH",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 4442,
											"end": 4460,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4442,
											"end": 4460,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4435,
											"end": 4494,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4511,
											"end": 4529,
											"name": "PUSH",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 4511,
											"end": 4529,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11541,
											"end": 11609,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 4182,
											"end": 4535,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11541,
											"end": 11609,
											"name": "tag",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 11541,
											"end": 11609,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11651,
											"end": 11702,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 11660,
											"end": 11665,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11667,
											"end": 11674,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11695,
											"end": 11701,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11676,
											"end": 11692,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11676,
											"end": 11701,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 11651,
											"end": 11659,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 11651,
											"end": 11702,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11651,
											"end": 11702,
											"name": "tag",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 11651,
											"end": 11702,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11348,
											"end": 11733,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11228,
											"end": 11733,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11228,
											"end": 11733,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11228,
											"end": 11733,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11228,
											"end": 11733,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7546,
											"end": 8364,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 7546,
											"end": 8364,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7672,
											"end": 7690,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7672,
											"end": 7690,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7664,
											"end": 7732,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 7664,
											"end": 7732,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7664,
											"end": 7732,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7664,
											"end": 7732,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7664,
											"end": 7732,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7664,
											"end": 7732,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4742,
											"end": 4744,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7664,
											"end": 7732,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7664,
											"end": 7732,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7664,
											"end": 7732,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4724,
											"end": 4745,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4781,
											"end": 4783,
											"name": "PUSH",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 4761,
											"end": 4779,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 4761,
											"end": 4779,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4761,
											"end": 4779,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4754,
											"end": 4784,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4820,
											"end": 4854,
											"name": "PUSH",
											"source": 4,
											"value": "45524332303A207472616E736665722066726F6D20746865207A65726F206164"
										},
										{
											"begin": 4800,
											"end": 4818,
											"name": "PUSH",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 4800,
											"end": 4818,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4800,
											"end": 4818,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4793,
											"end": 4855,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4871,
											"end": 4889,
											"name": "PUSH",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 4871,
											"end": 4889,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4871,
											"end": 4889,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4864,
											"end": 4899,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4916,
											"end": 4935,
											"name": "PUSH",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 4916,
											"end": 4935,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7664,
											"end": 7732,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 4540,
											"end": 4941,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7664,
											"end": 7732,
											"name": "tag",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 7664,
											"end": 7732,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7750,
											"end": 7766,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7750,
											"end": 7766,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7742,
											"end": 7806,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 7742,
											"end": 7806,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7742,
											"end": 7806,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7742,
											"end": 7806,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7742,
											"end": 7806,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7742,
											"end": 7806,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5148,
											"end": 5150,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7742,
											"end": 7806,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7742,
											"end": 7806,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7742,
											"end": 7806,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5130,
											"end": 5151,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5187,
											"end": 5189,
											"name": "PUSH",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 5167,
											"end": 5185,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 5167,
											"end": 5185,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5167,
											"end": 5185,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5160,
											"end": 5190,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5226,
											"end": 5260,
											"name": "PUSH",
											"source": 4,
											"value": "45524332303A207472616E7366657220746F20746865207A65726F2061646472"
										},
										{
											"begin": 5206,
											"end": 5224,
											"name": "PUSH",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 5206,
											"end": 5224,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5206,
											"end": 5224,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5199,
											"end": 5261,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5277,
											"end": 5295,
											"name": "PUSH",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 5277,
											"end": 5295,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5277,
											"end": 5295,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5270,
											"end": 5303,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5320,
											"end": 5339,
											"name": "PUSH",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 5320,
											"end": 5339,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7742,
											"end": 7806,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 4946,
											"end": 5345,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7742,
											"end": 7806,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 7742,
											"end": 7806,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7888,
											"end": 7903,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7888,
											"end": 7903,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7866,
											"end": 7885,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7888,
											"end": 7903,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7888,
											"end": 7903,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7888,
											"end": 7903,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7888,
											"end": 7903,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7888,
											"end": 7903,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7888,
											"end": 7903,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7888,
											"end": 7903,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7888,
											"end": 7903,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7888,
											"end": 7903,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7888,
											"end": 7903,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7888,
											"end": 7903,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7921,
											"end": 7942,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7921,
											"end": 7942,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7921,
											"end": 7942,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 7921,
											"end": 7942,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7913,
											"end": 7985,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 7913,
											"end": 7985,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7913,
											"end": 7985,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7913,
											"end": 7985,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7913,
											"end": 7985,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7913,
											"end": 7985,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5552,
											"end": 5554,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7913,
											"end": 7985,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7913,
											"end": 7985,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7913,
											"end": 7985,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5534,
											"end": 5555,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5591,
											"end": 5593,
											"name": "PUSH",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 5571,
											"end": 5589,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 5571,
											"end": 5589,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5571,
											"end": 5589,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5564,
											"end": 5594,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5630,
											"end": 5664,
											"name": "PUSH",
											"source": 4,
											"value": "45524332303A207472616E7366657220616D6F756E7420657863656564732062"
										},
										{
											"begin": 5610,
											"end": 5628,
											"name": "PUSH",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 5610,
											"end": 5628,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5610,
											"end": 5628,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5603,
											"end": 5665,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "616C616E6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5681,
											"end": 5699,
											"name": "PUSH",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 5681,
											"end": 5699,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5681,
											"end": 5699,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5674,
											"end": 5710,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5727,
											"end": 5746,
											"name": "PUSH",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 5727,
											"end": 5746,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7913,
											"end": 7985,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 5350,
											"end": 5752,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7913,
											"end": 7985,
											"name": "tag",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 7913,
											"end": 7985,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8019,
											"end": 8034,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8019,
											"end": 8034,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8019,
											"end": 8034,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8019,
											"end": 8028,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8019,
											"end": 8034,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8019,
											"end": 8034,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8019,
											"end": 8034,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8019,
											"end": 8034,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8019,
											"end": 8034,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8019,
											"end": 8034,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8019,
											"end": 8034,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8019,
											"end": 8034,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8019,
											"end": 8034,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8019,
											"end": 8034,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8019,
											"end": 8034,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8037,
											"end": 8057,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 8037,
											"end": 8057,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 8037,
											"end": 8057,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8019,
											"end": 8057,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8019,
											"end": 8057,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 8234,
											"end": 8247,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 8234,
											"end": 8247,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 8234,
											"end": 8247,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8234,
											"end": 8247,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8234,
											"end": 8247,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8234,
											"end": 8247,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8234,
											"end": 8247,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8234,
											"end": 8247,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8234,
											"end": 8247,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8234,
											"end": 8247,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8234,
											"end": 8257,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8234,
											"end": 8257,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8234,
											"end": 8257,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 8234,
											"end": 8257,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8234,
											"end": 8257,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8234,
											"end": 8257,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 8283,
											"end": 8309,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 8283,
											"end": 8309,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8234,
											"end": 8247,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8234,
											"end": 8247,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 8283,
											"end": 8309,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 8283,
											"end": 8309,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1333,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8283,
											"end": 8309,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8283,
											"end": 8309,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8283,
											"end": 8309,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8283,
											"end": 8309,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8283,
											"end": 8309,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8283,
											"end": 8309,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8283,
											"end": 8309,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 8320,
											"end": 8357,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 12317,
											"end": 12438,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14,
											"end": 562,
											"name": "tag",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 14,
											"end": 562,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 126,
											"end": 130,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 155,
											"end": 157,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 184,
											"end": 186,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 173,
											"end": 182,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 166,
											"end": 187,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 216,
											"end": 222,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 210,
											"end": 223,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 259,
											"end": 265,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 254,
											"end": 256,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 243,
											"end": 252,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 239,
											"end": 257,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 232,
											"end": 266,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 284,
											"end": 285,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "tag",
											"source": 4,
											"value": "144"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 308,
											"end": 314,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 305,
											"end": 306,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 302,
											"end": 315,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 294,
											"end": 434,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 294,
											"end": 434,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "146"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 403,
											"end": 417,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 403,
											"end": 417,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 403,
											"end": 417,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 399,
											"end": 422,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 399,
											"end": 422,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 393,
											"end": 423,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 369,
											"end": 386,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 369,
											"end": 386,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 369,
											"end": 386,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 388,
											"end": 390,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 365,
											"end": 391,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 358,
											"end": 424,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 323,
											"end": 333,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 323,
											"end": 333,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 294,
											"end": 434,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "144"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 294,
											"end": 434,
											"name": "tag",
											"source": 4,
											"value": "146"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 298,
											"end": 301,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 483,
											"end": 484,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 478,
											"end": 480,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 469,
											"end": 475,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 458,
											"end": 467,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 454,
											"end": 476,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 450,
											"end": 481,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 443,
											"end": 485,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 553,
											"end": 555,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 546,
											"end": 548,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 542,
											"end": 549,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 537,
											"end": 539,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 529,
											"end": 535,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 525,
											"end": 540,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 521,
											"end": 550,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 510,
											"end": 519,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 506,
											"end": 551,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 502,
											"end": 556,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 494,
											"end": 556,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 494,
											"end": 556,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 494,
											"end": 556,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 494,
											"end": 556,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 14,
											"end": 562,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 14,
											"end": 562,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 14,
											"end": 562,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 14,
											"end": 562,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 14,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 567,
											"end": 740,
											"name": "tag",
											"source": 4,
											"value": "141"
										},
										{
											"begin": 567,
											"end": 740,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 635,
											"end": 655,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 635,
											"end": 655,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 684,
											"end": 715,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 684,
											"end": 715,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 674,
											"end": 716,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 674,
											"end": 716,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 664,
											"end": 734,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "148"
										},
										{
											"begin": 664,
											"end": 734,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 730,
											"end": 731,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 727,
											"end": 728,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 720,
											"end": 732,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 664,
											"end": 734,
											"name": "tag",
											"source": 4,
											"value": "148"
										},
										{
											"begin": 664,
											"end": 734,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 567,
											"end": 740,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 567,
											"end": 740,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 567,
											"end": 740,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 567,
											"end": 740,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 745,
											"end": 999,
											"name": "tag",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 745,
											"end": 999,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 813,
											"end": 819,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 821,
											"end": 827,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 874,
											"end": 876,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 862,
											"end": 871,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 853,
											"end": 860,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 849,
											"end": 872,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 845,
											"end": 877,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 842,
											"end": 894,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 842,
											"end": 894,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "150"
										},
										{
											"begin": 842,
											"end": 894,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 890,
											"end": 891,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 887,
											"end": 888,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 880,
											"end": 892,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 842,
											"end": 894,
											"name": "tag",
											"source": 4,
											"value": "150"
										},
										{
											"begin": 842,
											"end": 894,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 913,
											"end": 942,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "151"
										},
										{
											"begin": 932,
											"end": 941,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 913,
											"end": 942,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "141"
										},
										{
											"begin": 913,
											"end": 942,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 913,
											"end": 942,
											"name": "tag",
											"source": 4,
											"value": "151"
										},
										{
											"begin": 913,
											"end": 942,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 903,
											"end": 942,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 989,
											"end": 991,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 974,
											"end": 992,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 974,
											"end": 992,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 974,
											"end": 992,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 974,
											"end": 992,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 961,
											"end": 993,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 961,
											"end": 993,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 745,
											"end": 999,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "tag",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1455,
											"end": 1461,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1463,
											"end": 1469,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1471,
											"end": 1477,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1524,
											"end": 1526,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 1512,
											"end": 1521,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1503,
											"end": 1510,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 1499,
											"end": 1522,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1495,
											"end": 1527,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 1492,
											"end": 1544,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1492,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "155"
										},
										{
											"begin": 1492,
											"end": 1544,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1540,
											"end": 1541,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1537,
											"end": 1538,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1530,
											"end": 1542,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1492,
											"end": 1544,
											"name": "tag",
											"source": 4,
											"value": "155"
										},
										{
											"begin": 1492,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1563,
											"end": 1592,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "156"
										},
										{
											"begin": 1582,
											"end": 1591,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1563,
											"end": 1592,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "141"
										},
										{
											"begin": 1563,
											"end": 1592,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1563,
											"end": 1592,
											"name": "tag",
											"source": 4,
											"value": "156"
										},
										{
											"begin": 1563,
											"end": 1592,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1553,
											"end": 1592,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1553,
											"end": 1592,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1611,
											"end": 1649,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "157"
										},
										{
											"begin": 1645,
											"end": 1647,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1634,
											"end": 1643,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1630,
											"end": 1648,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1611,
											"end": 1649,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "141"
										},
										{
											"begin": 1611,
											"end": 1649,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1611,
											"end": 1649,
											"name": "tag",
											"source": 4,
											"value": "157"
										},
										{
											"begin": 1611,
											"end": 1649,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1601,
											"end": 1649,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1601,
											"end": 1649,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1696,
											"end": 1698,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1685,
											"end": 1694,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1681,
											"end": 1699,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1668,
											"end": 1700,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 1658,
											"end": 1700,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1658,
											"end": 1700,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1378,
											"end": 1706,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1900,
											"end": 2086,
											"name": "tag",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 1900,
											"end": 2086,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1959,
											"end": 1965,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2012,
											"end": 2014,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2000,
											"end": 2009,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1991,
											"end": 1998,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1987,
											"end": 2010,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1983,
											"end": 2015,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 1980,
											"end": 2032,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1980,
											"end": 2032,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "160"
										},
										{
											"begin": 1980,
											"end": 2032,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2028,
											"end": 2029,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2025,
											"end": 2026,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2018,
											"end": 2030,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1980,
											"end": 2032,
											"name": "tag",
											"source": 4,
											"value": "160"
										},
										{
											"begin": 1980,
											"end": 2032,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2051,
											"end": 2080,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "161"
										},
										{
											"begin": 2070,
											"end": 2079,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2051,
											"end": 2080,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "141"
										},
										{
											"begin": 2051,
											"end": 2080,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2051,
											"end": 2080,
											"name": "tag",
											"source": 4,
											"value": "161"
										},
										{
											"begin": 2051,
											"end": 2080,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2041,
											"end": 2080,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 1900,
											"end": 2086,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1900,
											"end": 2086,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2091,
											"end": 2351,
											"name": "tag",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 2091,
											"end": 2351,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2159,
											"end": 2165,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2167,
											"end": 2173,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2220,
											"end": 2222,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2208,
											"end": 2217,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2199,
											"end": 2206,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 2195,
											"end": 2218,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2191,
											"end": 2223,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 2188,
											"end": 2240,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2188,
											"end": 2240,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "163"
										},
										{
											"begin": 2188,
											"end": 2240,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2236,
											"end": 2237,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2233,
											"end": 2234,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2226,
											"end": 2238,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2188,
											"end": 2240,
											"name": "tag",
											"source": 4,
											"value": "163"
										},
										{
											"begin": 2188,
											"end": 2240,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2259,
											"end": 2288,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "164"
										},
										{
											"begin": 2278,
											"end": 2287,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2259,
											"end": 2288,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "141"
										},
										{
											"begin": 2259,
											"end": 2288,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2259,
											"end": 2288,
											"name": "tag",
											"source": 4,
											"value": "164"
										},
										{
											"begin": 2259,
											"end": 2288,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2249,
											"end": 2288,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2249,
											"end": 2288,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2307,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "165"
										},
										{
											"begin": 2341,
											"end": 2343,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2330,
											"end": 2339,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2326,
											"end": 2344,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2307,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "141"
										},
										{
											"begin": 2307,
											"end": 2345,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2307,
											"end": 2345,
											"name": "tag",
											"source": 4,
											"value": "165"
										},
										{
											"begin": 2307,
											"end": 2345,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2297,
											"end": 2345,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2297,
											"end": 2345,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2091,
											"end": 2351,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2091,
											"end": 2351,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2091,
											"end": 2351,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2091,
											"end": 2351,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2091,
											"end": 2351,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2091,
											"end": 2351,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2356,
											"end": 2736,
											"name": "tag",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 2356,
											"end": 2736,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2436,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2431,
											"end": 2443,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2431,
											"end": 2443,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2431,
											"end": 2443,
											"name": "SHR",
											"source": 4
										},
										{
											"begin": 2431,
											"end": 2443,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2478,
											"end": 2490,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2478,
											"end": 2490,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2478,
											"end": 2490,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2499,
											"end": 2560,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "167"
										},
										{
											"begin": 2499,
											"end": 2560,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2553,
											"end": 2557,
											"name": "PUSH",
											"source": 4,
											"value": "7F"
										},
										{
											"begin": 2545,
											"end": 2551,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2531,
											"end": 2558,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2531,
											"end": 2558,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2499,
											"end": 2560,
											"name": "tag",
											"source": 4,
											"value": "167"
										},
										{
											"begin": 2499,
											"end": 2560,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2606,
											"end": 2608,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2598,
											"end": 2604,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2595,
											"end": 2609,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 2575,
											"end": 2593,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2572,
											"end": 2610,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2569,
											"end": 2730,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "168"
										},
										{
											"begin": 2569,
											"end": 2730,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2652,
											"end": 2662,
											"name": "PUSH",
											"source": 4,
											"value": "4E487B71"
										},
										{
											"begin": 2647,
											"end": 2650,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 2643,
											"end": 2663,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 2640,
											"end": 2641,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2633,
											"end": 2664,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2687,
											"end": 2691,
											"name": "PUSH",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 2684,
											"end": 2685,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2677,
											"end": 2692,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2715,
											"end": 2719,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 2712,
											"end": 2713,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2705,
											"end": 2720,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2569,
											"end": 2730,
											"name": "tag",
											"source": 4,
											"value": "168"
										},
										{
											"begin": 2569,
											"end": 2730,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2569,
											"end": 2730,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2356,
											"end": 2736,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2356,
											"end": 2736,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2356,
											"end": 2736,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2356,
											"end": 2736,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2741,
											"end": 2963,
											"name": "tag",
											"source": 4,
											"value": "88"
										},
										{
											"begin": 2741,
											"end": 2963,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2806,
											"end": 2815,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2806,
											"end": 2815,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2806,
											"end": 2815,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2827,
											"end": 2837,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2827,
											"end": 2837,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2827,
											"end": 2837,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 2824,
											"end": 2957,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2824,
											"end": 2957,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "70"
										},
										{
											"begin": 2824,
											"end": 2957,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2879,
											"end": 2889,
											"name": "PUSH",
											"source": 4,
											"value": "4E487B71"
										},
										{
											"begin": 2874,
											"end": 2877,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 2870,
											"end": 2890,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 2867,
											"end": 2868,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2860,
											"end": 2891,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2914,
											"end": 2918,
											"name": "PUSH",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 2911,
											"end": 2912,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2904,
											"end": 2919,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2942,
											"end": 2946,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 2939,
											"end": 2940,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2932,
											"end": 2947,
											"name": "REVERT",
											"source": 4
										}
									]
								}
							},
							"sourceList": [
								"token2/contracts/token/ERC20/ERC20.sol",
								"token2/contracts/token/ERC20/IERC20.sol",
								"token2/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"token2/contracts/utils/Context.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"reward_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. The default value of {decimals} is 18. To select a different value for {decimals} you should overload it. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"token2/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"token2/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xcfe9d676f20217dbaa257e991d1006d5aa0ead09a8199dd4d072819921cdea3a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a01b885b64e14310bc02cf1d549b08fa0aded23befd060243eabb0afcd95ea6f\",\"dweb:/ipfs/QmbqvBZGZGGbvmKz3V5Z24WmVh2Xxk8VicbCH9XVNBiiFp\"]},\"token2/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"token2/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"token2/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 15,
								"contract": "token2/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 21,
								"contract": "token2/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 23,
								"contract": "token2/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_reward",
								"offset": 0,
								"slot": "2",
								"type": "t_address"
							},
							{
								"astId": 25,
								"contract": "token2/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 27,
								"contract": "token2/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 29,
								"contract": "token2/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "5",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"token2/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"token2/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"token2/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"token2/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"token2/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"token2/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"token2/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"token2/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"token2/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"token2/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"token2/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "token2/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							725
						],
						"ERC20": [
							600
						],
						"IERC20": [
							678
						],
						"IERC20Metadata": [
							703
						]
					},
					"id": 601,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "105:23:0"
						},
						{
							"absolutePath": "token2/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 601,
							"sourceUnit": 679,
							"src": "130:22:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "token2/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 601,
							"sourceUnit": 704,
							"src": "153:41:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "token2/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 4,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 601,
							"sourceUnit": 726,
							"src": "195:33:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 6,
										"name": "Context",
										"nameLocations": [
											"1419:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 725,
										"src": "1419:7:0"
									},
									"id": 7,
									"nodeType": "InheritanceSpecifier",
									"src": "1419:7:0"
								},
								{
									"baseName": {
										"id": 8,
										"name": "IERC20",
										"nameLocations": [
											"1428:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 678,
										"src": "1428:6:0"
									},
									"id": 9,
									"nodeType": "InheritanceSpecifier",
									"src": "1428:6:0"
								},
								{
									"baseName": {
										"id": 10,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1436:14:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 703,
										"src": "1436:14:0"
									},
									"id": 11,
									"nodeType": "InheritanceSpecifier",
									"src": "1436:14:0"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 5,
								"nodeType": "StructuredDocumentation",
								"src": "230:1170:0",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n For a generic mechanism see {ERC20PresetMinterPauser}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification.\n Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n functions have been added to mitigate the well-known issues around setting\n allowances. See {IERC20-approve}."
							},
							"fullyImplemented": true,
							"id": 600,
							"linearizedBaseContracts": [
								600,
								703,
								678,
								725
							],
							"name": "ERC20",
							"nameLocation": "1410:5:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 15,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1493:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 600,
									"src": "1457:45:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 14,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 12,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1465:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1457:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 13,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1476:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 21,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1565:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 600,
									"src": "1509:67:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 20,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 16,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1517:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1509:47:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 19,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 17,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1536:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1528:27:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 18,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1547:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 23,
									"mutability": "mutable",
									"name": "_reward",
									"nameLocation": "1598:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 600,
									"src": "1582:23:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 22,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1582:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 25,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1627:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 600,
									"src": "1611:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 24,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1611:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 27,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1661:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 600,
									"src": "1646:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 26,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1646:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 29,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1687:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 600,
									"src": "1672:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 28,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1672:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 51,
										"nodeType": "Block",
										"src": "2078:84:0",
										"statements": [
											{
												"expression": {
													"id": 41,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 39,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "2088:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 40,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 32,
														"src": "2096:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2088:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 42,
												"nodeType": "ExpressionStatement",
												"src": "2088:13:0"
											},
											{
												"expression": {
													"id": 45,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 43,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 29,
														"src": "2111:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 44,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 34,
														"src": "2121:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2111:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 46,
												"nodeType": "ExpressionStatement",
												"src": "2111:17:0"
											},
											{
												"expression": {
													"id": 49,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 47,
														"name": "_reward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 23,
														"src": "2138:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 48,
														"name": "reward_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 36,
														"src": "2148:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2138:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 50,
												"nodeType": "ExpressionStatement",
												"src": "2138:17:0"
											}
										]
									},
									"documentation": {
										"id": 30,
										"nodeType": "StructuredDocumentation",
										"src": "1701:298:0",
										"text": " @dev Sets the values for {name} and {symbol}.\n The default value of {decimals} is 18. To select a different value for\n {decimals} you should overload it.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 52,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 37,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "2030:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 52,
												"src": "2016:19:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 31,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2016:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 34,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "2051:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 52,
												"src": "2037:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 33,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2037:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 36,
												"mutability": "mutable",
												"name": "reward_",
												"nameLocation": "2068:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 52,
												"src": "2060:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 35,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2060:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2015:62:0"
									},
									"returnParameters": {
										"id": 38,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2078:0:0"
									},
									"scope": 600,
									"src": "2004:158:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										690
									],
									"body": {
										"id": 61,
										"nodeType": "Block",
										"src": "2296:29:0",
										"statements": [
											{
												"expression": {
													"id": 59,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 27,
													"src": "2313:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 58,
												"id": 60,
												"nodeType": "Return",
												"src": "2306:12:0"
											}
										]
									},
									"documentation": {
										"id": 53,
										"nodeType": "StructuredDocumentation",
										"src": "2168:54:0",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 62,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2236:4:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 55,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2263:8:0"
									},
									"parameters": {
										"id": 54,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2240:2:0"
									},
									"returnParameters": {
										"id": 58,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "2281:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 56,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2281:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2280:15:0"
									},
									"scope": 600,
									"src": "2227:98:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										696
									],
									"body": {
										"id": 71,
										"nodeType": "Block",
										"src": "2509:31:0",
										"statements": [
											{
												"expression": {
													"id": 69,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 29,
													"src": "2526:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 68,
												"id": 70,
												"nodeType": "Return",
												"src": "2519:14:0"
											}
										]
									},
									"documentation": {
										"id": 63,
										"nodeType": "StructuredDocumentation",
										"src": "2331:102:0",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 72,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2447:6:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 65,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2476:8:0"
									},
									"parameters": {
										"id": 64,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2453:2:0"
									},
									"returnParameters": {
										"id": 68,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 72,
												"src": "2494:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 66,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2494:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2493:15:0"
									},
									"scope": 600,
									"src": "2438:102:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										702
									],
									"body": {
										"id": 81,
										"nodeType": "Block",
										"src": "3229:26:0",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 79,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3246:2:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 78,
												"id": 80,
												"nodeType": "Return",
												"src": "3239:9:0"
											}
										]
									},
									"documentation": {
										"id": 73,
										"nodeType": "StructuredDocumentation",
										"src": "2546:613:0",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the value {ERC20} uses, unless this function is\n overridden;\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 82,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "3173:8:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 75,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3204:8:0"
									},
									"parameters": {
										"id": 74,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3181:2:0"
									},
									"returnParameters": {
										"id": 78,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 77,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 82,
												"src": "3222:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 76,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3222:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3221:7:0"
									},
									"scope": 600,
									"src": "3164:91:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										627
									],
									"body": {
										"id": 91,
										"nodeType": "Block",
										"src": "3385:36:0",
										"statements": [
											{
												"expression": {
													"id": 89,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 25,
													"src": "3402:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 88,
												"id": 90,
												"nodeType": "Return",
												"src": "3395:19:0"
											}
										]
									},
									"documentation": {
										"id": 83,
										"nodeType": "StructuredDocumentation",
										"src": "3261:49:0",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 92,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "3324:11:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 85,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3358:8:0"
									},
									"parameters": {
										"id": 84,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3335:2:0"
									},
									"returnParameters": {
										"id": 88,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 87,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 92,
												"src": "3376:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 86,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3376:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3375:9:0"
									},
									"scope": 600,
									"src": "3315:106:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										635
									],
									"body": {
										"id": 105,
										"nodeType": "Block",
										"src": "3562:42:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 101,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 15,
														"src": "3579:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 103,
													"indexExpression": {
														"id": 102,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 95,
														"src": "3589:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3579:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 100,
												"id": 104,
												"nodeType": "Return",
												"src": "3572:25:0"
											}
										]
									},
									"documentation": {
										"id": 93,
										"nodeType": "StructuredDocumentation",
										"src": "3427:47:0",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 106,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3488:9:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 97,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3535:8:0"
									},
									"parameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3506:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 106,
												"src": "3498:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 94,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3498:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3497:17:0"
									},
									"returnParameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 99,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 106,
												"src": "3553:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 98,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3553:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3552:9:0"
									},
									"scope": 600,
									"src": "3479:125:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										645
									],
									"body": {
										"id": 130,
										"nodeType": "Block",
										"src": "3885:104:0",
										"statements": [
											{
												"assignments": [
													118
												],
												"declarations": [
													{
														"constant": false,
														"id": 118,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3903:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 130,
														"src": "3895:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 117,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3895:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 121,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 119,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 715,
														"src": "3911:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 120,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3911:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3895:28:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 123,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 118,
															"src": "3943:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 124,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 109,
															"src": "3950:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 125,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 111,
															"src": "3954:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 122,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 354,
														"src": "3933:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 126,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3933:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 127,
												"nodeType": "ExpressionStatement",
												"src": "3933:28:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 128,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3978:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 116,
												"id": 129,
												"nodeType": "Return",
												"src": "3971:11:0"
											}
										]
									},
									"documentation": {
										"id": 107,
										"nodeType": "StructuredDocumentation",
										"src": "3610:185:0",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `amount`."
									},
									"functionSelector": "a9059cbb",
									"id": 131,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3809:8:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 113,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3861:8:0"
									},
									"parameters": {
										"id": 112,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3826:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 131,
												"src": "3818:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 108,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3818:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 111,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3838:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 131,
												"src": "3830:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 110,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3830:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3817:28:0"
									},
									"returnParameters": {
										"id": 116,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 115,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 131,
												"src": "3879:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 114,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3879:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3878:6:0"
									},
									"scope": 600,
									"src": "3800:189:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										655
									],
									"body": {
										"id": 148,
										"nodeType": "Block",
										"src": "4145:51:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 142,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 21,
															"src": "4162:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 144,
														"indexExpression": {
															"id": 143,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 134,
															"src": "4174:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4162:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 146,
													"indexExpression": {
														"id": 145,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 136,
														"src": "4181:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4162:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 141,
												"id": 147,
												"nodeType": "Return",
												"src": "4155:34:0"
											}
										]
									},
									"documentation": {
										"id": 132,
										"nodeType": "StructuredDocumentation",
										"src": "3995:47:0",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 149,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "4056:9:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 138,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4118:8:0"
									},
									"parameters": {
										"id": 137,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 134,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4074:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 149,
												"src": "4066:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 133,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4066:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 136,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4089:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 149,
												"src": "4081:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 135,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4081:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4065:32:0"
									},
									"returnParameters": {
										"id": 141,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 140,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 149,
												"src": "4136:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 139,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4136:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4135:9:0"
									},
									"scope": 600,
									"src": "4047:149:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										665
									],
									"body": {
										"id": 173,
										"nodeType": "Block",
										"src": "4593:108:0",
										"statements": [
											{
												"assignments": [
													161
												],
												"declarations": [
													{
														"constant": false,
														"id": 161,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4611:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 173,
														"src": "4603:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 160,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4603:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 164,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 162,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 715,
														"src": "4619:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 163,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4619:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4603:28:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 166,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 161,
															"src": "4650:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 167,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 152,
															"src": "4657:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 168,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 154,
															"src": "4666:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 165,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 528,
														"src": "4641:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 169,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4641:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 170,
												"nodeType": "ExpressionStatement",
												"src": "4641:32:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 171,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4690:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 159,
												"id": 172,
												"nodeType": "Return",
												"src": "4683:11:0"
											}
										]
									},
									"documentation": {
										"id": 150,
										"nodeType": "StructuredDocumentation",
										"src": "4202:297:0",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 174,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4513:7:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 156,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4569:8:0"
									},
									"parameters": {
										"id": 155,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 152,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4529:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 174,
												"src": "4521:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 151,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4521:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 154,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4546:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 174,
												"src": "4538:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 153,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4538:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4520:33:0"
									},
									"returnParameters": {
										"id": 159,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 158,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 174,
												"src": "4587:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 157,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4587:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4586:6:0"
									},
									"scope": 600,
									"src": "4504:197:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										677
									],
									"body": {
										"id": 206,
										"nodeType": "Block",
										"src": "5396:153:0",
										"statements": [
											{
												"assignments": [
													188
												],
												"declarations": [
													{
														"constant": false,
														"id": 188,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "5414:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 206,
														"src": "5406:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 187,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5406:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 191,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 189,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 715,
														"src": "5424:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 190,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5424:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5406:30:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 193,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 177,
															"src": "5462:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 194,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 188,
															"src": "5468:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 195,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 181,
															"src": "5477:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 192,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 577,
														"src": "5446:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 196,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5446:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 197,
												"nodeType": "ExpressionStatement",
												"src": "5446:38:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 199,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 177,
															"src": "5504:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 200,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 179,
															"src": "5510:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 201,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 181,
															"src": "5514:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 198,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 354,
														"src": "5494:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 202,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5494:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 203,
												"nodeType": "ExpressionStatement",
												"src": "5494:27:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 204,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5538:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 186,
												"id": 205,
												"nodeType": "Return",
												"src": "5531:11:0"
											}
										]
									},
									"documentation": {
										"id": 175,
										"nodeType": "StructuredDocumentation",
										"src": "4707:551:0",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`.\n - the caller must have allowance for ``from``'s tokens of at least\n `amount`."
									},
									"functionSelector": "23b872dd",
									"id": 207,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "5272:12:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 183,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5372:8:0"
									},
									"parameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 177,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5302:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 207,
												"src": "5294:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 176,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5294:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 179,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5324:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 207,
												"src": "5316:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 178,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5316:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5344:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 207,
												"src": "5336:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 180,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5336:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5284:72:0"
									},
									"returnParameters": {
										"id": 186,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 185,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 207,
												"src": "5390:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 184,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5390:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5389:6:0"
									},
									"scope": 600,
									"src": "5263:286:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 235,
										"nodeType": "Block",
										"src": "6038:140:0",
										"statements": [
											{
												"assignments": [
													218
												],
												"declarations": [
													{
														"constant": false,
														"id": 218,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "6056:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 235,
														"src": "6048:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 217,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6048:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 221,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 219,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 715,
														"src": "6064:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 220,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6064:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6048:28:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 223,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 218,
															"src": "6095:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 224,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 210,
															"src": "6102:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 230,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 226,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 218,
																		"src": "6121:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 227,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 210,
																		"src": "6128:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 225,
																	"name": "allowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 149,
																	"src": "6111:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address,address) view returns (uint256)"
																	}
																},
																"id": 228,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6111:25:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 229,
																"name": "addedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 212,
																"src": "6139:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6111:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 222,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 528,
														"src": "6086:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 231,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6086:64:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 232,
												"nodeType": "ExpressionStatement",
												"src": "6086:64:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 233,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6167:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 216,
												"id": 234,
												"nodeType": "Return",
												"src": "6160:11:0"
											}
										]
									},
									"documentation": {
										"id": 208,
										"nodeType": "StructuredDocumentation",
										"src": "5555:384:0",
										"text": " @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "39509351",
									"id": 236,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increaseAllowance",
									"nameLocation": "5953:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "5979:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "5971:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 209,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5971:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "addedValue",
												"nameLocation": "5996:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "5988:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 211,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5988:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5970:37:0"
									},
									"returnParameters": {
										"id": 216,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 215,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "6032:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 214,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6032:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6031:6:0"
									},
									"scope": 600,
									"src": "5944:234:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 276,
										"nodeType": "Block",
										"src": "6764:328:0",
										"statements": [
											{
												"assignments": [
													247
												],
												"declarations": [
													{
														"constant": false,
														"id": 247,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "6782:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 276,
														"src": "6774:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 246,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6774:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 250,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 248,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 715,
														"src": "6790:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 249,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6790:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6774:28:0"
											},
											{
												"assignments": [
													252
												],
												"declarations": [
													{
														"constant": false,
														"id": 252,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "6820:16:0",
														"nodeType": "VariableDeclaration",
														"scope": 276,
														"src": "6812:24:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 251,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6812:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 257,
												"initialValue": {
													"arguments": [
														{
															"id": 254,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 247,
															"src": "6849:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 255,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 239,
															"src": "6856:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 253,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 149,
														"src": "6839:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 256,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6839:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6812:52:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 261,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 259,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 252,
																"src": "6882:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 260,
																"name": "subtractedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 241,
																"src": "6902:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6882:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
															"id": 262,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6919:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																"typeString": "literal_string \"ERC20: decreased allowance below zero\""
															},
															"value": "ERC20: decreased allowance below zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																"typeString": "literal_string \"ERC20: decreased allowance below zero\""
															}
														],
														"id": 258,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6874:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 263,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6874:85:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 264,
												"nodeType": "ExpressionStatement",
												"src": "6874:85:0"
											},
											{
												"id": 273,
												"nodeType": "UncheckedBlock",
												"src": "6969:95:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 266,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 247,
																	"src": "7002:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 267,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 239,
																	"src": "7009:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 270,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 268,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 252,
																		"src": "7018:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 269,
																		"name": "subtractedValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 241,
																		"src": "7037:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7018:34:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 265,
																"name": "_approve",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 528,
																"src": "6993:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (address,address,uint256)"
																}
															},
															"id": 271,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6993:60:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 272,
														"nodeType": "ExpressionStatement",
														"src": "6993:60:0"
													}
												]
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 274,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "7081:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 245,
												"id": 275,
												"nodeType": "Return",
												"src": "7074:11:0"
											}
										]
									},
									"documentation": {
										"id": 237,
										"nodeType": "StructuredDocumentation",
										"src": "6184:476:0",
										"text": " @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."
									},
									"functionSelector": "a457c2d7",
									"id": 277,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseAllowance",
									"nameLocation": "6674:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 242,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 239,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "6700:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 277,
												"src": "6692:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 238,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6692:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "subtractedValue",
												"nameLocation": "6717:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 277,
												"src": "6709:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 240,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6709:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6691:42:0"
									},
									"returnParameters": {
										"id": 245,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 244,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 277,
												"src": "6758:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 243,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6758:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6757:6:0"
									},
									"scope": 600,
									"src": "6665:427:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 353,
										"nodeType": "Block",
										"src": "7654:710:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 293,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 288,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 280,
																"src": "7672:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 291,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7688:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 290,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7680:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 289,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7680:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 292,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7680:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "7672:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
															"id": 294,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7692:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															},
															"value": "ERC20: transfer from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															}
														],
														"id": 287,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7664:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 295,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7664:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 296,
												"nodeType": "ExpressionStatement",
												"src": "7664:68:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 303,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 298,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 282,
																"src": "7750:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 301,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7764:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 300,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7756:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 299,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7756:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 302,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7756:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "7750:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 304,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7768:37:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															},
															"value": "ERC20: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															}
														],
														"id": 297,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7742:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 305,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7742:64:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 306,
												"nodeType": "ExpressionStatement",
												"src": "7742:64:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 308,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 280,
															"src": "7838:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 309,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 282,
															"src": "7844:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 310,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 284,
															"src": "7848:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 307,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 588,
														"src": "7817:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 311,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7817:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 312,
												"nodeType": "ExpressionStatement",
												"src": "7817:38:0"
											},
											{
												"assignments": [
													314
												],
												"declarations": [
													{
														"constant": false,
														"id": 314,
														"mutability": "mutable",
														"name": "fromBalance",
														"nameLocation": "7874:11:0",
														"nodeType": "VariableDeclaration",
														"scope": 353,
														"src": "7866:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 313,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7866:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 318,
												"initialValue": {
													"baseExpression": {
														"id": 315,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 15,
														"src": "7888:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 317,
													"indexExpression": {
														"id": 316,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 280,
														"src": "7898:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "7888:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7866:37:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 322,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 320,
																"name": "fromBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 314,
																"src": "7921:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 321,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 284,
																"src": "7936:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7921:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
															"id": 323,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7944:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
															},
															"value": "ERC20: transfer amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
															}
														],
														"id": 319,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7913:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 324,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7913:72:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 325,
												"nodeType": "ExpressionStatement",
												"src": "7913:72:0"
											},
											{
												"id": 340,
												"nodeType": "UncheckedBlock",
												"src": "7995:273:0",
												"statements": [
													{
														"expression": {
															"id": 332,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 326,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 15,
																	"src": "8019:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 328,
																"indexExpression": {
																	"id": 327,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 280,
																	"src": "8029:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "8019:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 331,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 329,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 314,
																	"src": "8037:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 330,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 284,
																	"src": "8051:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8037:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8019:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 333,
														"nodeType": "ExpressionStatement",
														"src": "8019:38:0"
													},
													{
														"expression": {
															"id": 338,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 334,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 15,
																	"src": "8234:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 336,
																"indexExpression": {
																	"id": 335,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 282,
																	"src": "8244:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "8234:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 337,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 284,
																"src": "8251:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8234:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 339,
														"nodeType": "ExpressionStatement",
														"src": "8234:23:0"
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 342,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 280,
															"src": "8292:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 343,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 282,
															"src": "8298:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 344,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 284,
															"src": "8302:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 341,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 612,
														"src": "8283:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 345,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8283:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 346,
												"nodeType": "EmitStatement",
												"src": "8278:31:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 348,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 280,
															"src": "8340:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 349,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 282,
															"src": "8346:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 350,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 284,
															"src": "8350:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 347,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 599,
														"src": "8320:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 351,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8320:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 352,
												"nodeType": "ExpressionStatement",
												"src": "8320:37:0"
											}
										]
									},
									"documentation": {
										"id": 278,
										"nodeType": "StructuredDocumentation",
										"src": "7098:443:0",
										"text": " @dev Moves `amount` of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`."
									},
									"id": 354,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "7555:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 285,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 280,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "7582:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 354,
												"src": "7574:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 279,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7574:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 282,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "7604:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 354,
												"src": "7596:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 281,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7596:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 284,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "7624:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 354,
												"src": "7616:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 283,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7616:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7564:72:0"
									},
									"returnParameters": {
										"id": 286,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7654:0:0"
									},
									"scope": 600,
									"src": "7546:818:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 410,
										"nodeType": "Block",
										"src": "8705:470:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 368,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 363,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 357,
																"src": "8723:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 366,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8742:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 365,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8734:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 364,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "8734:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 367,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8734:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "8723:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 369,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8746:33:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															},
															"value": "ERC20: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															}
														],
														"id": 362,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8715:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 370,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8715:65:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 371,
												"nodeType": "ExpressionStatement",
												"src": "8715:65:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 375,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8820:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 374,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8812:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 373,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8812:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 376,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8812:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 377,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 357,
															"src": "8824:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 378,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 359,
															"src": "8833:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 372,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 588,
														"src": "8791:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 379,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8791:49:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 380,
												"nodeType": "ExpressionStatement",
												"src": "8791:49:0"
											},
											{
												"expression": {
													"id": 383,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 381,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 25,
														"src": "8851:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 382,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 359,
														"src": "8867:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8851:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 384,
												"nodeType": "ExpressionStatement",
												"src": "8851:22:0"
											},
											{
												"id": 391,
												"nodeType": "UncheckedBlock",
												"src": "8883:175:0",
												"statements": [
													{
														"expression": {
															"id": 389,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 385,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 15,
																	"src": "9019:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 387,
																"indexExpression": {
																	"id": 386,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 357,
																	"src": "9029:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "9019:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 388,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 359,
																"src": "9041:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9019:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 390,
														"nodeType": "ExpressionStatement",
														"src": "9019:28:0"
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 395,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9089:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 394,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9081:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 393,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9081:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 396,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9081:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 397,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 357,
															"src": "9093:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 398,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 359,
															"src": "9102:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 392,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 612,
														"src": "9072:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 399,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9072:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 400,
												"nodeType": "EmitStatement",
												"src": "9067:42:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 404,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9148:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 403,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9140:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 402,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9140:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 405,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9140:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 406,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 357,
															"src": "9152:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 407,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 359,
															"src": "9161:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 401,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 599,
														"src": "9120:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 408,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9120:48:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 409,
												"nodeType": "ExpressionStatement",
												"src": "9120:48:0"
											}
										]
									},
									"documentation": {
										"id": 355,
										"nodeType": "StructuredDocumentation",
										"src": "8370:265:0",
										"text": "@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements:\n - `account` cannot be the zero address."
									},
									"id": 411,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "8649:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 360,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 357,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8663:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 411,
												"src": "8655:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 356,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8655:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 359,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "8680:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 411,
												"src": "8672:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 358,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8672:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8654:33:0"
									},
									"returnParameters": {
										"id": 361,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8705:0:0"
									},
									"scope": 600,
									"src": "8640:535:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 482,
										"nodeType": "Block",
										"src": "9560:594:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 425,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 420,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 414,
																"src": "9578:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 423,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9597:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 422,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9589:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 421,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9589:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 424,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9589:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "9578:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 426,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9601:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															},
															"value": "ERC20: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															}
														],
														"id": 419,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9570:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 427,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9570:67:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 428,
												"nodeType": "ExpressionStatement",
												"src": "9570:67:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 430,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 414,
															"src": "9669:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 433,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9686:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 432,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9678:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 431,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9678:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 434,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9678:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 435,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 416,
															"src": "9690:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 429,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 588,
														"src": "9648:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 436,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9648:49:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 437,
												"nodeType": "ExpressionStatement",
												"src": "9648:49:0"
											},
											{
												"assignments": [
													439
												],
												"declarations": [
													{
														"constant": false,
														"id": 439,
														"mutability": "mutable",
														"name": "accountBalance",
														"nameLocation": "9716:14:0",
														"nodeType": "VariableDeclaration",
														"scope": 482,
														"src": "9708:22:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 438,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9708:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 443,
												"initialValue": {
													"baseExpression": {
														"id": 440,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 15,
														"src": "9733:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 442,
													"indexExpression": {
														"id": 441,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 414,
														"src": "9743:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "9733:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9708:43:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 447,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 445,
																"name": "accountBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 439,
																"src": "9769:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 446,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 416,
																"src": "9787:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9769:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365",
															"id": 448,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9795:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
															},
															"value": "ERC20: burn amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
															}
														],
														"id": 444,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9761:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 449,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9761:71:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 450,
												"nodeType": "ExpressionStatement",
												"src": "9761:71:0"
											},
											{
												"id": 463,
												"nodeType": "UncheckedBlock",
												"src": "9842:194:0",
												"statements": [
													{
														"expression": {
															"id": 457,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 451,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 15,
																	"src": "9866:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 453,
																"indexExpression": {
																	"id": 452,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 414,
																	"src": "9876:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "9866:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 456,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 454,
																	"name": "accountBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 439,
																	"src": "9887:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 455,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 416,
																	"src": "9904:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9887:23:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9866:44:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 458,
														"nodeType": "ExpressionStatement",
														"src": "9866:44:0"
													},
													{
														"expression": {
															"id": 461,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 459,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 25,
																"src": "10003:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "-=",
															"rightHandSide": {
																"id": 460,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 416,
																"src": "10019:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10003:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 462,
														"nodeType": "ExpressionStatement",
														"src": "10003:22:0"
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 465,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 414,
															"src": "10060:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 468,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10077:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 467,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10069:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 466,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10069:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 469,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10069:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 470,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 416,
															"src": "10081:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 464,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 612,
														"src": "10051:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10051:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 472,
												"nodeType": "EmitStatement",
												"src": "10046:42:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 474,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 414,
															"src": "10119:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 477,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10136:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 476,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10128:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 475,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10128:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 478,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10128:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 479,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 416,
															"src": "10140:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 473,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 599,
														"src": "10099:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 480,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10099:48:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 481,
												"nodeType": "ExpressionStatement",
												"src": "10099:48:0"
											}
										]
									},
									"documentation": {
										"id": 412,
										"nodeType": "StructuredDocumentation",
										"src": "9181:309:0",
										"text": " @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements:\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."
									},
									"id": 483,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "9504:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 417,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 414,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "9518:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 483,
												"src": "9510:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 413,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9510:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 416,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "9535:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 483,
												"src": "9527:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 415,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9527:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9509:33:0"
									},
									"returnParameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9560:0:0"
									},
									"scope": 600,
									"src": "9495:659:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 527,
										"nodeType": "Block",
										"src": "10690:257:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 499,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 494,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 486,
																"src": "10708:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 497,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10725:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 496,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10717:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 495,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "10717:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 498,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10717:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "10708:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
															"id": 500,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10729:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															},
															"value": "ERC20: approve from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															}
														],
														"id": 493,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10700:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 501,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10700:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 502,
												"nodeType": "ExpressionStatement",
												"src": "10700:68:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 509,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 504,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 488,
																"src": "10786:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 507,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10805:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 506,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10797:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 505,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "10797:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 508,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10797:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "10786:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
															"id": 510,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10809:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															},
															"value": "ERC20: approve to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															}
														],
														"id": 503,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10778:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 511,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10778:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 512,
												"nodeType": "ExpressionStatement",
												"src": "10778:68:0"
											},
											{
												"expression": {
													"id": 519,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 513,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 21,
																"src": "10857:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 516,
															"indexExpression": {
																"id": 514,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 486,
																"src": "10869:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10857:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 517,
														"indexExpression": {
															"id": 515,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 488,
															"src": "10876:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10857:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 518,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 490,
														"src": "10887:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10857:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 520,
												"nodeType": "ExpressionStatement",
												"src": "10857:36:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 522,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 486,
															"src": "10917:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 523,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 488,
															"src": "10924:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 524,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 490,
															"src": "10933:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 521,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 621,
														"src": "10908:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 525,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10908:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 526,
												"nodeType": "EmitStatement",
												"src": "10903:37:0"
											}
										]
									},
									"documentation": {
										"id": 484,
										"nodeType": "StructuredDocumentation",
										"src": "10160:412:0",
										"text": " @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."
									},
									"id": 528,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "10586:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 491,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 486,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10612:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 528,
												"src": "10604:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 485,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10604:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 488,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10635:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 528,
												"src": "10627:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 487,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10627:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 490,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "10660:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 528,
												"src": "10652:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 489,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10652:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10594:78:0"
									},
									"returnParameters": {
										"id": 492,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10690:0:0"
									},
									"scope": 600,
									"src": "10577:370:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 576,
										"nodeType": "Block",
										"src": "11348:385:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 540,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 538,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 533,
														"src": "11362:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 539,
														"name": "_reward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 23,
														"src": "11373:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "11362:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 543,
												"nodeType": "IfStatement",
												"src": "11358:55:0",
												"trueBody": {
													"id": 542,
													"nodeType": "Block",
													"src": "11382:31:0",
													"statements": [
														{
															"functionReturnParameters": 537,
															"id": 541,
															"nodeType": "Return",
															"src": "11396:7:0"
														}
													]
												}
											},
											{
												"assignments": [
													545
												],
												"declarations": [
													{
														"constant": false,
														"id": 545,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "11430:16:0",
														"nodeType": "VariableDeclaration",
														"scope": 576,
														"src": "11422:24:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 544,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11422:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 550,
												"initialValue": {
													"arguments": [
														{
															"id": 547,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 531,
															"src": "11459:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 548,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 533,
															"src": "11466:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 546,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 149,
														"src": "11449:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 549,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11449:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11422:52:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 557,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 551,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 545,
														"src": "11488:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 554,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11513:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 553,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "11513:7:0",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 552,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "11508:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 555,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11508:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 556,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "11522:3:0",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "11508:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11488:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 575,
												"nodeType": "IfStatement",
												"src": "11484:243:0",
												"trueBody": {
													"id": 574,
													"nodeType": "Block",
													"src": "11527:200:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 561,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 559,
																			"name": "currentAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 545,
																			"src": "11549:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"id": 560,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 535,
																			"src": "11569:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "11549:26:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "45524332303a20696e73756666696369656e7420616c6c6f77616e6365",
																		"id": 562,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11577:31:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe",
																			"typeString": "literal_string \"ERC20: insufficient allowance\""
																		},
																		"value": "ERC20: insufficient allowance"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe",
																			"typeString": "literal_string \"ERC20: insufficient allowance\""
																		}
																	],
																	"id": 558,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "11541:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 563,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11541:68:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 564,
															"nodeType": "ExpressionStatement",
															"src": "11541:68:0"
														},
														{
															"id": 573,
															"nodeType": "UncheckedBlock",
															"src": "11623:94:0",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 566,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 531,
																				"src": "11660:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 567,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 533,
																				"src": "11667:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 570,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 568,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 545,
																					"src": "11676:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 569,
																					"name": "amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 535,
																					"src": "11695:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "11676:25:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 565,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 528,
																			"src": "11651:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																				"typeString": "function (address,address,uint256)"
																			}
																		},
																		"id": 571,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11651:51:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 572,
																	"nodeType": "ExpressionStatement",
																	"src": "11651:51:0"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 529,
										"nodeType": "StructuredDocumentation",
										"src": "10953:270:0",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n Does not update the allowance amount in case of infinite allowance.\n Revert if not enough allowance is available.\n Might emit an {Approval} event."
									},
									"id": 577,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "11237:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 536,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 531,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "11270:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 577,
												"src": "11262:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 530,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11262:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 533,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "11293:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 577,
												"src": "11285:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 532,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11285:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 535,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "11318:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 577,
												"src": "11310:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 534,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11310:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11252:78:0"
									},
									"returnParameters": {
										"id": 537,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11348:0:0"
									},
									"scope": 600,
									"src": "11228:505:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 587,
										"nodeType": "Block",
										"src": "12436:2:0",
										"statements": []
									},
									"documentation": {
										"id": 578,
										"nodeType": "StructuredDocumentation",
										"src": "11739:573:0",
										"text": " @dev Hook that is called before any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n will be transferred to `to`.\n - when `from` is zero, `amount` tokens will be minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 588,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nameLocation": "12326:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 585,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 580,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "12364:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 588,
												"src": "12356:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 579,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12356:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 582,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "12386:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 588,
												"src": "12378:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 581,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12378:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 584,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "12406:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 588,
												"src": "12398:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 583,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12398:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12346:72:0"
									},
									"returnParameters": {
										"id": 586,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12436:0:0"
									},
									"scope": 600,
									"src": "12317:121:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 598,
										"nodeType": "Block",
										"src": "13144:2:0",
										"statements": []
									},
									"documentation": {
										"id": 589,
										"nodeType": "StructuredDocumentation",
										"src": "12444:577:0",
										"text": " @dev Hook that is called after any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n has been transferred to `to`.\n - when `from` is zero, `amount` tokens have been minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 599,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_afterTokenTransfer",
									"nameLocation": "13035:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 596,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 591,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "13072:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 599,
												"src": "13064:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 590,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13064:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 593,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "13094:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 599,
												"src": "13086:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 592,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13086:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 595,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "13114:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 599,
												"src": "13106:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 594,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13106:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13054:72:0"
									},
									"returnParameters": {
										"id": 597,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13144:0:0"
									},
									"scope": 600,
									"src": "13026:120:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 601,
							"src": "1401:11747:0",
							"usedErrors": []
						}
					],
					"src": "105:13044:0"
				},
				"id": 0
			},
			"token2/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "token2/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							678
						]
					},
					"id": 679,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 602,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 603,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:1",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 678,
							"linearizedBaseContracts": [
								678
							],
							"name": "IERC20",
							"nameLocation": "212:6:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 604,
										"nodeType": "StructuredDocumentation",
										"src": "225:158:1",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 612,
									"name": "Transfer",
									"nameLocation": "394:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 611,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 606,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "419:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 612,
												"src": "403:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 605,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "403:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 608,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "441:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 612,
												"src": "425:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 607,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "425:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 610,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "453:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 612,
												"src": "445:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 609,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "445:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "402:57:1"
									},
									"src": "388:72:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 613,
										"nodeType": "StructuredDocumentation",
										"src": "466:148:1",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 621,
									"name": "Approval",
									"nameLocation": "625:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 620,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 615,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "650:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 621,
												"src": "634:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 614,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "634:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 617,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "673:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 621,
												"src": "657:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 616,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 619,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "690:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 621,
												"src": "682:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 618,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "682:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "633:63:1"
									},
									"src": "619:78:1"
								},
								{
									"documentation": {
										"id": 622,
										"nodeType": "StructuredDocumentation",
										"src": "703:66:1",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 627,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 623,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:1"
									},
									"returnParameters": {
										"id": 626,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 625,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 627,
												"src": "820:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 624,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:1"
									},
									"scope": 678,
									"src": "774:55:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 628,
										"nodeType": "StructuredDocumentation",
										"src": "835:72:1",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 635,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 631,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 630,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 635,
												"src": "931:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 629,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:1"
									},
									"returnParameters": {
										"id": 634,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 633,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 635,
												"src": "971:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 632,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:1"
									},
									"scope": 678,
									"src": "912:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 636,
										"nodeType": "StructuredDocumentation",
										"src": "986:202:1",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 645,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1202:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 641,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 638,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1219:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 645,
												"src": "1211:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 637,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1211:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 640,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1231:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 645,
												"src": "1223:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 639,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1210:28:1"
									},
									"returnParameters": {
										"id": 644,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 643,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 645,
												"src": "1257:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 642,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1257:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1256:6:1"
									},
									"scope": 678,
									"src": "1193:70:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 646,
										"nodeType": "StructuredDocumentation",
										"src": "1269:264:1",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 655,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1547:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 651,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 648,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1565:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 655,
												"src": "1557:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 647,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1557:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 650,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1580:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 655,
												"src": "1572:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 649,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1572:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1556:32:1"
									},
									"returnParameters": {
										"id": 654,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 653,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 655,
												"src": "1612:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 652,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1612:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1611:9:1"
									},
									"scope": 678,
									"src": "1538:83:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 656,
										"nodeType": "StructuredDocumentation",
										"src": "1627:642:1",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 665,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2283:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 661,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 658,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2299:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 665,
												"src": "2291:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 657,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2291:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 660,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2316:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 665,
												"src": "2308:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 659,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2308:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2290:33:1"
									},
									"returnParameters": {
										"id": 664,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 663,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 665,
												"src": "2342:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 662,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2342:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2341:6:1"
									},
									"scope": 678,
									"src": "2274:74:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 666,
										"nodeType": "StructuredDocumentation",
										"src": "2354:287:1",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 677,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2655:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 673,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 668,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2685:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 677,
												"src": "2677:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 667,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2677:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 670,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2707:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 677,
												"src": "2699:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 669,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2699:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 672,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2727:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 677,
												"src": "2719:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 671,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2719:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2667:72:1"
									},
									"returnParameters": {
										"id": 676,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 675,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 677,
												"src": "2758:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 674,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2758:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2757:6:1"
									},
									"scope": 678,
									"src": "2646:118:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 679,
							"src": "202:2564:1",
							"usedErrors": []
						}
					],
					"src": "106:2661:1"
				},
				"id": 1
			},
			"token2/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "token2/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							678
						],
						"IERC20Metadata": [
							703
						]
					},
					"id": 704,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 680,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "110:23:2"
						},
						{
							"absolutePath": "token2/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 681,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 704,
							"sourceUnit": 679,
							"src": "135:23:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 683,
										"name": "IERC20",
										"nameLocations": [
											"305:6:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 678,
										"src": "305:6:2"
									},
									"id": 684,
									"nodeType": "InheritanceSpecifier",
									"src": "305:6:2"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 682,
								"nodeType": "StructuredDocumentation",
								"src": "160:116:2",
								"text": " @dev Interface for the optional metadata functions from the ERC20 standard.\n _Available since v4.1._"
							},
							"fullyImplemented": false,
							"id": 703,
							"linearizedBaseContracts": [
								703,
								678
							],
							"name": "IERC20Metadata",
							"nameLocation": "287:14:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 685,
										"nodeType": "StructuredDocumentation",
										"src": "318:54:2",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 690,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "386:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 686,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "390:2:2"
									},
									"returnParameters": {
										"id": 689,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 688,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "416:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 687,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "416:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "415:15:2"
									},
									"scope": 703,
									"src": "377:54:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 691,
										"nodeType": "StructuredDocumentation",
										"src": "437:56:2",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 696,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "507:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 692,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "513:2:2"
									},
									"returnParameters": {
										"id": 695,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 694,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "539:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 693,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "539:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "538:15:2"
									},
									"scope": 703,
									"src": "498:56:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 697,
										"nodeType": "StructuredDocumentation",
										"src": "560:65:2",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 702,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "639:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 698,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "647:2:2"
									},
									"returnParameters": {
										"id": 701,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 700,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 702,
												"src": "673:5:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 699,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "673:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "672:7:2"
									},
									"scope": 703,
									"src": "630:50:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 704,
							"src": "277:405:2",
							"usedErrors": []
						}
					],
					"src": "110:573:2"
				},
				"id": 2
			},
			"token2/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "token2/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							725
						]
					},
					"id": 726,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 705,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:3"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 706,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:3",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 725,
							"linearizedBaseContracts": [
								725
							],
							"name": "Context",
							"nameLocation": "626:7:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 714,
										"nodeType": "Block",
										"src": "702:34:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 711,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 712,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "723:6:3",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 710,
												"id": 713,
												"nodeType": "Return",
												"src": "712:17:3"
											}
										]
									},
									"id": 715,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 707,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:3"
									},
									"returnParameters": {
										"id": 710,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 709,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 715,
												"src": "693:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 708,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:3"
									},
									"scope": 725,
									"src": "640:96:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 723,
										"nodeType": "Block",
										"src": "809:32:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 720,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 721,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "830:4:3",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 719,
												"id": 722,
												"nodeType": "Return",
												"src": "819:15:3"
											}
										]
									},
									"id": 724,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 716,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:3"
									},
									"returnParameters": {
										"id": 719,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 718,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 724,
												"src": "793:14:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 717,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:3"
									},
									"scope": 725,
									"src": "742:99:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 726,
							"src": "608:235:3",
							"usedErrors": []
						}
					],
					"src": "86:758:3"
				},
				"id": 3
			}
		}
	}
}