package mvm

import (
	"encoding/hex"
	"fmt"
	"testing"

	"github.com/ethereum/go-ethereum/common"
	"github.com/holiman/uint256"
	"github.com/stretchr/testify/assert"
	pb "gitlab.com/meta-node/meta-node/pkg/proto"
)

func init() {
	InitMVMApi(nil, nil)
}

func TestDeploy(t *testing.T) {
	mvmApi := GetMVMApiInstance()
	sender, _ := hex.DecodeString("a6c8120e1aa4f748d92dab043e17bd06c73ddc33")
	lastHash, _ := hex.DecodeString("0000000000000000000000000000000000000000000000000000000000000000")
	amount := uint256.NewInt(0)
	contractConstructor, _ := hex.DecodeString("")
	// transaction data
	rs := mvmApi.Deploy(
		sender,
		lastHash,
		contractConstructor,
		amount,
		1000000000,
		50000000000000,
		123,
		5000000000000,
		123456789,
		1000000000,
		uint256.NewInt(1),
		common.HexToAddress("0000000000000000000000000000000000000000000000000000000000000000"),
	)
	assert.Equal(t, rs.Status, pb.RECEIPT_STATUS_RETURNED)
	fmt.Print(common.Bytes2Hex(rs.MapCodeChange["9cdcf5d6140ece8a1afbe80b436da5718ce91f27"]))
	fmt.Print(rs)
}

// func initStateDb() {
// 	testAddress := common.FromHex("9cdcf5d6140ece8a1afbe80b436da5718ce91f27")
// 	testAccountState := state.AccountStateFromProto(&pb.AccountState{
// 		Address: testAddress,
// 		SmartContractState: &pb.SmartContractState{
// 			CodeHash: common.FromHex("c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470"),
// 		},
// 	})
// 	stateDB := state_db.NewStateDB(
// 		nil,
// 		nil,
// 		nil,
// 		map[common.Address]state.IAccountState{
// 			common.BytesToAddress(testAddress): testAccountState,
// 		},
// 		nil,
// 		map[common.Address]smart_contract.ISmartContractData{
// 			common.BytesToAddress(testAddress): testAccountState,
// 		},
// 		make(chan smart_contract.ISmartContractData, 1),
// 		nil,
// 		nil,
// 	)
// }

func TestCall(t *testing.T) {

}

// func initTestMvm() {
// 	asDb := state.GetAccountStatesDBInstance()
// 	scDb := state.GetSmartContractStatesDBInstance()
// 	address, _ := hex.DecodeString("8297dc63cb32faa96f5d250a5b015fd6d1ab745a")
// 	lastHash, _ := hex.DecodeString("0000000000000000000000000000000000000000000000000000000000000000")
// 	balance := uint256.NewInt(10).Bytes()
// 	pendingBalance := uint256.NewInt(100).Bytes()
// 	codeHash, _ := hex.DecodeString("373ae13d470a2073bb6e6a62ff6ae30873e1a7586e9666abdaa5cb90d37c3f48")
// 	asDb.AddAccountState(&pb.AccountState{
// 		Address:        address,
// 		LastHash:       lastHash,
// 		Balance:        balance,
// 		PendingBalance: pendingBalance,
// 		SmartContractInfo: &pb.SmartContractInfo{
// 			StorageHost: "127.0.0.1:3011",
// 			CodeHash:    codeHash,
// 		},
// 	})
// 	code, _ := hex.DecodeString("60806040526004361061001e5760003560e01c8063cfda547814610023575b600080fd5b6100366100313660046100b6565b610052565b6040516001600160a01b03909116815260200160405180910390f35b6000808260001b905080858560405161006a906100a9565b6001600160a01b03909216825260208201526040018190604051809103906000f590508015801561009f573d6000803e3d6000fd5b5095945050505050565b610150806100f883390190565b6000806000606084860312156100cb57600080fd5b83356001600160a01b03811681146100e257600080fd5b9560208501359550604090940135939250505056fe60806040526040516101503803806101508339810160408190526100229161004b565b600080546001600160a01b0319166001600160a01b039390931692909217909155600155610085565b6000806040838503121561005e57600080fd5b82516001600160a01b038116811461007557600080fd5b6020939093015192949293505050565b60bd806100936000396000f3fe6080604052348015600f57600080fd5b5060043610603c5760003560e01c806312065fe01460415780638da5cb5b146056578063c298557814607f575b600080fd5b475b6040519081526020015b60405180910390f35b6000546068906001600160a01b031681565b6040516001600160a01b039091168152602001604d565b60436001548156fea2646970667358221220a49c9ea1edb1b6c07911d1dbfe6ce618d0ae37775b38a371c19dc0135e279c2d64736f6c63430008110033a26469706673582212209174b8941626ed64982f151fac0885b4173ffddb54f1cfcf4b03a747d3e90fb364736f6c63430008110033")
// 	storage := make(map[string][]byte)
// 	storage["0000000000000000000000000000000000000000000000000000000000000000"] = common.FromHex("0000000000000000000000000000000000000000000000000000000000000009")
// 	scDb.AddSmartContractState(common.BytesToAddress(address), &pb.SmartContractState{
// 		Code:    code,
// 		Storage: storage,
// 	})
// }

// func TestCall(t *testing.T) {
// 	setConfig()
// 	initAccountState()
// 	// setup smartcontract db
// 	sender, _ := hex.DecodeString("a6c8120e1aa4f748d92dab043e17bd06c73ddc3aa")
// 	address, _ := hex.DecodeString("8297dc63cb32faa96f5d250a5b015fd6d1ab745a")
// 	intput, _ := hex.DecodeString("cfda54780000000000000000000000004dbbd1013366d50e046cea782fbb18a8dd95579f00000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000309")
// 	amount, _ := hex.DecodeString("0000000000000000000000000000000000000000000000000000000000000000")

// 	rs := Call(
// 		sender,
// 		address,
// 		intput,
// 		amount,
// 	)
// 	fmt.Println(rs)
// }

// func TestCallWithTransfer(t *testing.T) {
// 	setConfig()
// 	initAccountState()
// 	// setup smartcontract db
// 	sender, _ := hex.DecodeString("a6c8120e1aa4f748d92dab043e17bd06c73ddc3b")
// 	address, _ := hex.DecodeString("8297dc63cb32faa96f5d250a5b015fd6d1ab745a")
// 	intput, _ := hex.DecodeString("a0e702670000000000000000000000005b38da6a701c568545dcfcb03fcb875f56beddc40000000000000000000000000000000000000000000000000000000000000001")
// 	amount, _ := hex.DecodeString("0000000000000000000000000000000000000000000000000000000000000000")

// 	rs := Call(
// 		sender,
// 		address,
// 		intput,
// 		amount,
// 	)
// 	fmt.Println(rs)
// }

// func TestDeployThenCall(t *testing.T) {
// 	setConfig()
// 	sender, _ := hex.DecodeString("a6c8120e1aa4f748d92dab043e17bd06c73ddc3a")
// 	lastHash, _ := hex.DecodeString("0000000000000000000000000000000000000000000000000000000000000000")
// 	amount, _ := hex.DecodeString("0000000000000000000000000000000000000000000000000000000000000000")
// 	contractConstructor, _ := hex.DecodeString("608060405234801561001057600080fd5b5061027d806100206000396000f3fe60806040526004361061001e5760003560e01c8063cfda547814610023575b600080fd5b6100366100313660046100b6565b610052565b6040516001600160a01b03909116815260200160405180910390f35b6000808260001b905080858560405161006a906100a9565b6001600160a01b03909216825260208201526040018190604051809103906000f590508015801561009f573d6000803e3d6000fd5b5095945050505050565b610150806100f883390190565b6000806000606084860312156100cb57600080fd5b83356001600160a01b03811681146100e257600080fd5b9560208501359550604090940135939250505056fe60806040526040516101503803806101508339810160408190526100229161004b565b600080546001600160a01b0319166001600160a01b039390931692909217909155600155610085565b6000806040838503121561005e57600080fd5b82516001600160a01b038116811461007557600080fd5b6020939093015192949293505050565b60bd806100936000396000f3fe6080604052348015600f57600080fd5b5060043610603c5760003560e01c806312065fe01460415780638da5cb5b146056578063c298557814607f575b600080fd5b475b6040519081526020015b60405180910390f35b6000546068906001600160a01b031681565b6040516001600160a01b039091168152602001604d565b60436001548156fea2646970667358221220a49c9ea1edb1b6c07911d1dbfe6ce618d0ae37775b38a371c19dc0135e279c2d64736f6c63430008110033a26469706673582212209174b8941626ed64982f151fac0885b4173ffddb54f1cfcf4b03a747d3e90fb364736f6c63430008110033")
// 	rs := Deploy(
// 		sender,
// 		lastHash,
// 		contractConstructor,
// 		amount,
// 	)
// 	fmt.Println(rs)
// 	assert.Equal(t, rs.ExitReason, (byte)(0))
// 	scsdb := state.GetSmartContractStatesDBInstance()
// 	asdb := state.GetAccountStatesDBInstance()

// 	// simulate process in message handler to update smart contract state after execute
// 	if rs.ExitReason != 2 { // 2 mean threw; if threw then nothing will be update
// 		// update balance, code hash, storage root, log hash
// 		nodeConnectionStr := fmt.Sprintf(
// 			"%v:%d",
// 			config.GetConfig().ParentConnection["ip"].(string),
// 			(int)(config.GetConfig().ParentConnection["port"].(float64)),
// 		)
// 		for i, v := range rs.AddBalanceChange {
// 			asdb.AddBalance(common.FromHex(i), cu.BytesToUint256(v), nodeConnectionStr)
// 		}

// 		for i, v := range rs.SubBalanceChange {
// 			asdb.SubBalance(common.FromHex(i), cu.BytesToUint256(v), nodeConnectionStr)
// 		}

// 		// update storage, code
// 		for i, v := range rs.StorageChange {
// 			mapkv := make(map[string][]byte)
// 			for _, kv := range v {
// 				mapkv[hex.EncodeToString(kv[:32])] = kv[32:]
// 			}
// 			scsdb.AddUpdatedStorage(common.HexToAddress(i), mapkv, rs.StorageRoots[i])
// 		}
// 		for i, v := range rs.NewlyDeploy {
// 			asdb.UpdateCodeHash(common.FromHex(i), rs.NewlyDeployCodeHash[i], nodeConnectionStr)
// 			scsdb.AddUpdatedCode(common.HexToAddress(i), v)

// 		}

// 	}

// 	cSender, _ := hex.DecodeString("a6c8120e1aa4f748d92dab043e17bd06c73ddc3a")
// 	cAddress, _ := hex.DecodeString("8297dc63cb32faa96f5d250a5b015fd6d1ab745a")
// 	cIntput, _ := hex.DecodeString("cfda54780000000000000000000000004dbbd1013366d50e046cea782fbb18a8dd95579f00000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000309")
// 	cAmount, _ := hex.DecodeString("0000000000000000000000000000000000000000000000000000000000000000")

// 	cRs := Call(
// 		cSender,
// 		cAddress,
// 		cIntput,
// 		cAmount,
// 	)
// 	fmt.Println(cRs)

// }

// func TestGetCommissionHash(t *testing.T) {
// 	testCommissionStates := &pb.MapAddressCommissionStates{
// 		CommissionStates: make(map[string]*pb.SmartContractCommissionState),
// 	}
// 	testCommissionStates.CommissionStates["8297dc63cb32faa96f5d250a5b015fd6d1ab745a"] = &pb.SmartContractCommissionState{
// 		CommissionAddress: common.FromHex("8297dc63cb32faa96f5d250a5b015fd6d1ab745a"),
// 		ExpiredAt:         uint64(time.Now().Unix()),
// 		AmountLeft:        uint256.NewInt(100).Bytes(),
// 	}
// 	rs := GetCommissionHash(testCommissionStates)
// 	fmt.Println(common.Bytes2Hex(rs))
// 	fmt.Println("1")
// }
